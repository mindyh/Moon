// This is just a sample script. Paste your real code (javascript or HTML) here.
if ('this_is' == /an_example/) {
    of_beautifier();
} else {
    var a = b ? (c % d) : e[f];
}
require = function t(e, i, n) {
    function r(a, s) {
        if (!i[a]) {
            if (!e[a]) {
                var h = "function" == typeof require && require;
                if (!s && h) return h(a, !0);
                if (o) return o(a, !0);
                var u = new Error("Cannot find module '" + a + "'");
                throw u.code = "MODULE_NOT_FOUND", u
            }
            var c = i[a] = {
                exports: {}
            };
            e[a][0].call(c.exports, function(t) {
                var i = e[a][1][t];
                return r(i ? i : t)
            }, c, c.exports, t, e, i, n)
        }
        return i[a].exports
    }
    for (var o = "function" == typeof require && require, a = 0; a < n.length; a++) r(n[a]);
    return r
}({
    1: [function(t, e, i) {
        "use strict";

        function n(t) {
            o.forOwn(t, function(t, e) {
                i.assets.objs[e] = "assets/models/moonbeast/" + e + "/" + e + ".obj.txt", t && n(t)
            })
        }

        function r(t) {
            o.forEach(t, function(t, e) {
                t.path ? i.assets.objs[e] = t.path : i.assets.objs[e] = t
            })
        }
        var o = t("lodash");
        i.assets = {
            objs: {
                coin: "assets/models/misc/coin.obj.txt"
            },
            textures: {
                ground: "assets/textures/ground/ground_new_v003.jpg",
                groundNormal: "assets/textures/ground/ground_new_normal_v002.jpg",
                village: "assets/textures/buildings/burnt_houses_v004.jpg",
                back: "assets/textures/background/back.jpg",
                floor: "assets/textures/background/fllor.jpg",
                front: "assets/textures/background/front.jpg",
                left: "assets/textures/background/left.jpg",
                right: "assets/textures/background/right.jpg",
                roof: "assets/textures/background/roof.jpg",
                moonbeastHeadBump: "assets/textures/moonbeast/moonbeast_head_bump_ALL.jpg",
                moonbeastHeadDiff: "assets/textures/moonbeast/moonbeast_head_diff_ALL.jpg",
                moonbeastHeadGlow: "assets/textures/moonbeast/moonbeast_head_diff_GLOW_02.jpg",
                moonbeastHandBump: "assets/textures/moonbeast/moonbeast_hand_bump.jpg",
                moonbeastHandDiff: "assets/textures/moonbeast/moonbeast_hand_COMP.jpg",
                moonbeastHandGlow: "assets/textures/moonbeast/moonbeast_hand_GLOW.jpg",
                moonbeastLegsBump: "assets/textures/moonbeast/moonbeast_legs_bump.jpg",
                moonbeastLegsDiff: "assets/textures/moonbeast/moonbeast_legs_COMP.jpg",
                moonbeastLegsGlow: "assets/textures/moonbeast/moonbeast_legs_GLOW.jpg",
                moonbeastABLMNBump: "assets/textures/moonbeast/moonbeast_segments_ABLMN_bump.jpg",
                moonbeastABLMNDiff: "assets/textures/moonbeast/moonbeast_segments_ABLMN_COMP.jpg",
                moonbeastABLMNGlow: "assets/textures/moonbeast/moonbeast_segments_ABLMN_GLOW_02.jpg",
                moonbeastCDEFGHIJKBump: "assets/textures/moonbeast/moonbeast_segments_CDEFGHIJK_bump.jpg",
                moonbeastCDEFGHIJKDiff: "assets/textures/moonbeast/moonbeast_segments_CDEFGHIJK_COMP.jpg",
                moonbeastCDEFGHIJKGlow: "assets/textures/moonbeast/moonbeast_segments_CDEFGHIJK_GLOW_02.jpg",
                moonbeastOPQRSTUVWBump: "assets/textures/moonbeast/moonbeast_segments_OPQRSTUVW_bump.jpg",
                moonbeastOPQRSTUVWDiff: "assets/textures/moonbeast/moonbeast_segments_OPQRSTUVW_COMP.jpg",
                moonbeastOPQRSTUVWGlow: "assets/textures/moonbeast/moonbeast_segments_OPQRSTUVW_GLOW_02.jpg",
                glow: "assets/textures/moonbeast/glow-circle.png",
                kubo_run: "assets/textures/kubo/run.png",
                kubo_jump_up_0: "assets/textures/kubo/jump/up_0.png",
                kubo_jump_air_0: "assets/textures/kubo/jump/air_0.png",
                kubo_jump_falling_0: "assets/textures/kubo/jump/falling_0.png",
                kubo_jump_up_1: "assets/textures/kubo/jump/up_1.png",
                kubo_jump_air_1: "assets/textures/kubo/jump/air_1.png",
                kubo_jump_falling_1: "assets/textures/kubo/jump/falling_1.png",
                kubo_turn_L: "assets/textures/kubo/runcycle_L.png",
                kubo_turn_R: "assets/textures/kubo/runcycle_R.png",
                kubo_run_attack: "assets/textures/kubo/run_attack.png",
                kubo_idle: "assets/textures/kubo/idle.png",
                kubo_run_start: "assets/textures/kubo/run_start.png",
                kubo_attack_R: "assets/textures/kubo/attack_R.png",
                kubo_attack_L: "assets/textures/kubo/attack_L.png",
                kubo_attack_U: "assets/textures/kubo/attack_U.png",
                kubo_run_attack_start: "assets/textures/kubo/run_attack_start.png",
                kubo_stumbleB: "assets/textures/kubo/stumbleB.png",
                kubo_hit_A: "assets/textures/kubo/hitA.png",
                kubo_lose: "assets/textures/kubo/lose.png",
                kubo_win: "assets/textures/kubo/winB_v003.png",
                fx_blood_L: "assets/textures/fx/blood_attack_left.png",
                fx_blood_M: "assets/textures/fx/blood_attack_mid.png",
                moonbeast_dead: "assets/textures/fx/moonbeast_dead_E.png",
                fx_healthbar: "assets/textures/fx/healthbar-inner.png",
                fx_healthbar_frame: "assets/textures/fx/healthbar-outer.png",
                fx_healthbar_kubo: "assets/textures/fx/kubo-health-inner.png",
                fx_healthbar_frame_kubo: "assets/textures/fx/kubo-health-outer.png",
                fx_barglow: "assets/textures/fx/bar-glow.png",
                fx_attack_icon: "assets/textures/fx/attack-icon.png",
                glint_B: "assets/textures/fx/glint_B.png"
            },
            images: {},
            sounds: {
                "big-monkey-sword": "assets/audio/big-monkey-sword.mp3",
                "monkey-sword": "assets/audio/monkey-sword-1.mp3",
                "moon-beast-hit": "assets/audio/moon-beast-hit-1.mp3",
                "sword-draw": "assets/audio/kubo-sword-draw.mp3",
                jump: "assets/audio/kubo-jump-echo-2.mp3",
                stumble: "assets/audio/kubo-stumble.mp3",
                token: "assets/audio/sx-pickuptoken-c.mp3",
                hurt: "assets/audio/kubo-hurt-1.mp3",
                opening: "assets/audio/burntvillage-opening-menu.mp3",
                collectA: "assets/audio/collect-loop-A.m4a",
                collectB: "assets/audio/collect-loop-B.m4a",
                collectC: "assets/audio/collect-loop-C.m4a",
                attackA: "assets/audio/attack-loop-A.m4a",
                attackB: "assets/audio/attack-loop-B.m4a"
            }
        }, i.buildingData = {
            building_A: "assets/models/buildings/building_A.obj.txt",
            building_B: "assets/models/buildings/building_B.obj.txt",
            building_C: "assets/models/buildings/building_C.obj.txt",
            building_D: "assets/models/buildings/building_D.obj.txt",
            building_E: "assets/models/buildings/building_E.obj.txt",
            building_F: "assets/models/buildings/building_F.obj.txt",
            building_G: "assets/models/buildings/building_G.obj.txt",
            building_H: "assets/models/buildings/building_H.obj.txt",
            building_J: "assets/models/buildings/building_I.obj.txt",
            building_K: "assets/models/buildings/building_J.obj.txt"
        }, i.sceneryData = {
            tree: "assets/models/scenery/tree_v001.obj.txt",
            banner_a: "assets/models/scenery/banner_a_v001.obj.txt",
            banner_b: "assets/models/scenery/banner_b_v001.obj.txt",
            banner_c: "assets/models/scenery/banner_c_v001.obj.txt"
        }, i.clutterData = {
            rocks: "assets/models/scenery/rocks.obj.txt",
            sticks_a: "assets/models/scenery/sticks_a.obj.txt",
            sticks_b: "assets/models/scenery/sticks_b.obj.txt",
            sticks_c: "assets/models/scenery/sticks_c.obj.txt",
            sticks_d: "assets/models/scenery/sticks_d.obj.txt"
        }, i.obstacleData = {
            barrel: {
                path: "assets/models/obstacles/object_a.obj.txt",
                hitboxes: [{
                    center: [0, .35, .3],
                    size: [1, .7, 1]
                }],
                lanes: 1,
                jumpable: !0
            },
            cart: {
                path: "assets/models/obstacles/object_b.obj.txt",
                hitboxes: [{
                    center: [-.6, .25, .05],
                    size: [2, .5, 1.1]
                }, {
                    center: [-.8, .7, -.3],
                    size: [.8, .4, .4]
                }, {
                    center: [1.05, .1, -.2],
                    size: [1.3, .2, .2]
                }],
                lanes: 2,
                jumpable: !0
            },
            tree: {
                path: "assets/models/scenery/tree_v001.obj.txt",
                hitboxes: [{
                    center: [0, 1, 0],
                    size: [.4, 2, .4]
                }],
                lanes: 1,
                jumpable: !1
            },
            rubble_A: {
                path: "assets/models/obstacles/rubble_A.obj.txt",
                hitboxes: [{
                    center: [-.2, .1, 0],
                    size: [1.6, .2, 1.6]
                }],
                lanes: 1,
                jumpable: !0
            },
            rubble_B: {
                path: "assets/models/obstacles/rubble_B.obj.txt",
                hitboxes: [{
                    center: [-.1, .1, 0],
                    size: [1.6, .2, 1.6]
                }],
                lanes: 1,
                jumpable: !0
            },
            rubble_C: {
                path: "assets/models/obstacles/rubble_C.obj.txt",
                hitboxes: [{
                    center: [-.3, .1, 0],
                    size: [1.5, .2, 1.5]
                }],
                lanes: 1,
                jumpable: !0
            },
            wide_building: {
                path: "assets/models/obstacles/wide_building_destroyed_D.obj.txt",
                hitboxes: [{
                    center: [-.5, .75, .6],
                    size: [.3, 1.5, 3.75]
                }, {
                    center: [.5, .75, 2.7],
                    size: [1.5, 1.5, .5]
                }],
                lanes: 2,
                jumpable: !1
            },
            crate_a: {
                path: "assets/models/obstacles/crate_a.obj.txt",
                hitboxes: [{
                    center: [0, .4, 0],
                    size: [.6, .8, 1]
                }],
                lanes: 1,
                jumpable: !0
            },
            bell_tower: {
                path: "assets/models/obstacles/bellTower_v001.obj.txt",
                hitboxes: [{
                    center: [-.1, 8, 0],
                    size: [2.2, 16, 1]
                }],
                lanes: 2,
                jumpable: !1
            },
            crate_w_fruit_a: {
                path: "assets/models/obstacles/crate_w_fruit_a.obj.txt",
                hitboxes: [{
                    center: [0, .3, 0],
                    size: [3, .6, 1.2]
                }],
                lanes: 2,
                jumpable: !0
            },
            crate_w_fruit_b: {
                path: "assets/models/obstacles/crate_w_fruit_b.obj.txt",
                hitboxes: [{
                    center: [0, .45, 0],
                    size: [2.8, .9, 1.2]
                }],
                lanes: 2,
                jumpable: !0
            },
            crate_w_fruit_c: {
                path: "assets/models/obstacles/crate_w_fruit_c.obj.txt",
                hitboxes: [{
                    center: [0, .25, 0],
                    size: [2, .5, 2]
                }],
                lanes: 2,
                jumpable: !0
            },
            crate_w_fruit_d: {
                path: "assets/models/obstacles/crate_w_fruit_d.obj.txt",
                hitboxes: [{
                    center: [0, .65, 0],
                    size: [1.8, 1.3, 1.5]
                }],
                lanes: 2,
                jumpable: !0
            },
            crate_w_fruit_e: {
                path: "assets/models/obstacles/crate_w_fruit_e.obj.txt",
                hitboxes: [{
                    center: [0, 1.1, 0],
                    size: [1.2, 2.2, 1.5]
                }],
                lanes: 1,
                jumpable: !1
            }
        }, i.moonBeastGraph = {
            head: {
                jaw: null
            },
            cn_lo_segmentA: null,
            cn_lo_segmentB: null,
            cn_lo_segmentC: {
                L0_thigh: {
                    L0_shin: {
                        L0_foot: null
                    }
                },
                R0_thigh: {
                    R0_shin: {
                        R0_foot: null
                    }
                }
            },
            cn_lo_segmentD: {
                L1_thigh: {
                    L1_shin: {
                        L1_foot: null
                    }
                },
                R1_thigh: {
                    R1_shin: {
                        R1_foot: null
                    }
                }
            },
            cn_lo_segmentE: {
                L2_thigh: {
                    L2_shin: {
                        L2_foot: null
                    }
                },
                R2_thigh: {
                    R2_shin: {
                        R2_foot: null
                    }
                }
            },
            cn_lo_segmentF: {
                L3_thigh: {
                    L3_shin: {
                        L3_foot: null
                    }
                },
                R3_thigh: {
                    R3_shin: {
                        R3_foot: null
                    }
                }
            },
            cn_lo_segmentG: {
                L4_thigh: {
                    L4_shin: {
                        L4_foot: null
                    }
                },
                R4_thigh: {
                    R4_shin: {
                        R4_foot: null
                    }
                }
            },
            cn_lo_segmentH: {
                L5_thigh: {
                    L5_shin: {
                        L5_foot: null
                    }
                },
                R5_thigh: {
                    R5_shin: {
                        R5_foot: null
                    }
                }
            },
            cn_lo_segmentI: {
                L6_thigh: {
                    L6_shin: {
                        L6_foot: null
                    }
                },
                R6_thigh: {
                    R6_shin: {
                        R6_foot: null
                    }
                }
            },
            cn_lo_segmentJ: {
                L7_thigh: {
                    L7_shin: {
                        L7_foot: null
                    }
                },
                R7_thigh: {
                    R7_shin: {
                        R7_foot: null
                    }
                }
            },
            cn_lo_segmentK: {
                L8_thigh: {
                    L8_shin: {
                        L8_foot: null
                    }
                },
                R8_thigh: {
                    R8_shin: {
                        R8_foot: null
                    }
                }
            },
            cn_lo_segmentL: null,
            cn_lo_segmentM: null,
            cn_lo_segmentN: null,
            cn_lo_segmentO: null,
            cn_lo_segmentP: null,
            cn_lo_segmentQ: null,
            cn_lo_segmentR: null,
            cn_lo_segmentS: null,
            cn_lo_segmentT: null,
            cn_lo_segmentU: null,
            cn_lo_segmentV: null,
            cn_lo_segmentW: null,
            hand: null
        }, i.moonBeastData = {
            L0_foot: {
                position: [1.3589510907507953, -3.781217601528992, -5.511137796962368],
                weight: 0
            },
            L0_shin: {
                position: [1.2834618726570426, -3.0564319412774927, -4.925619964810032],
                weight: 0
            },
            L0_thigh: {
                position: [1.3311045194762625, -2.5736612467242406, -4.9997351233807],
                weight: 0
            },
            L1_foot: {
                position: [1.4211215206875987, -3.699550011823336, -7.380837339052178],
                weight: 0
            },
            L1_shin: {
                position: [1.4053486122277479, -3.169200822968061, -6.649070765842397],
                weight: 0
            },
            L1_thigh: {
                position: [1.3931458782291883, -2.6723999381793155, -6.63848701458607],
                weight: 0
            },
            L2_foot: {
                position: [1.4419536567912863, -4.5290713487255605, -8.781814716215472],
                weight: 0
            },
            L2_shin: {
                position: [1.444825743811542, -3.367238193606834, -8.462862278462504],
                weight: 0
            },
            L2_thigh: {
                position: [1.4423078842020771, -2.6727702282862555, -8.463798807124746],
                weight: 0
            },
            L3_foot: {
                position: [1.4144820968141618, -4.439987435881835, -10.58219565746855],
                weight: 0
            },
            L3_shin: {
                position: [1.396046610479712, -3.2721599759976434, -10.281035514115189],
                weight: 0
            },
            L3_thigh: {
                position: [1.3930935618886842, -2.556376960137649, -10.274377628939584],
                weight: 0
            },
            L4_foot: {
                position: [1.2355958829289322, -4.764945453868311, -12.31688572384663],
                weight: 0
            },
            L4_shin: {
                position: [1.1946727948108533, -3.300374820615473, -11.978634591212808],
                weight: 0
            },
            L4_thigh: {
                position: [1.1912605784874688, -2.40603273793405, -11.987620429223309],
                weight: 0
            },
            L5_foot: {
                position: [1.0183799396987998, -4.620340307408335, -14.158342738120421],
                weight: 0
            },
            L5_shin: {
                position: [1.033308689971587, -3.155769390335753, -13.784456137103758],
                weight: 0
            },
            L5_thigh: {
                position: [1.0310370664805188, -2.261427602292727, -13.771681412801922],
                weight: 0
            },
            L6_foot: {
                position: [.8769381426566945, -4.488474160550438, -16.01983160850785],
                weight: 0
            },
            L6_shin: {
                position: [.89186683897928, -3.0300955164163175, -15.627013563832438],
                weight: 0
            },
            L6_thigh: {
                position: [.8924242874260687, -2.135880169328079, -15.613852360741877],
                weight: 0
            },
            L7_foot: {
                position: [.7682929341532531, -3.0748759883515326, -18.016447568401308],
                weight: 0
            },
            L7_shin: {
                position: [.7504768855652091, -2.5192040197940098, -17.3014418503127],
                weight: 0
            },
            L7_thigh: {
                position: [.7444433295601741, -2.0071197865183117, -17.270268046407978],
                weight: 0
            },
            L8_foot: {
                position: [.6245156177420351, -2.97796509101827, -19.520314623237255],
                weight: 0
            },
            L8_shin: {
                position: [.6385348337170362, -2.440038619722602, -18.817214835803],
                weight: 0
            },
            L8_thigh: {
                position: [.6581521297747723, -1.9318809151486485, -18.786304083286154],
                weight: 0
            },
            R0_foot: {
                position: [-1.3589510907507978, -3.781217601528829, -5.511137796962476],
                weight: 0
            },
            R0_shin: {
                position: [-1.2834618726570446, -3.0564319412774923, -4.925619964810033],
                weight: 0
            },
            R0_thigh: {
                position: [-1.3311045207538208, -2.5736612346093866, -4.999735125629471],
                weight: 0
            },
            R1_foot: {
                position: [-1.4211215206876018, -3.699550011811525, -7.3808373390580995],
                weight: 0
            },
            R1_shin: {
                position: [-1.4053486122277477, -3.169200822968058, -6.6490707658424],
                weight: 0
            },
            R1_thigh: {
                position: [-1.3931458779216288, -2.672399925594386, -6.638487014721164],
                weight: 0
            },
            R2_foot: {
                position: [-1.441953656791287, -4.529071348728141, -8.781814716214136],
                weight: 0
            },
            R2_shin: {
                position: [-1.4448257438115364, -3.3672381936068754, -8.462862278462495],
                weight: 0
            },
            R2_thigh: {
                position: [-1.442307884135194, -2.6727702109164815, -8.46379880732426],
                weight: 0
            },
            R3_foot: {
                position: [-1.4144820968141592, -4.439987435880381, -10.582195657469155],
                weight: 0
            },
            R3_shin: {
                position: [-1.3960466104797076, -3.2721599759975923, -10.281035514115201],
                weight: 0
            },
            R3_thigh: {
                position: [-1.393093561822291, -2.5563769422190528, -10.274377628932914],
                weight: 0
            },
            R4_foot: {
                position: [-1.2355958829289275, -4.764945453867533, -12.316885723846934],
                weight: 0
            },
            R4_shin: {
                position: [-1.1946727948108502, -3.30037482061548, -11.978634591212796],
                weight: 0
            },
            R4_thigh: {
                position: [-1.1912605784213415, -2.406032715548239, -11.987620429640788],
                weight: 0
            },
            R5_foot: {
                position: [-1.0183799396987872, -4.620340307408376, -14.158342738120409],
                weight: 0
            },
            R5_shin: {
                position: [-1.0333086899715838, -3.1557693903357955, -13.784456137103751],
                weight: 0
            },
            R5_thigh: {
                position: [-1.031037066413474, -2.2614275799068184, -13.771681412674614],
                weight: 0
            },
            R6_foot: {
                position: [-.8769381426566832, -4.488474160550453, -16.01983160850782],
                weight: 0
            },
            R6_shin: {
                position: [-.8918668389792771, -3.0300955164163206, -15.62701356383242],
                weight: 0
            },
            R6_thigh: {
                position: [-.8924242874323611, -2.1358801469420876, -15.613852360614953],
                weight: 0
            },
            R7_foot: {
                position: [-.7682929341532464, -3.074875988344884, -18.016447568402413],
                weight: 0
            },
            R7_shin: {
                position: [-.7504768855652, -2.519204019794182, -17.301441850312674],
                weight: 0
            },
            R7_thigh: {
                position: [-.7444433294138072, -2.007119773550082, -17.27026804600209],
                weight: 0
            },
            R8_foot: {
                position: [-.6245156177420199, -2.977965091006674, -19.520314623239038],
                weight: 0
            },
            R8_shin: {
                position: [-.6385348337170343, -2.4400386197226824, -18.817214835802986],
                weight: 0
            },
            R8_thigh: {
                position: [-.6581521302755535, -1.9318809022726342, -18.786304082877276],
                weight: 0
            },
            cn_lo_segmentA: {
                position: [2.319160393659346e-16, -1.7131192239204035e-15, -2.1847943766664155],
                weight: .65,
                height: 2.2
            },
            cn_lo_segmentB: {
                position: [1.3068550229306624e-12, -.018251565869776602, -3.145822525969782],
                weight: .65,
                height: 2.5
            },
            cn_lo_segmentC: {
                position: [2.1288245299170675e-9, -.042587562208092, -4.427223677483872],
                weight: .6,
                height: 2.8
            },
            cn_lo_segmentD: {
                position: [4.522303787168374e-9, -.06996580828691716, -5.8688131470141425],
                weight: .55,
                height: 3
            },
            cn_lo_segmentE: {
                position: [7.447557054702047e-9, -.10342684771677414, -7.630689417054778],
                weight: .55,
                height: 3
            },
            cn_lo_segmentF: {
                position: [1.0638108603213336e-8, -.1399225495941442, -9.552354499546176],
                weight: .5,
                height: 3
            },
            cn_lo_segmentG: {
                position: [1.3564170628345408e-8, -.17339284014430237, -11.31471788324524],
                weight: .5,
                height: 2.6
            },
            cn_lo_segmentH: {
                position: [1.7286057721977805e-8, -.21596631990952403, -13.55640567924593],
                weight: .5,
                height: 2.5
            },
            cn_lo_segmentI: {
                position: [2.0211182587548612e-8, -.24942589059026338, -15.318204612949943],
                weight: .45,
                height: 2.2
            },
            cn_lo_segmentJ: {
                position: [2.2870387015311146e-8, -.2798436821698745, -16.919840009946505],
                weight: .45,
                height: 2
            },
            cn_lo_segmentK: {
                position: [2.5529591437935955e-8, -.31026147369071305, -18.52147540384863],
                weight: .4,
                height: 1.8
            },
            cn_lo_segmentL: {
                position: [2.7922875424400933e-8, -.3376374861292741, -19.96294726203615],
                weight: .4,
                height: 1.6
            },
            cn_lo_segmentM: {
                position: [3.031615940595183e-8, -.3650134985116211, -21.404419117263938],
                weight: .35,
                height: 1.6
            },
            cn_lo_segmentN: {
                position: [3.3507204716147314e-8, -.4015148483714666, -23.326381591780912],
                weight: .3,
                height: 1.4
            },
            cn_lo_segmentO: {
                position: [3.5899542775774425e-8, -.4288800406545353, -24.767283719454035],
                weight: .3,
                height: 1.4
            },
            cn_lo_segmentP: {
                position: [3.829336268625859e-8, -.45626218335707946, -26.20907836398707],
                weight: .3,
                height: 1.3
            },
            cn_lo_segmentQ: {
                position: [4.0951904823104204e-8, -.4866723992020517, -27.810314864018594],
                weight: .25,
                height: 1.1
            },
            cn_lo_segmentR: {
                position: [4.387688231796247e-8, -.5201302841561999, -29.572025036532526],
                weight: .25,
                height: 1.1
            },
            cn_lo_segmentS: {
                position: [4.57392054650353e-8, -.5414328048462783, -30.69369986598805],
                weight: .2,
                height: 1
            },
            cn_lo_segmentT: {
                position: [4.733463240127096e-8, -.5596823848786496, -31.654623451899344],
                weight: .05,
                height: .9
            },
            cn_lo_segmentU: {
                position: [4.893002263650194e-8, -.5779315450999412, -32.61552493284288],
                weight: .05,
                height: .9
            },
            cn_lo_segmentV: {
                position: [5.025921296658069e-8, -.593135729482254, -33.416094554258144],
                weight: .05,
                height: .9
            },
            cn_lo_segmentW: {
                position: [5.158849453204831e-8, -.6083558308652403, -34.21750227832169],
                weight: .05,
                height: .9
            },
            hand: {
                position: [8.222516001412558e-10, -.6365462841694662, -34.85484694886469],
                weight: .02,
                height: .9
            },
            head: {
                position: [-1.9731101433808363e-24, .00898778298426581, -1.7115466285368126],
                weight: .7,
                height: 2
            },
            jaw: {
                position: [0, -.5860603094446524, -1.5245926288110632],
                weight: 0
            }
        }, n(i.moonBeastGraph), r(i.buildingData), r(i.sceneryData), r(i.obstacleData), r(i.clutterData)
    }, {
        lodash: 62
    }],
    2: [function(t, e, i) {
        "use strict";
        var n = t("../util/dom"),
            r = function() {
                function t(t) {
                    var e = this;
                    this.el = t, this._submitted = new Promise(function(t, i) {
                        e._resolve = t, e._reject = i
                    }), t.getElementsByTagName("form")[0].addEventListener("submit", this.onSubmit.bind(this));
                    var i = location.search.match(/agegate=(\d+)/);
                    i && this.complete(+i[1])
                }
                return t.prototype.getMonthEl = function() {
                    return this.el.getElementsByClassName("month")[0]
                }, t.prototype.getMonth = function() {
                    return +this.getMonthEl().value
                }, t.prototype.getDayEl = function() {
                    return this.el.getElementsByClassName("day")[0]
                }, t.prototype.getDay = function() {
                    return +this.getDayEl().value
                }, t.prototype.getYearEl = function() {
                    return this.el.getElementsByClassName("year")[0]
                }, t.prototype.getYear = function() {
                    return +this.getYearEl().value
                }, t.prototype.populateYears = function(t, e) {
                    var i = this.getYearEl(),
                        r = i.parentNode;
                    n.remove(i);
                    for (var o; t >= e; t--) o = n.el("option"), o.value = "" + t, n.text(o, "" + t), i.appendChild(o);
                    r.appendChild(i)
                }, t.prototype.submitted = function() {
                    return this._submitted
                }, t.prototype.onSubmit = function(t) {
                    t.preventDefault(), this.validate()
                }, t.prototype.clearError = function(t) {
                    t.forEach(function(t) {
                        n.removeClass(t, "error")
                    })
                }, t.prototype.setError = function(t) {
                    t.forEach(function(t) {
                        n.addClass(t, "error")
                    })
                }, t.prototype.validate = function() {
                    this.clearError([this.getMonthEl(), this.getDayEl(), this.getYearEl()]);
                    var t = this.getMonth(),
                        e = this.getDay(),
                        i = this.getYear(),
                        n = 1 == t && 1 == e && 2016 == i,
                        r = new Date,
                        o = !1;
                    (t < r.getMonth() + 1 || t == r.getMonth() + 1 && e <= r.getDate()) && (o = !0);
                    var a = r.getFullYear() - i - (o ? 0 : 1);
                    n ? (this.error("Please choose a date"), this.setError([this.getMonthEl(), this.getDayEl(), this.getYearEl()])) : i > 2015 ? (this.error("Please choose a year"), this.setError([this.getYearEl()])) : this.complete(a)
                }, t.prototype.error = function(t) {
                    n.text(this.el.getElementsByClassName("error")[0], t)
                }, t.prototype.complete = function(t) {
                    this._resolve(t), n.remove(this.el), window.ga && ga("send", "event", "MBB", "Submit")
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        "../util/dom": 55
    }],
    3: [function(t, e, i) {
        "use strict";
        var n = function() {
                function t(t, e) {
                    this.handler = t, this.filter = e
                }
                return t
            }(),
            r = function() {
                function t() {
                    this.handlers = []
                }
                return t.prototype.trigger = function(t) {
                    for (var e = 0, i = this.handlers.length; i > e; e++) {
                        var n = this.handlers[e].filter;
                        n && !this.handlers[e].filter(t) || this.handlers[e].handler(t)
                    }
                }, t.prototype.register = function(t, e) {
                    this.handlers.push(new n(t, e))
                }, t
            }();
        i.Event = r
    }, {}],
    4: [function(t, e, i) {
        "use strict";
        var n = t("../util/dom"),
            r = function() {
                function t(t, e) {
                    this.gameModel = t, this.userModel = e, this.overlayVisible = !1, this.el = n.byId("leaderboard-template").cloneNode(!0), this.el.id = "", this.overlays = n.byId("overlays"), this.overlays.appendChild(this.el), this.bind()
                }
                return t.prototype.bind = function() {
                    this._getForm().addEventListener("submit", this.onLogin.bind(this)), this.el.querySelector(".close").addEventListener("click", this.onClose.bind(this))
                }, t.prototype._getLoginPanel = function() {
                    return this.el.getElementsByClassName("login-panel")[0]
                }, t.prototype._getForm = function() {
                    return this.el.getElementsByClassName("login-form")[0]
                }, t.prototype._getProgressEl = function() {
                    return this.el.getElementsByClassName("in-progress")[0]
                }, t.prototype._getLoadingLabelEl = function() {
                    return this.el.getElementsByClassName("loader-caption")[0]
                }, t.prototype._getLeaderboard = function() {
                    return this.el.getElementsByClassName("leaderboard")[0]
                }, t.prototype.destroy = function() {
                    n.remove(this.el), this.el = null
                }, t.prototype.showOverlay = function() {
                    var t = this;
                    this.overlayVisible || requestAnimationFrame(function() {
                        n.addClass(t.el, "visible")
                    })
                }, t.prototype.showLogin = function(t) {
                    this.showOverlay(), n.tickClasses(this._getLoginPanel(), ["visible", "fade-in"]), t ? this.showLoginError(t) : this.showLoginError("�")
                }, t.prototype.showLoginError = function(t) {
                    var e = this._getForm();
                    n.text(e.querySelector("p.error"), t)
                }, t.prototype.validate = function() {
                    var t = this._getForm(),
                        e = [],
                        i = t.querySelector(".input-username"),
                        r = i.value;
                    r ? n.removeClass(i, "error") : (n.addClass(i, "error"), e.push("username"));
                    var o = t.querySelector(".input-password"),
                        a = o.value;
                    return a ? n.removeClass(o, "error") : (n.addClass(o, "error"), e.push("password")), e.length ? (this.showLoginError(e.join(" and ") + (1 == e.length ? " is" : " are") + " required"), !1) : !0
                }, t.prototype.onLogin = function(t) {
                    var e = this;
                    if (t.preventDefault(), t.stopPropagation(), this.validate()) {
                        n.removeClass(this._getLoginPanel(), "visible"), this.showLoading(), this.setLoadingLabel("Signing in�");
                        var i = this._getForm(),
                            r = i.getElementsByClassName("input-username")[0].value,
                            o = i.getElementsByClassName("input-password")[0].value;
                        this.userModel.setUserPass(r, o), this.userModel.fetchWebToken().then(function() {
                            e.submitScore()
                        }, function(t) {
                            e.showLogin("Please check username and password.")
                        })
                    }
                }, t.prototype.showLoading = function() {
                    this.showOverlay(), n.tickClasses(this._getProgressEl(), ["visible", "fade-in"])
                }, t.prototype.setLoadingLabel = function(t) {
                    n.text(this._getLoadingLabelEl(), t)
                }, t.prototype.showLeaderboard = function(t) {
                    this.showOverlay()
                }, t.prototype.submitScore = function() {
                    var t = this;
                    this.showLoading(), this.setLoadingLabel("Submitting Score�"), this.userModel.submitScore(this.gameModel.calculateFinalScore()["final"], this.gameModel.gameLog, this.gameModel.elapsedMS, this.gameModel.endScreenshot).then(function() {
                        t.onSubmitScore()
                    }, function(e) {
                        alert("Error Submitting:\n " + e), t.showLogin("Error submitting score, please try again.")
                    })
                }, t.prototype.onSubmitScore = function() {
                    var t = this;
                    this.setLoadingLabel("Your score has been submitted."), setTimeout(function() {
                        t.destroy()
                    }, 1e3)
                }, t.prototype.onClose = function(t) {
                    this.destroy()
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        "../util/dom": 55
    }],
    5: [function(t, e, i) {
        "use strict";

        function n(t) {
            var e = window,
                i = e.AudioContext || e.webkitAudioContext;
            if (!i) return null;
            t = "number" == typeof t ? t : 44100;
            var n = new i;
            if (/(iPhone|iPad)/i.test(navigator.userAgent) && n.sampleRate !== t) {
                var r = n.createBuffer(1, 1, t),
                    o = n.createBufferSource();
                o.buffer = r, o.connect(n.destination), o.start(0), o.disconnect(), n.close(), n = new i
            }
            return n
        }

        function r(t) {
            return t.replace(/\..*$/, "").replace(/^.*\//, "")
        }
        var o, a = t("../util/deferred"),
            s = t("./../util/console"),
            h = t("createjs"),
            u = t("../util/tween"),
            c = "assets",
            l = function() {
                function t() {
                    this.inited = !1, this.mutedAuto = 1, this.muted = !1, this.queued = [], this.loadPromises = {}, this.urlToId = {}, this.destVolume = 1, this.loopVolume = .8, this.crossFadeTween = new u["default"]({
                        points: [.5, .5, .5, .5],
                        start: 0,
                        end: 1,
                        duration: .5,
                        onProgress: this.updateCrossFade.bind(this),
                        onComplete: this.completeCrossFade.bind(this)
                    }), this.inited = !1, this.init = this.init.bind(this), this.mutedAuto = 1, this.crossFadeTween.complete = !0;
                    var t = location.search.match(/music=([\d\.]+)/);
                    t && (this.loopVolume = +t[1]), this.queued = []
                }
                return t.getInstance = function() {
                    return o || (o = new t), o
                }, t.prototype.init = function() {
                    var t = this;
                    if (!this.inited) {
                        var e = n();
                        e && (h.Sound.context = e), h.Sound.initializeDefaultPlugins() && (this.handleLoad = this.handleLoad.bind(this), h.Sound.addEventListener("fileload", this.handleLoad), this.handleError = this.handleError.bind(this), h.Sound.addEventListener("fileerror", this.handleError), this.audioDir = c + "audio/", h.Sound.alternateExtensions = ["mp3"], h.Sound.defaultInterruptBehavior = h.Sound.INTERRUPT_LATE, window.removeEventListener("touchstart", this.init), window.removeEventListener("click", this.init), this.muted = !1, location.search.match(/debug=1/i) && this.toggleMute(), this.queued.forEach(function(e) {
                            h.Sound.registerSound(e, t.urlToId[e], 2)
                        }), this.queued = [], this.inited = !0)
                    }
                }, t.prototype.update = function(t) {
                    this.crossFadeTween.update(t, 0)
                }, t.prototype.beginCrossFade = function(t, e) {
                    this.previousSound && (this.previousSound.stop(), this.previousSound.loop = 0), this.previousSound = t, t && (t.loop = 0), this.playingSound = e, this.playingSound && (this.destVolume = this.playingSound.volume, this.playingSound.volume = 0), this.crossFadeTween.reset(0, 1)
                }, t.prototype.updateCrossFade = function(t) {
                    this.playingSound && (this.playingSound.volume = this.destVolume * t), this.previousSound && (this.previousSound.volume = Math.min(this.previousSound.volume, 1 - t))
                }, t.prototype.completeCrossFade = function() {
                    this.previousSound && (this.previousSound.stop(), this.previousSound = null)
                }, t.prototype.updateVolume = function() {
                    h.Sound.volume = (this.muted ? 0 : 1) * this.mutedAuto
                }, t.prototype.toggleMute = function() {
                    this.muted = !this.muted, this.updateVolume()
                }, t.prototype.muteAuto = function() {
                    this.mutedAuto = 0, this.updateVolume()
                }, t.prototype.halfMute = function() {
                    this.mutedAuto = .3, this.updateVolume()
                }, t.prototype.unmuteAuto = function() {
                    this.mutedAuto = 1, this.updateVolume()
                }, t.prototype.load = function(t, e) {
                    return e || (e = r(t)), this.urlToId[t] = e, this.loadPromises || (this.loadPromises = {}), this.loadPromises[e] ? this.loadPromises[e].promise : (this.loadPromises[e] = new a["default"], this.inited ? (h.Sound.registerSound(t, e, 2), this.loadPromises[e].promise) : (this.queued.push(t), new Promise(function(t) {
                        return t(e)
                    })))
                }, t.prototype.handleLoad = function(t) {
                    var e = this.loadPromises[t.id];
                    return e ? void e.resolve(t.id) : void s._console.error("No promise found for " + t.id)
                }, t.prototype.handleError = function(t) {
                    var e = this.loadPromises[t.id];
                    return e ? (e.reject(t.src), void(this.loadPromises[t.id] = null)) : void s._console.error("No promise found for " + t.id)
                }, t.prototype.fadeOut = function() {
                    if (this.playingSound) {
                        this.playingProc = null;
                        var t = this.playingSound;
                        t.volume = 0, t.stop()
                    }
                }, t.prototype.play = function(t, e, i) {
                    var n = this;
                    if (t == this.playingSoundId && i) return void s._console.log("%s was already playing", t);
                    if (s._console.log("now playing", t), void 0 == e && (e = 0), t) {
                        i && (this.playingSoundId = t);
                        var r = this.playingSound;
                        return this.loadPromises[t].promise.then(function(t) {
                            var o = h.Sound.play(t, {
                                loop: e,
                                pan: -.001,
                                volume: i ? n.loopVolume : 1
                            });
                            i && n.beginCrossFade(r, o), setTimeout(function() {
                                return o.pan = 0
                            }, 1)
                        })
                    }
                }, t.prototype.stopAll = function() {
                    this.beginCrossFade(this.playingSound, null)
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = l
    }, {
        "../util/deferred": 54,
        "../util/tween": 59,
        "./../util/console": 53,
        createjs: "/Users/matt/Sites/beatthegods/src/js/lib/soundjs-0.6.2.combined.js"
    }],
    6: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = function() {
                function t() {
                    this.position = new n.Vector3, this.velocity = new n.Vector3, this.acceleration = new n.Vector3, this._vel = new n.Vector3, this._acc = new n.Vector3
                }
                return t.prototype.update = function(t) {
                    this._acc.copy(this.acceleration), this._acc.multiplyScalar(t), this.velocity.add(this._acc), this._vel.copy(this.velocity), this._vel.multiplyScalar(t), this.position.add(this._vel), this.acceleration.set(0, 0, 0)
                }, t
            }();
        i.PhysicsObjectEuler = r;
        var o = function() {
            function t() {
                this.position = new n.Vector3, this.gravity = new n.Vector3(0, -9.8, 0), this.velocity = new n.Vector3, this.previousVelocity = new n.Vector3, this.acceleration = new n.Vector3, this.previousAcceleration = new n.Vector3, this.previousDt = 0, this._vel = new n.Vector3, this._acc = new n.Vector3, this._output = new n.Vector3
            }
            return t.prototype.update = function(t) {
                0 === this.previousDt && (this.previousDt = t);
                var e = t / this.previousDt,
                    i = (t + this.previousDt) / 2;
                this._acc.copy(this.previousAcceleration), this._acc.multiplyScalar(t * i), this._vel.copy(this.velocity), this._vel.multiplyScalar(t * e), this.position.add(this._vel).add(this._acc), this._acc.copy(this.acceleration), this._acc.add(this.gravity), this._acc.add(this.previousAcceleration), this._acc.multiplyScalar(.5 * t), this.velocity.add(this._acc), this.previousAcceleration.copy(this.acceleration), this.previousDt = t, this.acceleration.set(0, 0, 0)
            }, t
        }();
        i.PhysicsObjectVerlet = o, Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = o
    }, {
        three: 64
    }],
    7: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            return t ? (t.wrapS = o.RepeatWrapping, t.wrapT = o.RepeatWrapping, t) : null
        }

        function r(t, e, i) {
            var r = t.cols,
                o = t.rows;
            e = n(e, r, o);
            var a = s.unlitSpriteShaderMaterial(e);
            return a.repeat.set(1 / r, 1 / o), a.offset.set(0, 0), a.rows = o, a.cols = r, a.frames = t.frames, a.fps = t.fps, a
        }
        var o = t("three"),
            a = t("lodash"),
            s = t("../shaders/unlitsprite"),
            h = function() {
                function t(t, e, i) {
                    this.currentFrame = 0, this.millisRemaining = 0, this.playing = !0, this.startFrame = 0, this.endFrame = 0, this.looping = !0, this.cols = 1, this.rows = 1, this.frames = 1, this.material = r(t, e, i), a.assign(this, t), this.currentFrame = 0, this.millisRemaining = 0, this.frameInterval = 1 / t.fps, this.playing = !0, this.startFrame = 0, this.endFrame = t.frames - 1, this.looping = !0, this.setFrame(0)
                }
                return t.prototype.getMaterial = function() {
                    return this.material
                }, t.prototype.getMesh = function() {
                    return this.card
                }, t.prototype.handleReset = function() {}, t.prototype.setFrameColRow = function(t, e) {
                    var i = this.material,
                        n = this.cols,
                        r = this.rows,
                        o = t / n,
                        a = e / r;
                    i.offset.set(o, a)
                }, t.prototype.setFrame = function(t) {
                    this.currentFrame = t;
                    var e = this.cols,
                        i = t % e,
                        n = this.rows - 1 - Math.floor(t / e);
                    this.setFrameColRow(i, n)
                }, t.prototype.advanceFrame = function(t) {
                    t = !!t;
                    var e = this.endFrame + 1 - this.startFrame,
                        i = this.currentFrame - this.startFrame;
                    return i = (i + 1) % e, i += this.startFrame, !this.looping && i === this.startFrame && i < this.currentFrame ? (this.playing = !1, !1) : (this.currentFrame = i, t || this.setFrame(this.currentFrame), !0)
                }, t.prototype.advanceMillis = function(t) {
                    if (this.playing) {
                        this.millisRemaining += t;
                        for (var e = !1; this.millisRemaining >= this.frameInterval;) e = this.advanceFrame(!0) || e, this.millisRemaining -= this.frameInterval;
                        e && this.setFrame(this.currentFrame)
                    }
                }, t.prototype.update = function(t, e) {
                    this.advanceMillis(t)
                }, t.prototype.reset = function() {
                    return this.millisRemaining = 0, this.startFrame = 0, this.endFrame = this.frames - 1, this.currentFrame = 0, this.setFrame(0), this
                }, t.prototype.play = function() {
                    return this.millisRemaining = 0, this.startFrame = 0, this.endFrame = this.frames - 1, this.playing = !0, this.looping = !1, this
                }, t.prototype.loop = function() {
                    return this.play(), this.looping = !0, this
                }, t.prototype.playRange = function(t, e, i) {
                    return this.millisRemaining = 0, this.playing = !0, this.startFrame = t, this.currentFrame = t, this.endFrame = e, this.looping = !1, this
                }, t.prototype.loopRange = function(t, e) {
                    return this.playRange(t, e, !1), this.looping = !0, this
                }, t.prototype.stop = function() {
                    return this.playing = !1, this
                }, t.prototype.getProgress = function() {
                    return this.currentFrame / (this.frames - 1)
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = h
    }, {
        "../shaders/unlitsprite": 50,
        lodash: 62,
        three: 64
    }],
    8: [function(t, e, i) {
        "use strict";
        var n = t("../util/console"),
            r = (function() {
                function t() {}
                return t
            }(), function() {
                function t(t) {
                    this.enterHooks = {}, this.exitHooks = {}, this.queuedStates = [], this.currentState = null, this.states = t
                }
                return t.prototype.to = function(t) {
                    this.queuedStates.push(t)
                }, t.prototype.set = function(t) {
                    this.queuedStates.push(t), this.update()
                }, t.prototype.update = function() {
                    var t = this,
                        e = this.queuedStates;
                    this.queuedStates = [], e.forEach(function(e) {
                        var i = {
                                from: t.currentState,
                                to: e
                            },
                            r = t.currentState,
                            o = t.exitHooks[r];
                        o && o.forEach(function(t) {
                            t(i)
                        }), r = e;
                        var a = t.enterHooks[r];
                        a && a.forEach(function(t) {
                            t(i)
                        }), n._console.info("STATE %s(%d)->%s(%d)", t.states[t.currentState], o ? o.length : 0, t.states[e], a ? a.length : 0), t.currentState = e
                    })
                }, t.prototype.addHook = function(t) {
                    t.enter && (this.enterHooks[t.state] || (this.enterHooks[t.state] = []), this.enterHooks[t.state].push(t.enter)), t.exit && (this.exitHooks[t.state] || (this.exitHooks[t.state] = []), this.exitHooks[t.state].push(t.exit))
                }, t.prototype.get = function() {
                    return this.currentState
                }, t.prototype.getName = function() {
                    return this.states[this.currentState]
                }, t.prototype.is = function(t) {
                    return t === this.currentState
                }, t.prototype.isNot = function(t) {
                    return t !== this.currentState;
                }, t.prototype["in"] = function(t) {
                    for (var e = this.currentState, i = 0, n = t.length; n > i; i++)
                        if (e == t[i]) return !0;
                    return !1
                }, t
            }());
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        "../util/console": 53
    }],
    9: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = new r["default"]({
                fps: 16,
                frames: 4,
                rows: 2,
                cols: 2
            }, t.textures.fx_attack_icon);
            return i.card = new o.Mesh(e, i.getMaterial()), i
        }
        var r = t("../spriteanimation"),
            o = t("three");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        "../spriteanimation": 7,
        three: 64
    }],
    10: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = "0 0 " + t / 2 + " " + e,
                n = 0,
                r = 0,
                o = t / 2 + 1,
                s = e;
            return '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n	 viewBox="' + i + '" preserveAspectRatio="none" xml:space="preserve">\n<style type="text/css">\n	.st0{fill:rgba(0, 0, 0, 0.6);stroke:url(#SVGID_1_);stroke-width:2;stroke-miterlimit:10;}\n</style>\n<linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="770.6047" y1="25.273" x2="993.8641" y2="248.5325" gradientTransform="matrix(-1 0 0 -1 1045.0597 414.4373)">\n	' + a + '\n</linearGradient>\n<polygon class="st0" points="' + n + "," + (s - 1) + " " + (o - 1) + "," + (s - 1) + " " + (o - 1) + "," + (r + 1) + " " + n + "," + (s - .45 * s) + ' "/>\n</svg>\n'
        }

        function r(t, e) {
            var i = "0 0 " + t / 2 + " " + e,
                n = 0,
                r = 0,
                o = t / 2 + 1,
                s = e;
            return '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n	 viewBox="' + i + '" preserveAspectRatio="none" xml:space="preserve">\n<style type="text/css">\n	.st0{fill:rgba(0, 0, 0, 0.6);stroke:url(#SVGID_3_);stroke-width:2;stroke-miterlimit:10;}\n</style>\n<linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="770.6047" y1="25.273" x2="993.8641" y2="248.5325" gradientTransform="matrix(-1 0 0 -1 1045.0597 414.4373)">\n	' + a + '\n</linearGradient>\n<polygon class="st0" points="' + (n + 1) + "," + (s - 1) + " " + o + "," + (s - 1) + " " + o + "," + (s - .45 * s) + " " + (n + 1) + "," + (r + 1) + '  "/>\n</svg>\n'
        }

        function o(t, e) {
            var i = "0 0 " + t + " " + .45 * e,
                n = 0,
                r = 0,
                o = t,
                s = .45 * e;
            return '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n	 viewBox="' + i + '" preserveAspectRatio="none" xml:space="preserve" width="' + t + 'px" height="' + .45 * e + 'px">\n<style type="text/css">\n	.st0{fill:rgba(0, 0, 0, 0.6);stroke:url(#SVGID_2_);stroke-width:2;stroke-miterlimit:10;}\n</style>\n<linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="770.6047" y1="25.273" x2="993.8641" y2="248.5325" gradientTransform="matrix(-1 0 0 -1 1045.0597 414.4373)">\n	' + a + '\n</linearGradient>\n<polygon class="st0" points="' + (n + 1) + "," + (r + 1) + " " + o / 2 + "," + (s - 1) + " " + (o - 1) + "," + (r + 1) + ' "/>\n</svg>\n'
        }
        var a = '\n    <stop  offset="0" style="stop-color:#1f353d">\n        <animate attributeName="stop-color" values="#1f353d;#30e2fc;#1f353d" dur="5s" repeatCount="indefinite" />\n    </stop>\n	<stop  offset="1" style="stop-color:#DBDBDB">\n        <animate attributeName="stop-color" values="#30e2fc;#1f353d;#30e2fc" dur="5s" repeatCount="indefinite" />\n    </stop>\n';
        i.gradientboxRight = n, i.gradientboxLeft = r, i.gradientboxUp = o
    }, {}],
    11: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = t("../../util/utilities"),
            o = t("../../util/tween"),
            a = t("../../shaders/healthbarmaterial"),
            s = (new n.PlaneGeometry(1, 1), function() {
                function t(t, e, i, r) {
                    this.range = i, this.current = r, this.mesh = new n.Object3D, this.valueTween = new o["default"]({
                        duration: .4,
                        points: [.25, 0, .3, 1],
                        start: 0,
                        end: 1,
                        onProgress: this.onValueProgress.bind(this)
                    }), this.valueTweenActive = !1, this.animated = !0, this.targetNum = 0, this.bar = new n.Mesh(t, a.healthbarMaterial(e)), this.material = this.bar.material, this.mesh.add(this.bar), this.targetNum = r, this.valueTweenActive = !1, this.valueTween.complete = !0, this.redraw()
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.hide = function() {
                    this.mesh.visible = !1
                }, t.prototype.show = function() {
                    this.mesh.visible = !0
                }, t.prototype.update = function(t, e) {
                    this.valueTweenActive && (this.valueTween.update(t, e), this.valueTweenActive = !this.valueTween.complete)
                }, t.prototype.handleReset = function() {}, t.prototype.redraw = function() {
                    this.bar.material.setProgress(this.current / this.range)
                }, t.prototype.setValue = function(t) {
                    this.targetNum = r.clamp(t, .001, this.range), 0 >= t ? this.bar.visible = !1 : this.bar.visible = !0, this.animated ? (this.valueTween.reset(this.current, this.targetNum), this.valueTweenActive = !0) : this.current = this.targetNum, this.redraw()
                }, t.prototype.setColorHex = function(t) {
                    this.bar.material.color.setHex(t)
                }, t.prototype.onValueProgress = function(t) {
                    this.current = t, this.redraw()
                }, t
            }());
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = s
    }, {
        "../../shaders/healthbarmaterial": 43,
        "../../util/tween": 59,
        "../../util/utilities": 60,
        three: 64
    }],
    12: [function(t, e, i) {
        "use strict";
        var n = t("../util/deferred"),
            r = "Basic UFNJbUFidkk5WXJ3NmxWT0FjQlppeWNseWNzUUlxTThUOWdrSmhTUDpsNDVJSUgyNzZVTG9GWHRGeXd2QkVSdmNKM0hldHdwc016NG5hdFRmb1hvVWpSNE5nc25aZ1FOUFdYZDhzbEg0MHJwNGJIYWllQllGb0RNOTZkaFVvSFVTMXBTWnZyRWhCdWhDNG5RQjNqV2lOTWx6c3MyVzZFd2hxRzNRQ2pWNQ==",
            o = "https://contest.kubothemovie.com",
            a = function() {
                function t() {
                    this.jsonWebToken = null, this.jsonWebTokenExpires = -1, this.username = null, this.password = null
                }
                return t.getSharedInstance = function() {
                    return t.sharedInstance || (t.sharedInstance = new t), t.sharedInstance
                }, t.prototype.setUserPass = function(t, e) {
                    this.username = t, this.password = e
                }, t.prototype.fetchWebToken = function() {
                    this.tokenDeferred = new n["default"];
                    var t = new XMLHttpRequest;
                    return t.open("POST", o + "/o/token/"), t.setRequestHeader("Content-Type", "application/json"), t.setRequestHeader("Authorization", r), t.addEventListener("load", this.onFetchWebToken.bind(this)), t.addEventListener("error", this.onFetchWebTokenError.bind(this)), t.send(JSON.stringify({
                        username: this.username,
                        password: this.password,
                        grant_type: "password"
                    })), this.tokenDeferred.promise
                }, t.prototype.onFetchWebToken = function(t) {
                    try {
                        var e = t.target,
                            i = JSON.parse(e.responseText);
                        if (i.error) return void this.tokenDeferred.reject(i.error);
                        this.jsonWebToken = i.access_token, this.jsonWebTokenExpires = +new Date + 1e3 * i.expires_in, this.tokenDeferred.resolve()
                    } catch (n) {
                        this.tokenDeferred.reject(n)
                    }
                }, t.prototype.onFetchWebTokenError = function(t) {
                    this.tokenDeferred.reject(t.target.statusText)
                }, t.prototype.refreshWebToken = function() {
                    return !this.jsonWebToken || this.jsonWebTokenExpires <= +new Date ? this.fetchWebToken() : Promise.resolve(null)
                }, t.prototype.submitScore = function(t, e, i, r) {
                    this.submitScoreDeferred = new n["default"];
                    var a = new XMLHttpRequest;
                    return a.open("POST", o + "/api/score/"), a.setRequestHeader("Content-Type", "application/json"), a.setRequestHeader("Authorization", "Bearer " + this.jsonWebToken), a.addEventListener("load", this.onSubmitScore.bind(this)), a.addEventListener("error", this.onSubmitScoreError.bind(this)), a.send(JSON.stringify({
                        image: r,
                        replay: e,
                        score: Math.round(t),
                        duration: Math.round(i)
                    })), this.submitScoreDeferred.promise
                }, t.prototype.onSubmitScore = function(t) {
                    var e = t.target;
                    if (201 == e.status) return void this.submitScoreDeferred.resolve();
                    if (429 == e.status) return void this.submitScoreDeferred.reject("You've hit your limit of 150 entries per day.");
                    if (500 == e.status) return void this.submitScoreDeferred.reject("The server encountered an error. Please try again shortly.");
                    try {
                        var i = JSON.parse(e.responseText);
                        this.submitScoreDeferred.reject(i)
                    } catch (n) {
                        this.submitScoreDeferred.reject(n)
                    }
                }, t.prototype.onSubmitScoreError = function(t) {
                    this.submitScoreDeferred.reject(t.target.statusText)
                }, t.prototype.needsLogin = function() {
                    return !this.username || !this.password
                }, t.sharedInstance = null, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = a
    }, {
        "../util/deferred": 54
    }],
    13: [function(t, e, i) {
        "use strict";
        var n = t("../util/dom"),
            r = function() {
                function t(t, e) {
                    this.runloop = t, this.overlays = e, this.nopointer = !1, this.pauseMenu = this.overlays.getElementsByClassName("pause-panel")[0], this.soundButtons = n.toarray(this.overlays.getElementsByClassName("sound-toggle")), this.exitPanel = n.byId("exit-panel"), this.bind()
                }
                return t.prototype.bind = function() {
                    var t = this;
                    n.toarray(this.overlays.getElementsByClassName("pause")).forEach(function(e) {
                        e.addEventListener("click", t.onPause.bind(t))
                    }), n.toarray(this.pauseMenu.getElementsByClassName("continue")).forEach(function(e) {
                        e.addEventListener("click", t.onResume.bind(t))
                    }), this.soundButtons.forEach(function(e) {
                        e.addEventListener("click", t.onToggleAudio.bind(t))
                    }), this.updateSoundButtons(), n.toarray(document.getElementsByClassName("exit")).forEach(function(e) {
                        e.addEventListener("click", t.onExit.bind(t))
                    }), n.toarray(this.exitPanel.getElementsByClassName("cancel")).forEach(function(e) {
                        e.addEventListener("click", t.onCancelExit.bind(t))
                    }), window.addEventListener("visibilitychange", function(e) {
                        document.hidden && t.runloop.running && t.onPause()
                    })
                }, t.prototype.updateSoundButtons = function() {
                    var t = this.runloop.app.mixer.muted;
                    this.soundButtons.forEach(function(e) {
                        t ? n.addClass(e, "nomusic") : n.removeClass(e, "nomusic")
                    })
                }, t.prototype.onPause = function() {
                    this.runloop.stop(), this.runloop.app.mixer.halfMute(), n.removeClass(this.pauseMenu, "fade"), this.overlays.className.match(/nopointer/) && (this.nopointer = !0), n.removeClass(this.overlays, "nopointer")
                }, t.prototype.onResume = function() {
                    this.runloop.start(), this.runloop.app.mixer.unmuteAuto(), n.addClass(this.pauseMenu, "fade"), this.nopointer && !this.runloop.app.ui.gameOver && n.addClass(this.overlays, "nopointer")
                }, t.prototype.onToggleAudio = function() {
                    this.runloop.app.mixer.toggleMute(), this.updateSoundButtons()
                }, t.prototype.onExit = function() {
                    n.removeClass(this.exitPanel, "fade")
                }, t.prototype.onCancelExit = function() {
                    n.addClass(this.exitPanel, "fade")
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        "../util/dom": 55
    }],
    14: [function(t, e, i) {
        "use strict";
        var n, r = t("three"),
            o = t("lodash"),
            a = t("./runloop"),
            s = t("./components/statemachine"),
            h = t("./util/textures"),
            u = t("./util/console"),
            c = t("./game/entities/moonbeast"),
            l = t("./game/entities/kubo"),
            p = t("./game/entities/camera2"),
            d = t("./game/entities/lights"),
            f = t("./game/ui"),
            m = t("./game/gamemodel"),
            g = t("./components/mixer"),
            v = t("./components/usermodel"),
            y = t("./game/levelgenerator"),
            _ = t("./game/segments/tutorial"),
            b = t("./game/segments/collection"),
            x = t("./game/segments/attack"),
            w = t("./game/entities/moonbeast/controlpoint"),
            M = t("./game/ground"),
            S = t("./game/scenery"),
            T = t("./shaders/villagematerial"),
            A = t("./shaders/convolutionmaterial"),
            E = t("./shaders/quadmaterial");
        ! function(t) {
            t[t.PushTextures = 0] = "PushTextures", t[t.Intro = 1] = "Intro", t[t.Tutorial = 2] = "Tutorial", t[t.TutorialLR = 3] = "TutorialLR", t[t.TutorialToJump = 4] = "TutorialToJump", t[t.TutorialJump = 5] = "TutorialJump", t[t.TutorialToToken = 6] = "TutorialToToken", t[t.TutorialToken = 7] = "TutorialToken", t[t.TutorialToAttack = 8] = "TutorialToAttack", t[t.TutorialAttack = 9] = "TutorialAttack", t[t.Collection = 10] = "Collection", t[t.Battle = 11] = "Battle", t[t.Death = 12] = "Death", t[t.Victory = 13] = "Victory", t[t.GameOver = 14] = "GameOver"
        }(n || (n = {}));
        var C = function() {
            function t(t, e, i) {
                this.timeScale = 1, this.takeScreenshot = !1, this.mixer = g["default"].getInstance(), this._cameraTarget = new r.Vector3, this._framesRendered = 0, this.blurX = new r.Vector2(.001953125, 0), this.blurY = new r.Vector2(0, .001953125), this.sigma = 3, this.kernel = 20, this.victoryCameraOffset = -1.5, this.victorySet = !1, this.mobile = !1, this.skipTutorial = !1, this.skipIntro = !1, this.canSaveScores = !0, this.userModel = null, this.mobile = i || !1, this.inputManager = t, this.renderer = e, this.scene = new r.Scene, this.camera = new r.PerspectiveCamera(75, window.innerWidth / window.innerHeight), this.camera.far = 2e3, this.camera.near = .5, this.gameState = new s["default"](n), this.gameState.to(n.PushTextures), this.level = new y.LevelGenerator({
                    Tutorial: function(t) {
                        return new _["default"](t)
                    },
                    Attack: function(t) {
                        return new x["default"](t)
                    },
                    Collection: function(t) {
                        return new b["default"](t)
                    }
                }), this.startGame(), location.search.match(/skiptut=1/) && (this.skipTutorial = !0)
            }
            return t.prototype.init = function(t) {
                var e = this;
                u._console.log(t), this.ui = new f["default"](this, t), this.ui.advance.register(this.onUIAdvance.bind(this)), this.ui.skipTutorial.register(function() {
                    e.skipTutorial = !0
                }), this.ui.onMuteToggle.register(function() {
                    e.mixer.toggleMute()
                }), this.camera.add(this.ui.getMesh()), this._textureUploadObject = h.textureUploadObject(o.values(t.textures)), this._textureUploadObject.scale.set(.1, .1, .1), this._textureUploadObject.position.set(-Object.keys(t.textures).length / 20, 1.5, 0), this.scene.add(this._textureUploadObject), this.addStateHooks(), this.moonbeast = new c.MoonBeast(t, this.mobile);
                for (var i = 0; i < this.moonbeast.segments.length; i++) {
                    var n = this.moonbeast.segments[i];
                    this.scene.add(n.getMesh())
                }
                this.scene.add(this.moonbeast.getMesh()), this.moonbeast.handleReset(-20), this.moonbeast.setCamera(this.camera), this.moonbeast.reachedControlPoint.register(function(t) {
                    e.level.getCurrent().onControlPoint(t)
                }), this.kubo = new l["default"](t, this.mobile), this.scene.add(this.kubo.getMesh()), this.ui.assignKuboBarColor(this.kubo.glowColor), T.createVillageMaterial(t, 4e-4, 65e-6), this.kubo.attackEvent.register(function(t) {
                    e.level.getCurrent().onChooseAttack(t)
                });
                var a = new r.Vector3(0, this.kubo.position.y, -100);
                this.kubo.getMesh().lookAt(a), this._lights = new d.SceneLights(this.scene, this.mobile), this._lights.moonbeast.position.copy(this.moonbeast.position), this.level.init(this.scene, t), this.bindLevelEvents(), this.level.enterCurrent(), this.inputManager.bind(), this.cameraBox = new p["default"](this.camera, this.kubo, this.moonbeast), this.scene.add(this.cameraBox.getMesh()), this._textureUploadObject.lookAt(this.cameraBox.getMesh().position), this.ground = new M["default"](t, this.mobile), this.ground.particleMaterial.uniforms.headPosition.value = this.moonbeast.position, this.scene.add(this.ground.getMesh()), this.scenery = new S["default"](t, this.mobile), this.scene.add(this.scenery.getMesh()), this.initCubeMap(t), this.convolutionMaterial = A["default"](this.kernel, this.sigma, this.blurX, this.blurY);
                var s = this.renderer.getSize(),
                    m = this.getRenderTargetDimension(s.width),
                    g = this.getRenderTargetDimension(s.height);
                this.renderBuffer = new r.WebGLRenderTarget(m, g, {
                    minFilter: r.LinearFilter,
                    magFilter: r.LinearFilter,
                    format: r.RGBAFormat,
                    type: r.FloatType
                }), this.glowBufferX = new r.WebGLRenderTarget(m / 2, g / 2, {
                    minFilter: r.LinearFilter,
                    magFilter: r.LinearFilter,
                    format: r.RGBAFormat,
                    type: r.FloatType
                }), this.glowBufferY = new r.WebGLRenderTarget(m / 2, g / 2, {
                    minFilter: r.LinearFilter,
                    magFilter: r.LinearFilter,
                    format: r.RGBAFormat,
                    type: r.FloatType
                }), this.blurX.x = 1 / (m / 2), this.blurY.y = 1 / (g / 2), this.quadMaterial = E["default"](this.renderBuffer, this.glowBufferY), this.quadGeometry = new r.PlaneBufferGeometry(2, 2), this.quadScene = new r.Scene, this.quadCamera = new r.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.quadCamera.position.z = .5, this.quad = new r.Mesh(this.quadGeometry, this.quadMaterial), this.quadScene.add(this.quad);
                var v = new r.PlaneGeometry(20.48, 20.48),
                    y = new r.MeshBasicMaterial({
                        map: t.textures.moonbeast_dead,
                        transparent: !0,
                        side: r.DoubleSide
                    });
                this.moonbeastDeathCard = new r.Mesh(v, y), this.moonbeastDeathCard.rotation.y = -Math.PI, this.moonbeastDeathCard.scale.set(-.15, .15, .15), this.scene.add(this.moonbeastDeathCard), this.moonbeastDeathCard.visible = !1, this.inputManager.swallow = !0
            }, t.prototype.getRenderTargetDimension = function(t) {
                var e = a.nextPowerOf2(t);
                return e / 2 >= .9 * t && (e /= 2), e
            }, t.prototype.resize = function(t, e) {
                var i = this.getRenderTargetDimension(t),
                    n = this.getRenderTargetDimension(e);
                this.renderBuffer.setSize(t, e), this.glowBufferX.setSize(i / 2, n / 2), this.glowBufferY.setSize(i / 2, n / 2), this.blurX.x = 1 / (i / 2), this.blurY.y = 1 / (n / 2)
            }, t.prototype.bloomRender = function(t) {
                var e = this.ui.getMesh(),
                    i = e.visible;
                e.visible = !1, this.quadScene.add(e), t.render(this.scene, this.camera, this.renderBuffer, !0), this.quad.material = this.convolutionMaterial, this.convolutionMaterial.uniforms.tDiffuse.value = this.renderBuffer.texture, this.convolutionMaterial.uniforms.uImageIncrement.value = this.blurX, t.render(this.quadScene, this.quadCamera, this.glowBufferX, !0), this.convolutionMaterial.uniforms.tDiffuse.value = this.glowBufferX.texture, this.convolutionMaterial.uniforms.uImageIncrement.value = this.blurY, t.render(this.quadScene, this.quadCamera, this.glowBufferY, !0), e.visible = i, this.quad.material = this.quadMaterial, t.render(this.quadScene, this.quadCamera)
            }, t.prototype.startGame = function() {
                this.gameModel = new m["default"], this.gameModel.stateChanged.register(this.onModelChanged.bind(this)), this.ui && this.ui.updateFromModel(this.gameModel)
            }, t.prototype.begin = function() {
                this.gameState.to(n.Tutorial)
            }, t.prototype.addStateHooks = function() {
                var t = this;
                this.gameState.addHook({
                    state: n.PushTextures,
                    enter: function() {
                        t.skipIntro ? t.gameState.to(n.Tutorial) : t.gameState.to(n.Intro)
                    },
                    exit: function() {
                        t._textureUploadObject.visible = !1
                    }
                }), this.gameState.addHook({
                    state: n.Intro,
                    enter: o.bind(this.enterIntro, this),
                    exit: o.bind(this.exitIntro, this)
                }), this.gameState.addHook({
                    state: n.Tutorial,
                    enter: o.bind(this.enterTutorial, this)
                }), this.gameState.addHook({
                    state: n.Death,
                    enter: this.enterDeath.bind(this)
                }), this.gameState.addHook({
                    state: n.Victory,
                    enter: this.enterVictory.bind(this)
                }), this.gameState.addHook({
                    state: n.GameOver,
                    enter: this.enterGameOver.bind(this)
                })
            }, t.prototype.update = function(t, e) {
                var i = this;
                this.gameState.update(), this.gameState["in"]([n.Intro, n.GameOver]) || this.gameModel.update(1e3 * t), this.ui.assignKuboBarColor(this.kubo.glowColor), this.ui.update(t, e), this.mixer.update(t), this.timeScale > 0 && (this.moonbeast.update(t * this.timeScale, e), this.kubo.handleInput(this.inputManager), this.kubo.update(t * this.timeScale, e), this.kubo.isMoving() && (this.kubo.position.z += 16 * t * this.timeScale)), this.gameState.is(n.Death) && this.kubo.isGameOver() && this.gameState.to(n.GameOver), this.level.getCurrent().setPlayerPosition(this.kubo.position), this.level.getCurrent().update(t, e), this.gameState.isNot(n.Victory) && this.gameState.isNot(n.GameOver) ? (this.cameraBox.update(t * this.timeScale, e), this.ground.setPlayerPosition(this.kubo.position), this.ground.update(t, e), this.scenery.setPlayerPosition(this.kubo.position), this.scenery.update(t, e)) : (this.cameraBox.parent.position.x += (this.kubo.position.x - this.cameraBox.parent.position.x) * t * 12.5, this.cameraBox.parent.position.z = this.kubo.position.z + this.victoryCameraOffset, this.cameraBox.threeCamera.position.y = Math.sin(.43 * e) / 205, this.cameraBox.threeCamera.position.x = Math.sin(.71 * e) / 205, this.victorySet || this.kubo.isAttacking() || !this.kubo.isWon || (this.victorySet = !0, this.moonbeast.position.y = 1e4, this.moonbeast.handleReset(1e4), this.kubo.handleReset(50), this.kubo.getMesh().rotation.y = -Math.PI, this.kubo.position.x = 0, this.ground.handleReset(50), this.moonbeastDeathCard.position.set(-.7, 20.48 / 19, this.kubo.position.z - 1), this.moonbeastDeathCard.visible = !0, this.cameraBox.parent.position.y = .25, this.camera.rotation.y = -Math.PI, this.camera.rotation.x = 24 * Math.PI / 180 + Math.PI, this.victoryCameraOffset = 1.5, this.scene.remove(this.level.currentSegment.getMesh()), this.scene.remove(this.level.nextSegment.getMesh()), setTimeout(function() {
                    i.gameState.to(n.GameOver)
                }, 3e3))), this._lights.setPlayerPosition(this.kubo.position), this.moonbeast.setLocalCameraPosition(this.camera.position), this._lights.moonbeast.position.copy(this.moonbeast.position), this.cubeMap.position.copy(this.cameraBox.getMesh().position), this.cubeMap.position.y += 300
            }, t.prototype.render = function(t) {
                this._framesRendered += 1;
                var e = this.ui.mesh;
                this.mobile ? (this.camera.add(e), t.render(this.scene, this.camera), e.position.set(0, 0, -1), e.scale.set(.75, .75, 1)) : (e.position.set(0, 0, .25), e.scale.set(this.ui.screenSize.y / this.ui.screenSize.x, .99, 1), this.bloomRender(t)), this.takeScreenshot && (this.screenshot = t.domElement.toDataURL(), this.takeScreenshot = !1)
            }, t.prototype.handleResize = function(t, e) {
                this.ui.handleResize(t, e)
            }, t.prototype.handleReset = function() {
                var t = 4e3;
                this.kubo.physics.position.z > t && (t *= 2, this.kubo.handleReset(-t), this.moonbeast.handleReset(-t), this.ground.handleReset(-t), this.level.handleReset(-t), this.scenery.handleReset(-t))
            }, t.prototype.enterIntro = function(t) {
                this.ui.showBeginScreen(), this.kubo.acceptingInput = !1
            }, t.prototype.exitIntro = function(t) {
                this.inputManager.clearAll(), this.kubo.acceptingInput = !0, this.kubo.startRunning(), this.cameraBox.setStateCollectChase()
            }, t.prototype.enterTutorial = function(t) {
                this.kubo.acceptingInput = !1
            }, t.prototype.bindLevelEvents = function() {
                this.level.getCurrent().progressEvent.register(this.onExitSegment.bind(this), function(t) {
                    return y.ProgressEvent.isExit(t)
                }), this.level.getCurrent().progressEvent.register(this.onEnterSegment.bind(this), function(t) {
                    return y.ProgressEvent.isEnter(t)
                }), this.level.getCurrent().progressEvent.register(this.onHitTutorial.bind(this), function(t) {
                    return y.ProgressEvent.isTutorial(t)
                }), this.level.getCurrent().progressEvent.register(this.onGameEvent.bind(this), function(t) {
                    return y.ProgressEvent.isGame(t)
                }), this.level.getCurrent().progressEvent.register(this.onTokenEvent.bind(this), function(t) {
                    return y.ProgressEvent.isToken(t)
                })
            }, t.prototype.onExitSegment = function(t) {
                this.level.flip(), this.bindLevelEvents(), this.level.enterCurrent()
            }, t.prototype.onEnterSegment = function(t) {
                if (this.level.getCurrent().setMoonBeast(this.moonbeast), this.level.getCurrent().setKubo(this.kubo), this.gameModel.nextStage(), !(this.gameState.get() >= n.Death))
                    if (this.level.getCurrent().type == y.SegmentType.Attack) this.ui.vignette.show(), this.inputManager.attackStyle(), this.kubo.center(), this.kubo.attack(), this.gameState.to(n.Battle), this.ui.healthbars.moonbeast.show(), this.mixer.play("attack" + (Math.random() < .5 ? "A" : "B"), -1, !0), this.cameraBox.setStateAttackChase();
                    else if (this.level.getCurrent().type == y.SegmentType.Collection) {
                    this.ui.vignette.hide(), this.kubo.collect(), this.inputManager.collectStyle(), this.kubo.enableControls(), this.gameState.to(n.Collection), this.cameraBox && this.cameraBox.setStateCollectChase();
                    var e = this.gameModel.getHealthRatio();
                    e > .66 ? this.mixer.play("collectA", -1, !0) : e > .33 ? this.mixer.play("collectB", -1, !0) : this.mixer.play("collectC", -1, !0)
                }
            }, t.prototype.onGameEvent = function(t) {
                if (t.type == y.GameEventType.BeginAttack && (this.timeScale = this.gameModel.currentAttackSlowdown(), u._console.log("ATTACK SLOWDOWN %.2f", this.timeScale), this.kubo.acceptingInput = !0, this.ui.showAttackPanel()), t.type == y.GameEventType.Hit || t.type == y.GameEventType.Miss || t.type == y.GameEventType.TooSlow) {
                    t.type == y.GameEventType.Hit ? (this.gameModel.hitMoonbeast(t.value), this.kubo.hit(), this.ui.vignette.glowBlue()) : (this.gameModel.missed(t.value || 0), this.kubo.missed(), this.ui.vignette.glowRed(), this.cameraBox.shake(), t.type != y.GameEventType.TooSlow && g["default"].getInstance().play("monkey-sword")), this.timeScale = 1, this.kubo.acceptingInput = !0, this.inputManager.collectStyle();
                    var e = y.GameEventType.TooSlow == t.type ? -1 : t.which;
                    this.ui.hideAttackPanel(e), this.ui.dismissTutorialScreen(), this.ui.hideBorders()
                }
                t.type == y.GameEventType.AttackTimerUpdate && this.ui.setAttackTimer(t.value), t.type == y.GameEventType.Collide && (this.gameModel.collided(), this.cameraBox.shake())
            }, t.prototype.onTokenEvent = function(t) {
                this.gameState.is(n.Collection) && (this.gameModel.collectedToken(t.token), this.kubo.pickupToken())
            }, t.prototype.onHitTutorial = function(t) {
                u._console.log(t), this.timeScale = 0, u._console.log("tutorial phase", t);
                var e = this.skipTutorial;
                switch (e && (this.ui.show(), this.ui.showKuboBars(), this.ui.showMBBars(), this.kubo.acceptingInput = !0), t.stage) {
                    case y.TutorialStage.Steer:
                        if (this.kubo.acceptingInput = !0, this.gameState.to(n.TutorialLR), e) this.gameState.update(), this.onUIAdvance();
                        else {
                            this.ui.showSteerTutorial()
                        }
                        break;
                    case y.TutorialStage.Jump:
                        this.gameState.to(n.TutorialJump), e ? (this.gameState.update(), this.onUIAdvance()) : this.ui.showJumpTutorial();
                        break;
                    case y.TutorialStage.Token:
                        this.gameState.to(n.TutorialToken), this.kubo.acceptingInput = !1, e ? (this.gameState.update(), this.onUIAdvance()) : (this.ui.updateFromModel(this.gameModel), this.ui.showTokenTutorial()), this.ui.show();
                        break;
                    case y.TutorialStage.Attack:
                        e ? this.kubo.acceptingInput = !1 : this.ui.showAttackTutorial(), this.timeScale = 1;
                        break;
                    case y.TutorialStage.Attack2:
                        this.gameState.to(n.TutorialAttack), e ? (this.gameState.update(), this.onUIAdvance()) : this.ui.showAttackTutorial2();
                        break;
                    default:
                        throw Error("" + t)
                }
            }, t.prototype.onUIAdvance = function() {
                switch (this.gameState.get()) {
                    case n.Intro:
                        this.gameState.to(n.Tutorial), this.mixer.init(), createjs.Sound.stop(), this.mixer.play("sword-draw"), this.mixer.play("opening", -1, !0);
                        break;
                    case n.TutorialLR:
                        this.gameState.to(n.TutorialToJump);
                        break;
                    case n.TutorialJump:
                        this.gameState.to(n.TutorialToToken);
                        break;
                    case n.TutorialToken:
                        this.gameModel.tokenTutorial(), this.inputManager.clearAll(), this.kubo.acceptingInput = !0, this.gameState.to(n.TutorialToAttack), this.kubo.pickupToken()
                }
                this.gameState.is(n.TutorialAttack) ? this.timeScale = .1 : this.gameState.is(n.Intro) || (this.timeScale = 1), this.ui.dismissTutorialScreen()
            }, t.prototype.onModelChanged = function(t) {
                u._console.debug(["kuboHealth: " + t.kuboHealth, "kuboArmor: " + t.kuboArmor, "moonbeastHealth: " + t.moonbeastHealth, "score: " + t.score].join("\n")), this.ui.updateFromModel(t), t.kuboHealth <= 0 && this.gameState.to(n.Death), t.moonbeastHealth <= 0 && (this.gameState.to(n.Victory), this.moonbeast.setStateDead())
            }, t.prototype.initCubeMap = function(t) {
                var e = new r.MeshBasicMaterial({
                        map: t.textures.right,
                        side: r.DoubleSide,
                        fog: !1
                    }),
                    i = new r.MeshBasicMaterial({
                        map: t.textures.left,
                        side: r.DoubleSide,
                        fog: !1
                    }),
                    n = new r.MeshBasicMaterial({
                        map: t.textures.roof,
                        side: r.DoubleSide,
                        fog: !1
                    }),
                    o = new r.MeshBasicMaterial({
                        map: t.textures.floor,
                        side: r.DoubleSide,
                        fog: !1
                    }),
                    a = new r.MeshBasicMaterial({
                        map: t.textures.front,
                        side: r.DoubleSide,
                        fog: !1
                    }),
                    s = new r.MeshBasicMaterial({
                        map: t.textures.back,
                        side: r.DoubleSide,
                        fog: !1
                    });
                s.map.wrapS = r.RepeatWrapping, s.map.wrapT = r.RepeatWrapping, s.map.repeat.set(-1, 1);
                var h = [e, i, n, o, a, s],
                    u = (r.ShaderLib.cube, new r.MultiMaterial(h));
                u.side = r.DoubleSide, u.depthWrite = !1;
                var c = new r.CubeGeometry(1500, 1500, 1500, 1, 1, 1);
                this.cubeMap = new r.Mesh(c, u), this.cubeMap.scale.set(-1, 1, 1), this.scene.add(this.cubeMap)
            }, t.prototype.enterDeath = function() {
                this.kubo.die(), this.moonbeast.setControlPoint(new w.ControlPoint(new r.Vector3(0, 40, this.kubo.position.z + 100), 0, .4), this.scene), this.ui.hideMBBars(), this.ui.hideKuboBars()
            }, t.prototype.enterVictory = function() {
                this.ui.hideMBBars(), this.ui.hideKuboBars(), this.moonbeast.maxYMagnitude = .1, this.gameState.is(n.Victory) || (this.kubo.win(), this.kubo.collisions = !1, this.moonbeast.setControlPoint(new w.ControlPoint(new r.Vector3(0, 1e4, 0), 0, 2), this.kubo.getMesh()))
            }, t.prototype.enterGameOver = function() {
                var t = this;
                this.inputManager.swallow = !1;
                var e = this.gameModel.calculateFinalScore();
                e = e * 2;
                u._console.log(e), this.ui.showGameOver(e, this.canSaveScores), this.canSaveScores && (this.userModel || (this.userModel = v["default"].getSharedInstance()), this.takeScreenshot = !0, requestAnimationFrame(function() {
                    requestAnimationFrame(function() {
                        t.ui.setModels(t.gameModel, t.userModel), t.gameModel.endScreenshot = t.screenshot, t.gameModel.watermarkScreenshot(e), t.ui.saveScorePrompt()
                    })
                })), this.mixer.stopAll()
            }, t
        }();
        i.Game = C
    }, {
        "./components/mixer": 5,
        "./components/statemachine": 8,
        "./components/usermodel": 12,
        "./game/entities/camera2": 15,
        "./game/entities/kubo": 16,
        "./game/entities/lights": 18,
        "./game/entities/moonbeast": 19,
        "./game/entities/moonbeast/controlpoint": 20,
        "./game/gamemodel": 23,
        "./game/ground": 24,
        "./game/levelgenerator": 26,
        "./game/scenery": 27,
        "./game/segments/attack": 28,
        "./game/segments/collection": 29,
        "./game/segments/tutorial": 31,
        "./game/ui": 32,
        "./runloop": 37,
        "./shaders/convolutionmaterial": 38,
        "./shaders/quadmaterial": 47,
        "./shaders/villagematerial": 52,
        "./util/console": 53,
        "./util/textures": 58,
        lodash: 62,
        three: 64
    }],
    15: [function(t, e, i) {
        "use strict";
        var n, r = t("three"),
            o = t("../../components/statemachine"),
            a = t("../../util/tween"),
            s = t("../../util/ringbuffer"),
            h = t("../../util/utilities");
        ! function(t) {
            t[t.AttackChase = 0] = "AttackChase", t[t.CollectChase = 1] = "CollectChase"
        }(n || (n = {}));
        var u = 60,
            c = function() {
                function t(t, e, i) {
                    this.kubo = e, this.moonbeast = i, this.parent = new r.Object3D, this.noiseBuffer = new s["default"](l), this.state = new o["default"](n), this.tweens = {}, this.noiseLevel = 0, this.noiseRate = 0, this.noiseAttackLevel = 3e-4, this.noiseAttackRate = 2, this.noiseAttackEaseDuration = 6, this.noiseCollectLevel = 8e-5, this.noiseCollectRate = 1, this.noiseCollectEaseDuration = 1, this.xChaser1 = 0, this.xChaser2 = 0, this.cameraTarget = new r.Vector3, this.offsetZAttack = -2, this.offsetYAttack = 1.15, this.offsetZCollect = -1.5, this.offsetYCollect = 1.35, this.offsetZ = this.offsetZCollect, this.offsetY = this.offsetYCollect, this.cameraRotationZ = 0, this.cameraRotationVelocityZ = 0, this.cameraRotationSpring = new h.Spring1(10, .5, .1), this.cameraShakeMultiplier = 2, this.cameraShakeTimer = 0, this.cameraShakeTimeout = 1, this.elapsed = 0, this._noise = new r.Vector3, this.threeCamera = t, this.parent.add(t), this.initStateMachine(), this.setStateCollectChase()
                }
                return t.prototype.update = function(t, e) {
                    this.state.update(), this.elapsed += t, this.updateTweens(t), this.cameraShakeTimer += t;
                    var i = this.kubo.getMesh().position,
                        n = 5;
                    this.xChaser1 += (.8 * i.x - this.xChaser1) * t * n, this.xChaser2 += (this.xChaser1 - this.xChaser2) * t * n, this.parent.position.x += (this.xChaser1 - this.parent.position.x) * t * n, this.parent.position.y = this.offsetY, this.parent.position.z = i.z + this.offsetZ, this.cameraShakeTimer > this.cameraShakeTimeout && (this.cameraShakeMultiplier = 0), this.addNoise(t), this.threeCamera.rotation.z = this.threeCamera.position.y - this.threeCamera.position.x, this.cameraTarget.set(0, 0, i.z + 50), this.threeCamera.lookAt(this.cameraTarget);
                    var r = this.cameraRotationSpring.findAcceleration(t, -this.cameraRotationZ, this.cameraRotationVelocityZ);
                    this.cameraRotationVelocityZ += r * t, this.cameraRotationZ += this.cameraRotationVelocityZ * t, this.threeCamera.rotation.z += this.cameraRotationZ
                }, t.prototype.handleReset = function(t) {
                    this.parent.position.z += t
                }, t.prototype.setStateAttackChase = function() {
                    this.state.isNot(n.AttackChase) && this.state.to(n.AttackChase)
                }, t.prototype.setStateCollectChase = function() {
                    this.state.isNot(n.CollectChase) && this.state.to(n.CollectChase)
                }, t.prototype.getMesh = function() {
                    return this.parent
                }, t.prototype.shake = function() {
                    var t = 1.5,
                        e = 1.4,
                        i = h.getRandomDoubleRange(-t, -e, e, t);
                    this.cameraRotationVelocityZ += i, this.cameraShakeTimer = 0, this.cameraShakeMultiplier = 5
                }, t.prototype.initStateMachine = function() {
                    this.state.addHook({
                        state: n.AttackChase,
                        enter: this.ENTER_attackchase.bind(this),
                        exit: this.EXIT_attackchase.bind(this)
                    }), this.state.addHook({
                        state: n.CollectChase,
                        enter: this.ENTER_collectchase.bind(this),
                        exit: this.EXIT_collectchase.bind(this)
                    })
                }, t.prototype.ENTER_attackchase = function() {
                    this.setNoise(this.noiseAttackRate, this.noiseAttackLevel, this.noiseAttackEaseDuration), this.setCameraAttack()
                }, t.prototype.EXIT_attackchase = function() {}, t.prototype.ENTER_collectchase = function() {
                    this.setNoise(this.noiseCollectRate, this.noiseCollectLevel, this.noiseCollectEaseDuration), this.setCameraCollect()
                }, t.prototype.EXIT_collectchase = function() {}, t.prototype.updateTweens = function(t) {
                    for (var e in this.tweens) {
                        var i = this.tweens[e];
                        i.update(t, null)
                    }
                }, t.prototype.setNoise = function(t, e, i) {
                    var n = this;
                    n.tweens.noiseRateTween = new a["default"]({
                        points: [.25, 0, .35, 1],
                        duration: i,
                        start: n.noiseRate,
                        end: t,
                        onProgress: function(t) {
                            n.noiseRate = t
                        }
                    }), n.tweens.noiseLevelTween = new a["default"]({
                        points: [.25, 0, .35, 1],
                        duration: i,
                        start: n.noiseLevel,
                        end: e,
                        onProgress: function(t) {
                            n.noiseLevel = t
                        }
                    })
                }, t.prototype.setCameraAttack = function() {
                    var t = this;
                    t.tweens.cameraZTween = new a["default"]({
                        points: [.58, .31, .44, .97],
                        duration: this.noiseAttackEaseDuration,
                        start: t.offsetZ,
                        end: t.offsetZAttack,
                        onProgress: function(e) {
                            t.offsetZ = e
                        }
                    }), t.tweens.cameraYTween = new a["default"]({
                        points: [.58, .31, .44, .97],
                        duration: this.noiseAttackEaseDuration,
                        start: t.offsetY,
                        end: t.offsetYAttack,
                        onProgress: function(e) {
                            t.offsetY = e
                        }
                    })
                }, t.prototype.setCameraCollect = function() {
                    var t = this;
                    t.tweens.cameraZTween = new a["default"]({
                        points: [.58, .31, .44, .97],
                        duration: .5,
                        start: t.offsetZ,
                        end: t.offsetZCollect,
                        onProgress: function(e) {
                            t.offsetZ = e
                        }
                    }), t.tweens.cameraYTween = new a["default"]({
                        points: [.58, .31, .44, .97],
                        duration: .5,
                        start: t.offsetY,
                        end: t.offsetYCollect,
                        onProgress: function(e) {
                            t.offsetY = e
                        }
                    })
                }, t.prototype.spinCamera = function(t, e, i) {
                    var n = this;
                    n.tweens.cameraSpinTween = new a["default"]({
                        points: [.58, .31, .44, .97],
                        duration: i,
                        start: t,
                        end: e,
                        onProgress: function(t) {
                            n.cameraRotationZ = t
                        }
                    })
                }, t.prototype.addNoise = function(t) {
                    if (!(0 >= t)) {
                        var e = Math.max(1, ~~(u * this.noiseRate * t)),
                            i = 2 * e,
                            n = this.noiseBuffer.getNextN(i);
                        this._noise.set(n[0], n[1], 0), this._noise.multiplyScalar(this.noiseLevel * (1 + this.cameraShakeMultiplier)), this.threeCamera.position.copy(this._noise)
                    }
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = c;
        var l = [99.4, 0, 99.1854, -.244809, 117.483, -12.0595, 125.424, -14.031, 130.637, -13.5124, 137.025, -10.4457, 138.355, -7.00596, 142.477, -3.06294, 150.802, 4.42043, 156.182, 9.39342, 167.396, 12.4352, 169.034, 12.8171, 175.461, 14.2138, 187.988, 19.5082, 194.445, 17.9303, 206.392, 13.3415, 214.723, 11.2572, 217.458, 7.35482, 224.216, 5.42285, 225.285, -1.10136, 221.358, -11.2939, 220.893, -17.3209, 217.051, -27.7549, 210.506, -33.8101, 199.88, -38.7511, 194.124, -44.93, 194.19, -45.5604, 182.663, -39.1122, 166.732, -38.7643, 149.763, -33.3388, 131.204, -23.4728, 107.115, -7.7289, 80.9415, -3.0459, 54.4431, 7.1437, 31.3256, 13.9031, 13.3955, 9.83264, -2.33418, 7.81106, -36.1809, 38.5202, -48.5873, 10.223, -63.9384, 14.5942, -80.1308, 18.7665, -97.7388, -14.5641, -111.953, -14.3925, -130.106, -21.452, -150.441, -25.6746, -165.976, -25.7325, -177.404, -25.7276, -183.113, -25.1299, -197.569, -26.1027, -202.633, -19.2079, -201.734, -21.5047, -197.341, -12.6293, -195.171, -15.3676, -200.066, -15.576, -203.139, -24.4885, -200.167, -27.1975, -204.813, -27.9563, -198.734, -33.6929, -196.619, -34.524, -191.334, -32.9022, -192.242, -31.1321, -185.467, -21.3987, -184.273, -4.96728, -175.459, 2.22466, -167.912, 5.34598, -155.661, 5.45792, -146.467, 7.43722, -130.869, 10.7895, -128.771, 24.4803, -112.679, 28.2235, -103.515, 36.051, -92.804, 47.5017, -76.5833, 43.2741, -68.1531, 54.9378, -58.3331, 53.4541, -40.6416, 43.1041, -33.3803, 41.1888, -28.7534, 39.4583, -17.7918, 38.001, -15.1103, 28.2728, -12.406, 34.5586, -19.078, 41.3378, -14.4083, 53.7664, -17.0863, 67.7709, -13.4706, 75.2182, -14.451, 85.4366, -6.12852, 85.1766, -9.69838, 87.2163, -9.00297, 89.091, -13.2838, 94.5893, -17.8514, 91.0839, -21.8057, 94.4286, -36.0214, 99.4215, -40.5493, 106.392, -47.7503, 100.961, -60.2433, 95.5741, -67.9089, 90.1997, -76.8965, 82.0671, -90.9208, 77.0325, -93.0898, 65.2044, -95.9374, 62.1016, -104.705, 61.0735, -111.952, 70.6002, -125.824, 82.4764, -133.822, 97.0946, -136.667, 102.704, -141.134, 100.568, -148.495, 97.1085, -159.187, 87.7742, -162.417, 66.6719, -168.314, 58.8475, -171.105, 44.1451, -173.345, 33.8637, -172.756, 23.548, -170.28, 19.2597, -166.472, 15.5236, -163.71, 13.7496, -162.307, 26.0068, -152.667, 21.173, -140.02, 20.4501, -134.378, 25.4763, -124.736, 27.2834, -111.596, 25.1391, -98.3387, 14.9675, -91.4481, 7.68823, -74.6386, 5.41617, -60.9505, -7.5789, -56.2514, 2.40337, -37.1908, -12.6528, -25.7651, -2.76032, -11.881, -9.73882, -7.31065, -10.1386, 7.28955, -2.29484, 20.2103, -.0883247, 24.5592, -2.4447, 41.1446, 1.18044, 36.6176, .527585, 41.831, 2.32678, 52.0821, 3.49458, 58.1275, 5.26918, 65.0871, -1.08523, 71.1669, -.999612, 73.1845, 9.09759, 71.4146, 12.495, 72.122, 11.7431, 63.4046, 11.6978, 57.3622, 12.1115, 53.4358, 9.36237, 42.8521, 8.0611, 30.3587, 4.99483, 19.327, .711549, 13.0278, 6.83335, -1.0572, 15.7376, -21.5566, 23.4059, -28.962, 30.5603, -44.7017, 29.0542, -52.7572, 26.6137, -65.4161, 19.6732, -79.1384, 20.4361, -84.685, 19.0446, -95.6044, 20.7719, -101.283, 23.8732, -101.235, 24.1596, -108.251, 25.0489, -112.215, 26.5267, -113.093, 23.3912, -118.915, 17.4888, -118.743, 11.6955, -124.631, 12.376, -130.313, 13.191, -135.042, 16.2597, -133.111, 22.5052, -137.088, 24.9331, -140.931, 20.6304, -139.736, 16.3232, -141.56, 10.6251, -141.628, 8.13348, -137.622, 1.43793, -139.526, .657879, -134.898, -7.61364, -126.517, -11.2282, -124.561, -20.9738, -124.787, -31.1468, -119.732, -36.711, -117.566, -41.06, -120.464, -47.7442, -112.534, -52.5452, -111.015, -54.0516, -105.015, -58.8148, -96.2342, -63.0827, -97.8089, -60.2687, -92.6808, -60.6022, -85.6804, -60.0664, -85.4532, -56.25, -79.866, -57.5465, -76.0327, -56.7395, -71.5018, -51.1762, -67.3893, -42.4261, -59.337, -40.7716, -56.8317, -30.0741, -53.7893, -21.0703, -47.7752, -20.0175, -45.8907, -19.7981, -42.921, -15.9028, -43.1707, -13.1171, -45.7167, -10.9893, -45.6585, -6.36488, -42.7044, -2.74767, -49.2935, -3.19012, -50.7843, .518277, -64.5081, 2.84676, -73.5941, 1.03861, -82.2144, 5.21906, -89.7054, 7.23117, -91.463, 8.65729, -98.5083, 8.41, -110.112, 3.17588, -119.982, 5.64048, -127.818, 5.88361, -140.075, .294532, -151.513, -6.04396, -161.169, -6.19437, -168.12, -19.5493, -195.03, -1.87782, -210.718, 2.00894, -229.682, 3.21353, -243.307, 7.13846, -248.334, 3.85389, -256.464, 4.19733, -265.355, -9.91877, -279.982, -18.4168, -286.559, -27.0549, -284.178, -40.0015, -289.593, -46.5221, -295.644, -45.2517, -292.973, -48.2822, -293.743, -52.3098, -285.476, -60.7008, -274.266, -62.9286, -263.91, -70.4813, -262.594, -77.7433, -258.22, -90.7527, -240.228, -94.1909, -237.508, -109.559, -220.18, -104.655, -217.371, -112.464, -202.741, -113.883, -191.141, -111.306, -180.299, -119.265, -164.021, -106.767, -157.147, -104.988, -144.539, -106.147, -149.327, -93.991, -135.985, -91.4845, -129.438, -79.1367, -120.412, -75.1199, -109.638, -68.6569, -101.322, -62.4638, -81.2672, -52.253, -66.6491, -57.1093, -53.1672, -60.3201, -31.7131, -59.5191, -19.012, -66.347, -10.7426, -64.3033, 6.32271, -68.2994, 17.6459, -73.9996, 31.6977, -59.8099, 44.4369, -54.3675, 47.4329, -40.4867, 60.4244, -26.5652, 67.276, -29.0814, 77.8721, -28.1447, 89.6116, -28.5285, 95.6261, -27.2172, 108.853, -24.1527, 114.507, -24.9962, 124.676, -31.6552, 127.416, -31.9644, 132.637, -27.1154, 139.716, -26.8866, 144.269, -31.4339, 146.189, -37.4002, 146.139, -40.2912, 151.137, -44.9526, 157.441, -49.0216, 159.68, -50.1902, 161.875, -53.75, 160.676, -51.1568, 164.477, -55.4289, 159.215, -63.2115, 159.03, -56.9722, 157.217, -55.583, 156.498, -57.7136, 158.612, -60.4798, 157.802, -62.9385, 153.977, -65.9637, 155.707, -75.0194, 147.523, -77.6728, 142.903, -85.7703, 134.014, -94.2562, 127.783, -99.006, 121.54, -108.749, 111.483, -109.203, 101.9, -109.283, 91.353, -106.884, 81.0608, -109.56, 68.1841, -108.938, 58.683, -109.09, 51.0616, -109.294, 40.7813, -108.925, 34.7051, -108.897, 28.1212, -110.577, 28.0703, -104.609, 12.8957, -104.564, 8.06315, -103.563, -10.4179, -101.562, -30.8531, -100.342, -37.7331, -99.7197, -43.0051, -93.9666, -46.48, -90.3792, -54.1125, -86.6919, -69.6459, -80.579, -79.0315, -73.3238, -86.599, -75.7419, -92.4195, -76.3954, -95.0383, -79.1887, -100.079, -71.5392, -109.723, -60.016, -117.352, -57.2446, -116.478, -62.5081, -118.872, -51.3938, -118.453, -45.1185, -116.06, -51.82, -115.683, -55.2033, -119.089, -49.6015, -121.686, -48.0872, -121.999, -53.9326, -130.423, -49.0615, -131.274, -50.1416, -135.653, -46.3816, -143.186, -42.9479, -144.629, -40.0652, -144.551, -39.8406, -143.177, -41.9106, -145.911, -41.5071, -142.229, -39.3582, -137.529, -41.2477, -126.883, -46.3188, -128.477, -42.7036, -123.719, -47.0859, -118.303, -46.5675, -109.852, -54.4401, -103.13, -59.8457, -95.4226, -65.8154, -87.5399, -77.3457, -76.6857, -78.5871, -75.0202, -83.5184, -68.1848, -87.7469, -54.3581, -93.7788, -49.063, -96.9962, -30.5632, -107.129, -18.7181, -114.809, -4.26713, -119.739, 2.66526, -116.807, 15.5608, -123.184, 31.3839, -128.489, 38.856, -124.019, 48.1467, -130.93, 60.2099, -131.827, 69.2756, -130.471, 80.475, -132.194, 92.0175, -131.917, 97.8454, -133.916, 111.044, -134.542, 114.113, -132.282, 120.963, -132.79, 127.214, -129.508, 131.966, -126.131, 133.559, -127.191, 138.947, -126.07, 145.883, -127.47, 144.1, -122.147, 151.356, -121.053, 152.957, -117.252, 156.508, -113.63, 156.921, -112.002, 157.213, -102.854, 151.301, -93.081, 148.549, -91.986, 141.009, -82.832, 139.205, -85.3954, 133.295, -85.3208, 128.414, -84.0246, 122.589, -83.9042, 112.828, -83.4748, 107.544, -81.2446, 102.539, -79.0888, 96.2227, -82.619, 87.6315, -84.1894, 80.3177, -91.8027, 70.7538, -91.4818, 58.2068, -95.9806, 46.1393, -106.585, 35.8242, -101.858, 27.6996, -108.096, 14.1943, -109.244, 2.76339, -113.222, -14.4161, -107.061, -29.1329, -100.986, -43.5673, -91.237, -60.5988, -81.0524, -72.2226, -85.1424, -82.3821, -61.8687, -96.0958, -53.778, -107.489, -38.371, -110.605, -22.3289, -112.72, -15.0722, -122.963, -13.0065, -123.012, -18.1997, -122.594, -19.5548, -116.547, -27.1248, -118.971, -42.4994, -115.233, -48.9827, -105.333, -59.8302, -99.3144, -57.6695, -94.9389, -58.1783, -85.3698, -55.732, -72.362, -49.4297, -71.8498, -46.1026, -61.2503, -43.3896, -46.5933, -38.3289, -33.9431, -40.0521, -20.8197, -35.2633, -6.09395, -32.7794, -2.25877, -28.4569, 12.3358, -36.1817, 20.8647, -43.67, 34.0334, -54.0715, 39.1906, -57.1421, 46.7048, -52.7917, 64.8967, -54.2042, 69.9993, -53.5922, 78.7249, -52.8987, 86.3373, -48.2111, 89.0479, -41.5315, 99.3637, -36.3101, 103.505, -35.3252, 109.357, -29.1283, 111.439, -28.2199, 113.48, -30.8745, 117.751, -34.0341, 119.403, -37.1044, 123.666, -40.7915, 120.966, -45.7136, 119.466, -45.3629, 112.7, -46.7488, 108.831, -48.0591, 101.346, -45.0702, 99.2086, -38.9943, 86.0906, -38.4094, 76.8339, -34.5635, 68.1599, -37.5322, 48.9939, -32.6171, 40.5898, -24.3793, 25.4257, -29.6807, 15.2645, -34.9676, 2.01718, -16.3615, -15.0141, -10.6186, -28.8667, -4.47957, -40.6108, 2.95145, -57.8352, 7.91554, -71.5132, 13.0909, -83.5208, 23.5181, -101.268, 33.0166, -110.134, 37.5162, -119.307, 45.1865, -136.136, 36.0748, -140.079, 34.8529, -167.174, 29.0125, -176.282, 17.8033, -187.855, 6.67153, -178.206, -18.8286, -185.944, -31.1092, -185.261, -42.5277, -190.876, -48.0743, -170.723, -40.8563, -135.821, -32.82931, -100.642, -24.4386, -70.7281, -18.123, -30.3686, -12.8764, -1.23131, -8.2391, 30.1234, -4.9182, 60.9834, -2.1938, 99.4, 0]
    }, {
        "../../components/statemachine": 8,
        "../../util/ringbuffer": 57,
        "../../util/tween": 59,
        "../../util/utilities": 60,
        three: 64
    }],
    16: [function(t, e, i) {
        "use strict";
        var n, r = t("three"),
            o = t("lodash"),
            a = t("../../components/statemachine"),
            s = t("../../components/physicsobject"),
            h = t("../input"),
            u = t("../../components/event"),
            c = t("./sceneobject"),
            l = t("../../util/tween"),
            p = t("../../components/mixer"),
            d = t("./kubo/sprites"),
            f = 2,
            m = 5,
            g = 100,
            v = 530,
            y = 50,
            _ = 210,
            b = 18,
            x = d.KUBO_SIZE / 2;
        ! function(t) {
            t[t.Idle = 0] = "Idle", t[t.StartRunning = 1] = "StartRunning", t[t.Running = 2] = "Running", t[t.Stumbling = 3] = "Stumbling", t[t.StumbleCoolDown = 4] = "StumbleCoolDown", t[t.JumpCoolDown = 5] = "JumpCoolDown", t[t.Jumping = 6] = "Jumping", t[t.Airborne = 7] = "Airborne", t[t.Falling = 8] = "Falling", t[t.Landing = 9] = "Landing", t[t.AttackRunning = 10] = "AttackRunning", t[t.AttackingRight = 11] = "AttackingRight", t[t.AttackingLeft = 12] = "AttackingLeft", t[t.AttackingUp = 13] = "AttackingUp", t[t.AttackingStumble = 14] = "AttackingStumble", t[t.AttackingCooldown = 15] = "AttackingCooldown", t[t.Dying = 16] = "Dying", t[t.Dead = 17] = "Dead", t[t.Winning = 18] = "Winning", t[t.Won = 19] = "Won"
        }(n || (n = {}));
        var w;
        ! function(t) {
            t[t.A = 0] = "A", t[t.B = 1] = "B"
        }(w || (w = {}));
        var M = function() {
            function t(t, e) {
                var i = this;
                this.mobile = e, this.sprites = {}, this.cards = {}, this.glowColor = new r.Color(0, 0, 0), this.startGlowColor = new r.Color(0, 0, 0), this.targetGlowColor = new r.Color(0, 0, 0), this._glowTween = new l["default"]({
                    points: [.3, 0, .3, 1],
                    duration: .3,
                    start: 0,
                    end: 1,
                    onProgress: function(t) {
                        i.glowColor = i.startGlowColor.lerp(i.targetGlowColor, t)
                    }
                }), this.state = new a["default"](n), this.physics = new s["default"], this.targetLane = 0, this.direction = 0, this.acceptingInput = !0, this.attackEvent = new u.Event, this.attacking = !1, this.stumbleAfterAttack = !1, this.didHit = !1, this.isDead = !1, this.isWon = !1, this.collisions = !0, this.mesh = new r.Object3D, this.mesh.name = "kubo", this.jumpingHitbox = new c.Hitbox(this.mesh, new r.Vector3(.05, .1, 0), new r.Vector3(.2, .8, .2), 65280), this.runningHitbox = new c.Hitbox(this.mesh, new r.Vector3(.05, -.1, 0), new r.Vector3(.2, 1.2, .2), 255), window.location.search.match(/debug=1/) && (this.mesh.add(this.jumpingHitbox._getHitboxVisualizer()), this.mesh.add(this.runningHitbox._getHitboxVisualizer())), this.runningHitbox._show(), this.jumpingHitbox._hide(), this.sprites = d.kuboSprites(t), this.cards = o.mapValues(this.sprites, function(t, e) {
                    return i.mesh.add(t.card), t.card
                }), this.position = this.mesh.position, this.position.y = x, this.setSprite("idle"), this.physics.position = this.position, this.physics.gravity.y = -50, this.addStateHooks(), this.state.set(n.Idle)
            }
            return t.prototype.addStateHooks = function() {
                var t = this;
                this.state.addHook({
                    state: n.Idle,
                    enter: function() {
                        t.setSprite("idle"), t.currentSprite.loop()
                    }
                }), this.state.addHook({
                    state: n.StartRunning,
                    enter: function() {
                        t.setSprite("run_start"), t.currentSprite.reset(), t.currentSprite.play()
                    }
                }), this.state.addHook({
                    state: n.Running,
                    enter: function() {
                        return t.isDead ? void t.state.to(n.Dying) : (t.setSprite("run"), t.runningHitbox._show(), void t.jumpingHitbox._hide())
                    }
                }), this.state.addHook({
                    state: n.Jumping,
                    enter: function() {
                        t.currentJump = t.mobile ? 0 : Math.round(Math.random()), t.setSprite("jump_up_" + t.currentJump), t.currentSprite.reset().play(), t.physics.acceleration.y += 320, t.runningHitbox._hide(), t.jumpingHitbox._show(), p["default"].getInstance().play("jump")
                    }
                }), this.state.addHook({
                    state: n.Airborne,
                    enter: function() {
                        t.setSprite("jump_air_" + t.currentJump), t.currentSprite.loop(), t.runningHitbox._hide(), t.jumpingHitbox._show()
                    }
                }), this.state.addHook({
                    state: n.Falling,
                    enter: function() {
                        t.setSprite("jump_falling_" + t.currentJump), t.currentSprite.reset().play(), t.runningHitbox._hide(), t.jumpingHitbox._show()
                    }
                }), this.state.addHook({
                    state: n.JumpCoolDown,
                    enter: function() {
                        return t.isDead ? void t.state.to(n.Dying) : (t.setSprite("run"), t.currentSprite.reset().loop(), t.runningHitbox._show(), t.jumpingHitbox._hide(), void setTimeout(function() {
                            t.state.is(n.JumpCoolDown) && t.toRunningState()
                        }, y))
                    }
                }), this.state.addHook({
                    state: n.StumbleCoolDown,
                    enter: function() {
                        return t.isDead ? void t.state.to(n.Dying) : (t.toRunningSprite(), void setTimeout(function() {
                            t.state.is(n.StumbleCoolDown) && (t.position.y > x ? t.state.to(n.Falling) : t.toRunningState())
                        }, g))
                    }
                }), this.state.addHook({
                    state: n.Stumbling,
                    enter: function() {
                        t.isRunning() && t.direction > 0 ? t.setSprite("stumble_B") : t.setSprite("stumble_B"), t.currentSprite.reset().loop(), t.runningHitbox._show(), t.jumpingHitbox._hide(), t.pulseColor(.2, 0, 0), setTimeout(function() {
                            t.state.is(n.Stumbling) && (t.isDead ? t.state.to(n.Dying) : t.toRunningState())
                        }, v), p["default"].getInstance().play("stumble")
                    }
                }), this.state.addHook({
                    state: n.AttackRunning,
                    enter: function() {
                        return t.isDead ? void t.state.to(n.Dying) : (t.setSprite("run_attack_start").reset().play(), void p["default"].getInstance().play("sword-draw"))
                    }
                }), this.state.addHook({
                    state: n.AttackingRight,
                    enter: function() {
                        t.setSprite("attack_R").reset().play(), t.physics.acceleration.y = .25 * _
                    }
                }), this.state.addHook({
                    state: n.AttackingLeft,
                    enter: function() {
                        t.setSprite("attack_L").reset().play(), t.physics.acceleration.y = .75 * _
                    }
                }), this.state.addHook({
                    state: n.AttackingUp,
                    enter: function() {
                        t.setSprite("attack_U").reset().play(), t.physics.acceleration.y = _
                    }
                }), this.state.addHook({
                    state: n.AttackingCooldown,
                    enter: function() {
                        if (t.isWon) return void t.state.to(n.Winning);
                        if (t.stumbleAfterAttack) t.stumbleAfterAttack = !1, t.state.to(n.AttackingStumble);
                        else {
                            if (t.isDead) return void t.state.to(n.Dying);
                            t.setSprite("run").reset().loop(), t.acceptingInput = !0, t.collect()
                        }
                    }
                }), this.state.addHook({
                    state: n.AttackingStumble,
                    enter: function() {
                        t.setSprite("hit_A").reset().play(), t.pulseColor(.2, 0, 0), p["default"].getInstance().play("hurt")
                    }
                }), this.state.addHook({
                    state: n.Dying,
                    enter: function() {
                        t.setSprite("lose").reset().play(), p["default"].getInstance().play("hurt"), t.acceptingInput = !1
                    }
                }), this.state.addHook({
                    state: n.Winning,
                    enter: function() {
                        t.setSprite("win").reset().play(), t.acceptingInput = !1, t.currentSprite.getMaterial().side = r.DoubleSide
                    }
                })
            }, t.prototype.setSprite = function(t) {
                return this.currentCard && this.currentCard !== this.cards[t] && (this.currentCard.visible = !1), this.currentCard = this.cards[t], this.currentSprite = this.sprites[t], this.currentCard.visible = !0, this.currentSpriteName = t, this.currentSprite
            }, t.prototype.setFXSprite = function(t) {
                return this.currentFXCard && this.currentFXCard !== this.cards[t] && (this.currentFXCard.visible = !1), this.currentFXCard = this.cards[t], this.currentFXSprite = this.sprites[t], this.currentFXCard.visible = !0, this.currentFXSpriteName = t, this.currentFXSprite
            }, t.prototype.getMesh = function() {
                return this.mesh
            }, t.prototype.getHitbox = function() {
                return this.hitbox = this.state.get() <= n.JumpCoolDown ? this.runningHitbox : this.jumpingHitbox, this.hitbox.flagForUpdate(), this.hitbox.getBox()
            }, t.prototype.intersects = function(t) {
                return this.collisions ? this.hitbox.intersects(t) : !1
            }, t.prototype.handleInput = function(t) {
                if (this.acceptingInput)
                    if (t.isAttack()) {
                        var e = null;
                        t.isActive(h.InputEvent.Left) && (e = h.InputEvent.Left, this.attackLeft()), t.isActive(h.InputEvent.Up) && (e = h.InputEvent.Up, this.attackUp()), t.isActive(h.InputEvent.Right) && (e = h.InputEvent.Right, this.attackRight()), null !== e && (this.attackEvent.trigger(e), this.acceptingInput = !1), t.clear(e)
                    } else t.isActive(h.InputEvent.Right) && this.state["in"]([n.Running, n.JumpCoolDown, n.StumbleCoolDown, n.AttackingCooldown]) && (this.right(), t.clear(h.InputEvent.Right)), t.isActive(h.InputEvent.Left) && this.state["in"]([n.Running, n.JumpCoolDown, n.StumbleCoolDown, n.AttackingCooldown]) && (this.left(), t.clear(h.InputEvent.Left)), t.isActive(h.InputEvent.Up) && this.jump(), t.isActive(83) && this.stumble()
            }, t.prototype.update = function(t, e) {
                var i = !1;
                switch (this.state.update(), this.currentSprite.update(t), this.physics.update(t), this.position.y = Math.max(this.position.y, x), this.currentFXSprite && (this.currentFXSprite.getProgress() >= 1 && (this.currentFXCard.visible = !1), this.currentFXSprite.update(t)), this.position.y <= x + .01 && (this.position.y = x, this.physics.velocity.y = Math.max(this.physics.velocity.y, 0), this.physics.acceleration.y = Math.max(this.physics.acceleration.y, 0)), this.state.get()) {
                    case n.StartRunning:
                        this.currentSprite.playing || this.state.to(n.Running);
                        break;
                    case n.Jumping:
                        this.currentSprite.playing || this.state.to(n.Airborne);
                        break;
                    case n.Airborne:
                        this.physics.velocity.y <= 0 && this.state.to(n.Falling);
                        break;
                    case n.Falling:
                        this.position.y <= x && this.state.to(n.JumpCoolDown);
                        break;
                    case n.AttackRunning:
                        this.currentSprite.playing || this.setSprite("run_attack").reset().loop();
                        break;
                    case n.AttackingRight:
                        if (i = !0, this.position.x = Math.sin(this.currentSprite.getProgress() * Math.PI * .5) * -.7, this.physics.acceleration.y += b, !this.currentSprite.playing) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        if (this.stumbleAfterAttack && this.currentSprite.currentFrame >= 15) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        break;
                    case n.AttackingLeft:
                        if (i = !0, this.position.x = .7 * Math.sin(this.currentSprite.getProgress() * Math.PI * .5), this.physics.acceleration.y += b, !this.currentSprite.playing) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        if (this.stumbleAfterAttack && this.currentSprite.currentFrame >= 16) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        break;
                    case n.AttackingUp:
                        if (this.physics.acceleration.y += b, !this.currentSprite.playing) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        if (this.stumbleAfterAttack && this.currentSprite.currentFrame >= 15) {
                            this.state.to(n.AttackingCooldown);
                            break
                        }
                        break;
                    case n.AttackingStumble:
                        this.currentSprite.playing || this.state.to(n.AttackingCooldown);
                        break;
                    case n.AttackingCooldown:
                        break;
                    case n.Dying:
                        this.currentSprite.playing || this.state.to(n.Dead);
                        break;
                    case n.Winning:
                        this.currentSprite.playing || this.state.to(n.Won)
                }
                var r = this.targetLane * f,
                    o = r - this.position.x;
                Math.abs(o) < .1 || Math.abs(this.position.x) > f ? (this.direction = 0, i || (this.position.x += .1 * t * o), this.state["in"]([n.Running, n.AttackingCooldown]) && this.setSprite("run")) : this.position.x += t * m * this.direction, this._glowTween.update(t, e), this.currentSprite.getMaterial().emissive.copy(this.glowColor)
            }, t.prototype.handleReset = function(t) {
                this.mesh.position.z += t
            }, t.prototype.right = function() {
                this.direction = -1, this.setSprite("turn_R"), this.position.x > .2 ? this.targetLane = 0 : this.targetLane = -1
            }, t.prototype.left = function() {
                this.direction = 1, this.setSprite("turn_L"), this.position.x < -.2 ? this.targetLane = 0 : this.targetLane = 1
            }, t.prototype.center = function() {
                this.acceptingInput = !1, this.targetLane = 0, this.direction = this.position.x < 0 ? 1 : -1
            }, t.prototype.jump = function() {
                this.state["in"]([n.Running, n.AttackingCooldown]) && this.state.set(n.Jumping), this.physics.acceleration.y += 10
            }, t.prototype.stumble = function() {
                return !this.isMoving() || this.state["in"]([n.Stumbling, n.StumbleCoolDown]) || this.isDead || this.isWon ? !1 : (this.state.set(n.Stumbling), !0)
            }, t.prototype.enableControls = function() {
                this.acceptingInput = !0
            }, t.prototype.attack = function() {
                this.attacking = !0, this.state["in"]([n.Running, n.AttackingCooldown]) && this.state.to(n.AttackRunning)
            }, t.prototype.collect = function() {
                this.attacking = !1, this.state["in"]([n.AttackingCooldown, n.AttackRunning]) && this.state.to(n.Running)
            }, t.prototype.toRunningSprite = function() {
                this.attacking ? this.setSprite("run_attack") : this.setSprite("run"), this.currentSprite.reset()
            }, t.prototype.toRunningState = function() {
                this.state.get() >= n.Dying || (this.attacking ? this.state.to(n.AttackRunning) : this.state.to(n.Running))
            }, t.prototype.startRunning = function() {
                this.state.to(n.StartRunning)
            }, t.prototype.isRunning = function() {
                return this.state["in"]([n.Running, n.AttackRunning])
            }, t.prototype.isMoving = function() {
                return this.state.get() > n.StartRunning && this.state.get() < n.Dying
            }, t.prototype.attackRight = function() {
                this.state.set(n.AttackingRight), this.hitDirection = "right"
            }, t.prototype.attackLeft = function() {
                this.state.set(n.AttackingLeft), this.hitDirection = "left"
            }, t.prototype.attackUp = function() {
                this.state.set(n.AttackingUp), this.hitDirection = "mid"
            }, t.prototype.tweenGlowTo = function(t, e, i) {
                this._glowTween.reset(0, 1), this.startGlowColor.copy(this.glowColor), this.targetGlowColor.setRGB(t, e, i)
            }, t.prototype.pulseColor = function(t, e, i) {
                var n = this;
                this.tweenGlowTo(t, e, i), this._glowTween.onComplete = function() {
                    n.tweenGlowTo(0, 0, 0)
                }
            }, t.prototype.glowGold = function() {
                this.pulseColor(.25, .15, 0)
            }, t.prototype.hit = function() {
                var t = this;
                this.stumbleAfterAttack = !1, this.didHit = !0, this.pulseColor(0, .1, .2), "left" === this.hitDirection && setTimeout(function() {
                    t.setFXSprite("blood_left").reset().play()
                }, 400), "right" === this.hitDirection && setTimeout(function() {
                    t.setFXSprite("blood_right").reset().play(), t.currentFXSprite.material.side = r.DoubleSide
                }, 400), "mid" === this.hitDirection && setTimeout(function() {
                    t.setFXSprite("blood_mid").reset().play()
                }, 400), this.hitDirection = "", p["default"].getInstance().play("moon-beast-hit"), p["default"].getInstance().play("monkey-sword")
            }, t.prototype.missed = function() {
                this.stumbleAfterAttack = !0, this.didHit = !1, this.state.is(n.AttackRunning) && this.state.to(n.AttackingCooldown)
            }, t.prototype.pickupToken = function() {
                this.isMoving() && (this.glowGold(), p["default"].getInstance().play("token"));
                var t = Math.random() * Math.PI;
                this.setFXSprite("glint_B").reset().play(), this.currentFXSprite.material.uniforms.opacity.value = .25, this.currentFXCard.rotation.z = t
            }, t.prototype.die = function() {
                this.isDead = !0
            }, t.prototype.win = function() {
                this.isWon = !0
            }, t.prototype.isWinning = function() {
                return this.state["in"]([n.Winning, n.Won])
            }, t.prototype.isGameOver = function() {
                return this.state["in"]([n.Dead, n.Won])
            }, t.prototype.isAttacking = function() {
                return this.state["in"]([n.AttackingCooldown, n.AttackingLeft, n.AttackingRight, n.AttackingStumble, n.AttackingUp, n.AttackRunning])
            }, t
        }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = M
    }, {
        "../../components/event": 3,
        "../../components/mixer": 5,
        "../../components/physicsobject": 6,
        "../../components/statemachine": 8,
        "../../util/tween": 59,
        "../input": 25,
        "./kubo/sprites": 17,
        "./sceneobject": 21,
        lodash: 62,
        three: 64
    }],
    17: [function(t, e, i) {
        "use strict";

        function n(t) {
            return a.assign({}, h, t)
        }

        function r(t) {
            var e = new o.PlaneGeometry(i.KUBO_SIZE, i.KUBO_SIZE);
            return a.mapValues(u, function(i, r) {
                var a = new s["default"](n(i.p), t.textures[i.texture]),
                    h = new o.Mesh(e, a.getMaterial());
                if (h.visible = !1, i.position && h.position.set(i.position[0], i.position[1], i.position[2]), i.scale && "number" == typeof i.scale) {
                    var u = i.scale;
                    h.scale.set(u, u, u)
                }
                if (i.scale && i.scale.length) {
                    var u = i.scale;
                    h.scale.set(u[0], u[1], u[2])
                }
                return i.init && i.init(a), a.card = h, a
            })
        }
        var o = t("three"),
            a = t("lodash"),
            s = t("../../../components/spriteanimation"),
            h = {
                fps: 30,
                rows: 4,
                cols: 4
            };
        i.KUBO_SIZE = 1.5;
        var u = {
            idle: {
                p: {
                    frames: 32,
                    rows: 8
                },
                texture: "kubo_idle",
                position: [-.42, -.15, 0],
                scale: 1.3
            },
            run_start: {
                p: {
                    frames: 16
                },
                texture: "kubo_run_start",
                position: [-.42, -.15, 0],
                scale: 1.3
            },
            run_attack: {
                p: {
                    frames: 14
                },
                texture: "kubo_run_attack",
                position: [-.37, .1, 0],
                scale: 1.38
            },
            run_attack_start: {
                p: {
                    frames: 14
                },
                texture: "kubo_run_attack_start",
                position: [-.37, .1, 0],
                scale: 1.38
            },
            run: {
                p: {
                    frames: 14
                },
                texture: "kubo_run",
                position: [-.35, 0, 0]
            },
            jump_up_0: {
                p: {
                    frames: 8,
                    rows: 2
                },
                texture: "kubo_jump_up_0",
                position: [-.15, 0, 0]
            },
            jump_air_0: {
                p: {
                    frames: 4,
                    rows: 1
                },
                texture: "kubo_jump_air_0",
                position: [-.15, 0, 0]
            },
            jump_falling_0: {
                p: {
                    frames: 8,
                    rows: 2
                },
                texture: "kubo_jump_falling_0",
                position: [-.15, 0, 0]
            },
            jump_up_1: {
                p: {
                    frames: 8,
                    rows: 2
                },
                texture: "kubo_jump_up_1",
                position: [-.15, 0, 0]
            },
            jump_air_1: {
                p: {
                    frames: 4,
                    rows: 1
                },
                texture: "kubo_jump_air_1",
                position: [-.15, 0, 0]
            },
            jump_falling_1: {
                p: {
                    frames: 8,
                    rows: 2
                },
                texture: "kubo_jump_falling_1",
                position: [-.15, 0, 0]
            },
            turn_L: {
                p: {
                    frames: 14
                },
                texture: "kubo_turn_L",
                position: [-.35, 0, 0]
            },
            turn_R: {
                p: {
                    frames: 14
                },
                texture: "kubo_turn_R",
                position: [-.35, 0, 0]
            },
            stumble_R: {
                p: {
                    frames: 16
                },
                texture: "kubo_stumble",
                position: [-.3, 0, 0]
            },
            stumble_L: {
                p: {
                    frames: 16
                },
                texture: "kubo_stumble",
                position: [.3, 0, 0],
                scale: [-1, 1, 1],
                init: function(t) {
                    t.getMaterial().side = o.BackSide
                }
            },
            stumble_B: {
                p: {
                    frames: 16
                },
                texture: "kubo_stumbleB",
                position: [-.3, 0, 0],
                init: function(t) {}
            },
            attack_R: {
                p: {
                    frames: 32,
                    rows: 8
                },
                texture: "kubo_attack_R",
                scale: 1.8,
                position: [.14, .6, 0]
            },
            attack_U: {
                p: {
                    frames: 32,
                    rows: 8
                },
                texture: "kubo_attack_U",
                position: [-.27, .3, 0],
                scale: 1.3
            },
            attack_L: {
                p: {
                    frames: 27,
                    rows: 8
                },
                texture: "kubo_attack_L",
                position: [0, .2, 0],
                scale: 1.3
            },
            hit_A: {
                p: {
                    frames: 32,
                    rows: 8
                },
                texture: "kubo_hit_A",
                position: [-.2, .05, 0],
                scale: 1
            },
            blood_left: {
                p: {
                    frames: 16,
                    rows: 4,
                    cols: 4
                },
                texture: "fx_blood_L",
                position: [-.75, 1, -.1],
                scale: [2, 2, 1]
            },
            blood_right: {
                p: {
                    frames: 16,
                    rows: 4,
                    cols: 4
                },
                texture: "fx_blood_L",
                position: [.6, .45, -.1],
                scale: [-2, 2, 1]
            },
            blood_mid: {
                p: {
                    frames: 16,
                    rows: 4,
                    cols: 4
                },
                texture: "fx_blood_M",
                position: [0, .45, -.1],
                scale: [1.5, 1.5, 1]
            },
            lose: {
                p: {
                    frames: 64,
                    rows: 8,
                    cols: 8
                },
                texture: "kubo_lose",
                position: [-.2, -.1, 0],
                scale: 1
            },
            win: {
                p: {
                    frames: 32,
                    rows: 8
                },
                texture: "kubo_win",
                position: [0, -.2, 0],
                scale: [.7, .7, .7]
            },
            glint_B: {
                p: {
                    frames: 8,
                    rows: 2
                },
                texture: "glint_B",
                position: [0, .17, .1],
                scale: [.5, .5, .5]
            }
        };
        i.kuboSprites = r
    }, {
        "../../../components/spriteanimation": 7,
        lodash: 62,
        three: 64
    }],
    18: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = function() {
                function t(t, e) {
                    this.indirect = new n.AmbientLight(2236979, .3), t.add(this.indirect), this.moon = new n.DirectionalLight(15658751, 1.2), this.moon.position.set(5, 45, 0), this.moon.target.position.set(0, -10, -5), this.moon.add(this.moon.target), this.moon.target.updateMatrixWorld(!0), this.moon.castShadow = !0, this.moon.shadow.mapSize.set(512, 1024), e && (this.moon.castShadow = !1);
                    var i = this.moon.shadow.camera;
                    if (i.near = 1, i.far = 50, i.right = 10, i.left = -10, i.top = -10, i.bottom = -60, location.search.match(/debug=1/)) {
                        var r = new n.CameraHelper(this.moon.shadow.camera);
                        t.add(r)
                    }
                    t.add(this.moon), this.key = new n.DirectionalLight(14540253, 1), this.key.position.set(-1, 4, -4), t.add(this.key), this.moonbeast = new n.PointLight(5498615, 2), this.moonbeast.distance = 10, this.moonbeast.castShadow = !1, t.add(this.moonbeast), t.fog = new n.Fog(1910581), e ? t.fog.far = 50 : t.fog.far = 80
                }
                return t.prototype.getMesh = function() {}, t.prototype.setPlayerPosition = function(t) {
                    this.moon.position.z = t.z
                }, t.prototype.handleReset = function(t) {
                    this.moon.position.z += t
                }, t
            }();
        i.SceneLights = r
    }, {
        three: 64
    }],
    19: [function(t, e, i) {
        "use strict";

        function n(t, e, i, r) {
            if (e) {
                var s = r;
                _.forOwn(e, function(e, r) {
                    var h = e,
                        u = t.objs[r].children[0].clone();
                    u.position.fromArray(a.moonBeastData[r].position), u.position.sub((new o.Vector3).fromArray(a.moonBeastData[i].position)), s.add(u), n(t, h, r, u)
                })
            }
        }
        var r, o = t("three"),
            a = t("../../assets"),
            s = t("../../components/statemachine"),
            h = t("../../components/event"),
            u = t("../../util/tween"),
            c = t("../../shaders/moonbeastMaterials"),
            l = t("../../shaders/glowmaterial"),
            p = t("../../components/physicsobject");
        ! function(t) {
            t[t.Moving = 0] = "Moving", t[t.Attacking = 1] = "Attacking", t[t.Commit = 2] = "Commit", t[t.Dead = 3] = "Dead"
        }(r || (r = {}));
        var d = function() {
            function t(t, e) {
                var i = this;
                this.mesh = new o.Object3D, this.segments = new Array, this.tweens = {}, this.reachedControlPoint = new h.Event, this.position = this.mesh.position, this.previousPosition = (new o.Vector3).copy(this.position), this.direction = new o.Vector3(0, 0, 1), this.speed = 40, this.turningForce = 3.5, this.maxYMagnitude = .8, this.groundHeight = 0, this.maxGroundHeight = 2.5, this.groundRepulsionForce = 10, this.groundRepulsionVector = new o.Vector3(0, 1, 0), this.maxCameraDistance = 1, this.cameraRepulsionForce = 10, this.time = 0, this.localCameraPosition = new o.Vector3, this._chaser = new o.Vector3, this._lookChaser = new o.Quaternion, this._lookQuaternion = new o.Quaternion, this._target = new o.Vector3, this._force = new o.Vector3, this._cameraDistance = new o.Vector3, this._cameraPosition = new o.Vector3, this._newPosition = new o.Vector3, this._segmentDirection = new o.Vector3, this._segmentLocalRotation = new o.Vector3, this._localPosition = new o.Vector3, this.attackSegmentAmplitudeY = .5, this.attackSegmentAmplitudeX = 1, this.attackJawAngle = Math.PI / 8, this.attackJawBiteDistance = 40, this.hasBitten = !1, this.movementSegmentAmplitudeY = 6, this.movementSegmentAmplitudeX = 2, this.segmentFrequencyY = 7, this.segmentAmplitudeY = 0, this.segmentFrequencyX = 13, this.segmentAmplitudeX = 0, this.legFrequency = 7, this.legAmplitude = Math.PI / 6, this.headRoll = 0, this.headSnap = 0, this._lookAt = new o.Vector3, this._positionDifference = new o.Vector3, this._distance = new o.Vector3, this._direction = new o.Vector3, this._right = new o.Vector3, this._up = new o.Vector3(0, 1, 0), this._localRotation = new o.Vector3, this.jawAttackBiteAngle = -Math.PI / 6, this.jawOpenAngle = Math.PI / 10, this.legsAttackAngle = .5, this.handAngle = Math.PI / 2, this.legsMovingAngle = 0, this.headRollValue = Math.PI / 8, this.headSnapAngle = 0;
                var r = this;
                if (this.glowCardGeometry = new o.PlaneGeometry(8, 8), this.glowCardMaterial = l.createGlowMaterial(t), this.glowCard = new o.Mesh(this.glowCardGeometry, this.glowCardMaterial), this.glowCard.name = "glowCard", _.keys(a.moonBeastGraph).forEach(function(e) {
                        var r = a.moonBeastGraph[e],
                            o = t.objs[e].children[0].clone(),
                            s = a.moonBeastData[e].position,
                            h = a.moonBeastData[e].weight,
                            u = a.moonBeastData[e].height;
                        n(t, r, e, o);
                        var c = new f(o, s[2] / 2, h, u);
                        i.segments.push(c), i.mesh.add(o)
                    }), !e)
                    for (var s = 0; s < this.segments.length; s += 3) {
                        var u = this.segments[s],
                            p = this.glowCard.clone();
                        p.scale.set(l.segmentScales[s], l.segmentScales[s], l.segmentScales[s]), p.position.z += 2.67, p.position.y -= .5, u.mesh.add(p), u.glowCard = p
                    }
                this.materials = c.createMoonbeastMaterials(t), this.mesh.traverse(function(t) {
                    t instanceof o.Mesh && (t.castShadow = !0, t.receiveShadow = !0, t.name.match(/(hand)/) ? t.material = r.materials.handMaterial : t.name.match(/(thigh|shin|foot)/) ? t.material = r.materials.legMaterial : t.name.match(/(cn_lo_segment(A|B|L|M|N))/) ? t.material = r.materials.ABLMNMaterial : t.name.match(/(cn_lo_segment(C|D|E|F|G|H|I|J|K))/) ? t.material = r.materials.CDEFGHIJKMaterial : t.name.match(/(cn_lo_segment(O|P|Q|R|S|T|U|V|W))/) ? t.material = r.materials.OPQRSTUVWMaterial : t.name.match(/glowCard/) ? (t.material = r.glowCardMaterial, t.castShadow = !1, t.receiveShadow = !1) : t.material = r.materials.headMaterial)
                }), this.initStateMachine(), this.setStateMoving()
            }
            return t.prototype.update = function(t, e) {
                this.stateMachine.isNot(r.Dead) ? this.updateMovementFromControlPoints(t, e) : this.updateMovementFromControlPoints(t, e)
            }, t.prototype.setCamera = function(t) {
                this.camera = t
            }, t.prototype.updateMovementWhenDead = function(t, e) {
                var i = this.segments[0];
                i.updatePhysics(t);
                for (var n = 1; n < this.segments.length; n++) {
                    var r = this.segments[n];
                    r.updatePhysics(t), this._distance.subVectors(r.physics.position, i.physics.position).normalize(), this._distance.multiplyScalar(i.offset - r.offset), this._distance.add(i.physics.position), r.physics.position.copy(this._distance), r.mesh.position.copy(r.physics.position), r.mesh.lookAt(i.mesh.position), i = r
                }
            }, t.prototype.updateMovementFromControlPoints = function(t, e) {
                if (this.controlPoint) {
                    this._target.copy(this.controlPoint.position);
                    var i = this.controlPoint.importance * this.turningForce * t;
                    this._force.subVectors(this._target, this.position), this._force.normalize(), this._force.multiplyScalar(i), this.direction.add(this._force);
                    var n = this.segments[0].mesh.position.y - this.groundHeight;
                    if (this.maxGroundHeight > n) {
                        var r = (this.maxGroundHeight - n) / this.maxGroundHeight;
                        r *= this.groundRepulsionForce, this._force.copy(this.groundRepulsionVector).normalize().multiplyScalar(r * t), this.direction.add(this._force)
                    }
                    this.camera.getWorldPosition(this._cameraPosition), this._cameraDistance.copy(this.position).sub(this._cameraPosition);
                    var o = this._cameraDistance.length();
                    if (o < this.maxCameraDistance) {
                        var a = (this.maxCameraDistance - o) / this.maxCameraDistance;
                        a *= this.cameraRepulsionForce, this._cameraDistance.normalize().multiplyScalar(a * t), this.direction.add(this._cameraDistance)
                    }
                    this.direction.normalize(), this.direction.y = Math.min(Math.max(this.direction.y, -this.maxYMagnitude), this.maxYMagnitude),
                        this.direction.multiplyScalar(this.speed * t), this.previousPosition.copy(this.position), this.position.add(this.direction), this.updateSegments(t), this.updateTweens(t), this.stateMachine.update(), this.position.distanceToSquared(this.controlPoint.position) < this.controlPoint.radius * this.controlPoint.radius && this.reachedControlPoint.trigger(this.controlPoint), this.time += t
                }
            }, t.prototype.setLocalCameraPosition = function(t) {
                this.localCameraPosition.copy(t)
            }, t.prototype.getMesh = function() {
                return this.mesh
            }, t.prototype.handleReset = function(t) {
                this.position.z += t, this.previousPosition.z += t;
                for (var e = 0; e < this.segments.length; e++) {
                    var i = this.segments[e];
                    i.handleReset(t)
                }
                this.controlPoint && (this.controlPoint.position.z += t)
            }, t.prototype.setControlPoint = function(t, e) {
                this.controlPoint = t, e.localToWorld(this.controlPoint.position), this._chaser.subVectors(this.controlPoint.position, this.position);
                var i = this._chaser.length();
                this.stateMachine.is(r.Moving) ? this.speed = (.5 * i + 40 + 40) / 3 : this.speed = 40
            }, t.prototype.updateSegments = function(t) {
                var e = this,
                    i = this.segments[0];
                i.mesh.worldToLocal(this.localCameraPosition), i.glowCard && i.glowCard.lookAt(this.localCameraPosition), i.mesh.localToWorld(this.localCameraPosition), this.animate(t), i.setDt(t);
                for (var n = 1; n < e.segments.length; n++) {
                    var r = e.segments[n];
                    r.mesh.getWorldDirection(e._segmentDirection), e._segmentDirection.normalize(), e._newPosition.subVectors(r.position, i.previousPosition).normalize(), e._newPosition.multiplyScalar(i.offset - r.offset), e._newPosition.add(i.previousPosition), r.setPositionVector(e._newPosition), e.animateSegments(t, r, n), r.mesh.lookAt(i.mesh.position), r.mesh.rotation.toVector3(e._segmentLocalRotation), r.mesh.worldToLocal(e._segmentLocalRotation), r.mesh.worldToLocal(e._newPosition);
                    var o = Math.min(2 * e._newPosition.x, Math.PI / 6);
                    e._segmentLocalRotation.z -= o, r.mesh.localToWorld(e._newPosition), r.mesh.localToWorld(e._segmentLocalRotation), r.mesh.rotation.setFromVector3(e._segmentLocalRotation), i = r, r.mesh.worldToLocal(this.localCameraPosition), r.glowCard && r.glowCard.lookAt(this.localCameraPosition), r.mesh.localToWorld(this.localCameraPosition), r.setDt(t)
                }
            }, t.prototype.animate = function(t) {
                var e = this.segments[0],
                    i = e.offset / 3;
                this._positionDifference.subVectors(this.position, this.previousPosition), this._lookAt.copy(this.position), this._direction.copy(this._positionDifference).normalize(), this._right.crossVectors(this._direction, this._up).normalize();
                var n = Math.sin(this.time * this.segmentFrequencyX + i) * this.segmentAmplitudeX * (1 - e.weight),
                    r = Math.sin(this.time * this.segmentFrequencyY + i) * this.segmentAmplitudeY * (1 - e.weight);
                this._right.multiplyScalar(1.6 * n), this._lookAt.add(this._right), this._lookAt.y += 1.6 * r, e.mesh.lookAt(this._lookAt), this._right.crossVectors(this._direction, this._up).normalize(), this._right.multiplyScalar(n), e.setPositionVector(this.position), e.position.add(this._right), e.position.y += r, e.mesh.position.copy(e.position), this._right.crossVectors(this._direction, this._up).normalize(), this._right.multiplyScalar(.6 * n), e.mesh.position.y += .6 * r, e.mesh.position.add(this._right), e.mesh.rotation.z += this.headRoll, e.mesh.rotation.y += this.headRoll, e.mesh.rotation.toVector3(this._localRotation), e.mesh.worldToLocal(this._localRotation), this._localRotation.x += this.headSnap, e.mesh.localToWorld(this._localRotation), e.mesh.rotation.setFromVector3(this._localRotation)
            }, t.prototype.animateSegments = function(t, e, i) {
                var n = this,
                    a = e.offset / 3,
                    s = Math.sin(this.time * this.segmentFrequencyX + a) * this.segmentAmplitudeX * (1 - e.weight) * .6,
                    h = Math.sin(this.time * this.segmentFrequencyY + a) * this.segmentAmplitudeY * (1 - e.weight) * .6;
                e.mesh.getWorldDirection(this._direction), this._direction.copy(this._positionDifference).normalize(), this._right.crossVectors(this._direction, this._up).normalize(), this._right.multiplyScalar(s), e.mesh.position.add(this._right), e.mesh.position.y += h, e.mesh.rotation.toVector3(this._localRotation), e.mesh.worldToLocal(this._localRotation), this.stateMachine.is(r.Moving) && e.mesh.traverse(function(t) {
                    e.mesh != t && t instanceof o.Mesh && (t.rotation.x = -1 * (Math.sin(n.time * n.legFrequency + i / 2) * n.legAmplitude - n.legAmplitude))
                }), e.mesh.localToWorld(this._localRotation), e.mesh.rotation.setFromVector3(this._localRotation)
            }, t.prototype.initStateMachine = function() {
                this.stateMachine = new s["default"](r), this.stateMachine.addHook({
                    state: r.Moving,
                    enter: this.ENTER_moving.bind(this),
                    exit: this.EXIT_moving.bind(this)
                }), this.stateMachine.addHook({
                    state: r.Attacking,
                    enter: this.ENTER_attacking.bind(this),
                    exit: this.EXIT_attacking.bind(this)
                }), this.stateMachine.addHook({
                    state: r.Commit,
                    enter: this.ENTER_commit.bind(this),
                    exit: this.EXIT_commit.bind(this)
                }), this.stateMachine.addHook({
                    state: r.Dead,
                    enter: this.ENTER_dead.bind(this),
                    exit: this.EXIT_dead.bind(this)
                })
            }, t.prototype.setStateMoving = function() {
                this.stateMachine.isNot(r.Moving) && this.stateMachine.to(r.Moving)
            }, t.prototype.setStateAttacking = function() {
                this.stateMachine.isNot(r.Attacking) && this.stateMachine.to(r.Attacking)
            }, t.prototype.setStateCommit = function() {
                this.stateMachine.isNot(r.Commit) && this.stateMachine.to(r.Commit)
            }, t.prototype.setStateDead = function() {
                this.stateMachine.isNot(r.Dead) && this.stateMachine.to(r.Dead)
            }, t.prototype.ENTER_commit = function() {
                var t = this;
                this.tweens.attackingTweenX = new u["default"]({
                    points: [.1, .57, .51, .87],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.1, .57, .51, .87],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.EXIT_commit = function() {
                var t = this;
                this.tweens.attackingTweenX = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.ENTER_moving = function() {
                var t = this;
                this.legsMovingPosition(), this.headRollMiddle(), this.headReset(), this.tweens.attackingTweenX = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: this.movementSegmentAmplitudeX,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: this.movementSegmentAmplitudeY,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.EXIT_moving = function() {
                var t = this;
                this.tweens.attackingTweenX = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.ENTER_attacking = function() {
                var t = this;
                this.jawOpen(), this.legsAttackPosition();
                var e = Math.random();
                .33 > e ? this.headRollLeft() : .66 > e ? this.headRollMiddle() : this.headRollRight(), this.tweens.attackingTweenX = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: this.attackSegmentAmplitudeX,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: this.attackSegmentAmplitudeY,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.EXIT_attacking = function() {
                var t = this;
                this.tweens.attackingTweenX = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeX,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeX = e
                    }
                }), this.tweens.attackingTweenY = new u["default"]({
                    points: [.5, .5, .5, .5],
                    duration: .5,
                    start: this.segmentAmplitudeY,
                    end: 0,
                    onProgress: function(e) {
                        return t.segmentAmplitudeY = e
                    }
                })
            }, t.prototype.ENTER_dead = function() {}, t.prototype.EXIT_dead = function() {}, t.prototype.updateTweens = function(t) {
                for (var e in this.tweens) {
                    var i = this.tweens[e];
                    i.update(t, null)
                }
            }, t.prototype.jawBite = function() {
                var t = this.segments[0].mesh,
                    e = t.children[0];
                this.tweens.jawTween = new u["default"]({
                    points: [.58, .1, .79, .36],
                    duration: .2,
                    start: e.rotation.x,
                    end: this.jawAttackBiteAngle,
                    onProgress: function(t) {
                        return e.rotation.x = t
                    }
                }), this.headSnapUp(), this.headRollMiddle()
            }, t.prototype.jawOpen = function() {
                var t = this.segments[0].mesh,
                    e = t.children[0];
                this.tweens.jawTween = new u["default"]({
                    points: [.35, .58, .73, .39],
                    duration: 3,
                    start: e.rotation.x,
                    end: this.jawOpenAngle,
                    onProgress: function(t) {
                        return e.rotation.x = t
                    }
                }), this.headReset()
            }, t.prototype.legsAttackPosition = function() {
                var t = this;
                this.tweens.legsTween = new u["default"]({
                    points: [.35, .58, .73, .39],
                    duration: 1,
                    start: this.legsMovingAngle,
                    end: this.legsAttackAngle,
                    onProgress: function(e) {
                        for (var i = function(i) {
                                var n = t.segments[i];
                                n.mesh.traverse(function(t) {
                                    n.mesh != t && t instanceof o.Mesh && (t.rotation.x = e)
                                })
                            }, n = 1; n < t.segments.length; n++) i(n)
                    }
                })
            }, t.prototype.handSwipeDown = function() {
                var t = this.segments[this.segments.length - 1];
                this.tweens.handX = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.x,
                    end: this.handAngle,
                    onProgress: function(e) {
                        t.mesh.rotation.x = e
                    }
                })
            }, t.prototype.handSwipeLeft = function() {
                var t = this.segments[this.segments.length - 1];
                this.tweens.handY = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.y,
                    end: this.handAngle,
                    onProgress: function(e) {
                        t.mesh.rotation.y = e
                    }
                }), this.tweens.handX = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.x,
                    end: this.handAngle,
                    onProgress: function(e) {
                        t.mesh.rotation.x = e
                    }
                })
            }, t.prototype.handSwipeRight = function() {
                var t = this.segments[this.segments.length - 1];
                this.tweens.handY = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.y,
                    end: -this.handAngle,
                    onProgress: function(e) {
                        t.mesh.rotation.y = e
                    }
                }), this.tweens.handX = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.x,
                    end: this.handAngle,
                    onProgress: function(e) {
                        t.mesh.rotation.x = e
                    }
                })
            }, t.prototype.handReset = function() {
                var t = this.segments[this.segments.length - 1];
                this.tweens.handX = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.x,
                    end: 0,
                    onProgress: function(e) {
                        t.mesh.rotation.x = e
                    }
                }), this.tweens.handY = new u["default"]({
                    points: [.54, .23, .58, .73],
                    duration: .25,
                    start: t.mesh.rotation.y,
                    end: 0,
                    onProgress: function(e) {
                        t.mesh.rotation.y = e
                    }
                })
            }, t.prototype.legsMovingPosition = function() {
                var t = this;
                this.tweens.legsTween = new u["default"]({
                    points: [.35, .58, .73, .39],
                    duration: 5,
                    start: this.legsAttackAngle,
                    end: this.legsMovingAngle,
                    onProgress: function(e) {
                        for (var i = function(i) {
                                var n = t.segments[i];
                                n.mesh.traverse(function(t) {
                                    n.mesh != t && t instanceof o.Mesh && (t.rotation.x = e)
                                })
                            }, n = 1; n < t.segments.length; n++) i(n)
                    }
                })
            }, t.prototype.headRollLeft = function() {
                var t = this;
                this.tweens.headRollTween = new u["default"]({
                    points: [.58, .07, .74, .53],
                    duration: 5,
                    start: t.headRoll,
                    end: -this.headRollValue,
                    onProgress: function(e) {
                        return t.headRoll = e
                    }
                })
            }, t.prototype.headRollRight = function() {
                var t = this;
                this.tweens.headRollTween = new u["default"]({
                    points: [.58, .07, .74, .53],
                    duration: 5,
                    start: t.headRoll,
                    end: this.headRollValue,
                    onProgress: function(e) {
                        return t.headRoll = e
                    }
                })
            }, t.prototype.headRollMiddle = function() {
                var t = this;
                this.tweens.headRollTween = new u["default"]({
                    points: [.48, .18, .58, .81],
                    duration: .5,
                    start: t.headRoll,
                    end: 0,
                    onProgress: function(e) {
                        return t.headRoll = e
                    }
                })
            }, t.prototype.headSnapUp = function() {
                var t = this;
                this.segments[0].mesh;
                this.tweens.headSnapTween = new u["default"]({
                    points: [.85, .08, .49, .8],
                    duration: .4,
                    start: t.headSnap,
                    end: this.headSnapAngle,
                    onProgress: function(e) {
                        return t.headSnap = e
                    }
                })
            }, t.prototype.headReset = function() {
                var t = this;
                this.segments[0].mesh;
                this.tweens.headSnapTween = new u["default"]({
                    points: [.06, .62, .55, .77],
                    duration: 3,
                    start: t.headSnap,
                    end: 0,
                    onProgress: function(e) {
                        return t.headSnap = e
                    }
                })
            }, t
        }();
        i.MoonBeast = d;
        var f = function() {
            function t(t, e, i, n, r) {
                void 0 === r && (r = 1), this.position = new o.Vector3, this.previousPosition = new o.Vector3, this.dt = 1 / 60, this.mesh = t, this.offset = e * r, this.scale = r, this.weight = i, this.height = n, this.physics = new p.PhysicsObjectEuler, this.mesh.traverse(function(t) {
                    t instanceof o.Mesh && (t.geometry.applyMatrix((new o.Matrix4).makeScale(r, r, r)), t.position.multiplyScalar(r))
                })
            }
            return t.prototype.getMesh = function() {
                return this.mesh
            }, t.prototype.handleReset = function(t) {
                this.position.z += t, this.previousPosition.z += t, this.meshCopyPosition(), this.physicsCopyPosition()
            }, t.prototype.setPositionVector = function(t) {
                this.previousPosition.copy(this.position), this.position.copy(t), this.meshCopyPosition(), this.physicsCopyPosition()
            }, t.prototype.setPositionComponent = function(t, e, i) {
                this.previousPosition.copy(this.position), this.position.x = t, this.position.y = e, this.position.z = i, this.meshCopyPosition(), this.physicsCopyPosition()
            }, t.prototype.addPositionVector = function(t) {
                this.previousPosition.copy(this.position), this.position.add(t), this.meshCopyPosition(), this.physicsCopyPosition()
            }, t.prototype.addPositionComponent = function(t, e, i) {
                this.previousPosition.copy(this.position), this.position.x += t, this.position.y += e, this.position.z += i, this.meshCopyPosition(), this.physicsCopyPosition()
            }, t.prototype.updatePhysics = function(t) {
                this.physics.update(t), this.physics.position.y < this.height ? (this.physics.position.y = this.height + .01, this.physics.velocity.y = 0) : this.physics.acceleration.y = -50, this.physics.velocity.x *= 40 * t, this.physics.velocity.z *= 40 * t, this.mesh.position.copy(this.physics.position), this.position.copy(this.physics.position)
            }, t.prototype.setDt = function(t) {
                this.dt = t
            }, t.prototype.meshCopyPosition = function() {
                this.mesh.position.copy(this.position)
            }, t.prototype.physicsCopyPosition = function() {
                var t = 1 / this.dt;
                this.physics.position.copy(this.position), this.physics.velocity.subVectors(this.position, this.previousPosition), this.physics.velocity.x *= .5, this.physics.velocity.multiplyScalar(t)
            }, t
        }();
        i.MoonBeastSegment = f
    }, {
        "../../assets": 1,
        "../../components/event": 3,
        "../../components/physicsobject": 6,
        "../../components/statemachine": 8,
        "../../shaders/glowmaterial": 41,
        "../../shaders/moonbeastMaterials": 45,
        "../../util/tween": 59,
        three: 64
    }],
    20: [function(t, e, i) {
        "use strict";
        ! function(t) {
            t[t.Travel = 0] = "Travel", t[t.Attack = 1] = "Attack", t[t.Strike = 2] = "Strike"
        }(i.ControlPointType || (i.ControlPointType = {}));
        var n = i.ControlPointType,
            r = function() {
                function t(t, e, i, r) {
                    this.radius = 5, this.importance = 1, this.type = n.Travel, this.label = null, this.position = t, void 0 !== e && (this.radius = e), void 0 !== i && (this.importance = i), void 0 !== r && (this.type = r)
                }
                return t.prototype.clone = function() {
                    var e = new t(this.position.clone(), this.radius, this.importance, this.type);
                    return e.label = this.label, e
                }, t
            }();
        i.ControlPoint = r
    }, {}],
    21: [function(t, e, i) {
        "use strict";
        var n = this && this.__extends || function(t, e) {
                function i() {
                    this.constructor = t
                }
                for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
                t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i)
            },
            r = t("three"),
            o = function() {
                function t(t, e) {
                    void 0 === e && (e = new r.Vector3), this.mesh = t, this.mesh.position.copy(e)
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.handleReset = function(t) {
                    this.mesh.position.z += t
                }, t.prototype.addPositionVector = function(t) {
                    this.mesh.position.add(t)
                }, t.prototype.addPositionComponent = function(t, e, i) {
                    this.mesh.position.x += t, this.mesh.position.y += e, this.mesh.position.z += i
                }, t.prototype.setPositionVector = function(t) {
                    this.mesh.position.copy(t)
                }, t.prototype.setPositionComponent = function(t, e, i) {
                    this.mesh.position.x = t, this.mesh.position.y = e, this.mesh.position.z = i
                }, t
            }();
        i.SceneObject = o;
        var a = function(t) {
            function e(e, i, n) {
                void 0 === n && (n = new r.Vector3), t.call(this, e, n), this.hitboxes = new Array;
                for (var o = 0; o < i.length; o++) {
                    var a = i[o],
                        h = (new r.Vector3).fromArray(a.center),
                        u = (new r.Vector3).fromArray(a.size),
                        c = new s(this.mesh, h, u);
                    this.hitboxes.push(c)
                }
            }
            return n(e, t), e.prototype.addPositionVector = function(t) {
                this.mesh.position.add(t), this.flagHitboxesForUpdate()
            }, e.prototype.addPositionComponent = function(t, e, i) {
                this.mesh.position.x += t, this.mesh.position.y += e, this.mesh.position.z += i, this.flagHitboxesForUpdate()
            }, e.prototype.setPositionVector = function(t) {
                this.mesh.position.copy(t), this.flagHitboxesForUpdate()
            }, e.prototype.setPositionComponent = function(t, e, i) {
                this.mesh.position.x = t, this.mesh.position.y = e, this.mesh.position.z = i, this.flagHitboxesForUpdate()
            }, e.prototype.getHitboxes = function() {
                return this.hitboxes
            }, e.prototype.intersects = function(t) {
                for (var e = 0; e < this.hitboxes.length; e++) {
                    var i = this.hitboxes[e];
                    if (i.intersects(t)) return !0
                }
                return !1
            }, e.prototype.flagHitboxesForUpdate = function() {
                for (var t = 0; t < this.hitboxes.length; t++) {
                    var e = this.hitboxes[t];
                    e.flagForUpdate()
                }
            }, e
        }(o);
        i.CollisionObject = a;
        var s = function() {
            function t(t, e, i, n) {
                void 0 === e && (e = new r.Vector3(0, 0, 0)), void 0 === i && (i = new r.Vector3(1, 1, 1)), void 0 === n && (n = 16711680), this.center = new r.Vector3, this.size = new r.Vector3, this._center = new r.Vector3, this.parent = t, this.center = e, this.size = i, this.hitbox = new r.Box3;
                var o = new r.BoxGeometry(i.x, i.y, i.z, 1, 1, 1),
                    a = new r.MeshBasicMaterial({
                        color: n,
                        wireframe: !0
                    });
                this.hitboxVisualizer = new r.Mesh(o, a), this.hitboxVisualizer.position.add(this.center), this.hitboxVisualizer.visible = !1, this.parent.add(this.hitboxVisualizer), window.location.search.match(/debug=1/) && (this.hitboxVisualizer.visible = !0), this.needsUpdate = !0, this.update()
            }
            return t.prototype.flagForUpdate = function() {
                this.needsUpdate = !0
            }, t.prototype.intersects = function(t) {
                return this.update(), this.hitbox.intersectsBox(t)
            }, t.prototype.getBox = function() {
                return this.update(), this.hitbox
            }, t.prototype._show = function() {
                window.location.search.match(/debug=1/) && (this.hitboxVisualizer.visible = !0)
            }, t.prototype._hide = function() {
                window.location.search.match(/debug=1/) && (this.hitboxVisualizer.visible = !1)
            }, t.prototype._getHitboxVisualizer = function() {
                return this.hitboxVisualizer
            }, t.prototype.update = function() {
                this.needsUpdate && (this.hitbox.setFromObject(this.hitboxVisualizer), this.needsUpdate = !1)
            }, t
        }();
        i.Hitbox = s
    }, {
        three: 64
    }],
    22: [function(t, e, i) {
        "use strict";
        var n, r = t("three"),
            o = t("./sceneobject"),
            a = t("../../components/statemachine"),
            s = t("../../util/utilities");
        ! function(t) {
            t[t.Active = 0] = "Active", t[t.Collected = 1] = "Collected"
        }(n || (n = {}));
        var h = function() {
            function t(t, e) {
                void 0 === e && (e = new r.Vector3), this._localRotation = new r.Vector3;
                this.mesh = t, this.mesh.position.copy(e), this.mesh.rotation.y = s.getRandomRange(0, 2 * Math.PI), this.hitbox = new o.Hitbox(this.mesh, new r.Vector3(0, 0, 0), new r.Vector3(4, 4, 4), 16768358), this.stateMachine = new a["default"](n), this.stateMachine.addHook({
                    state: n.Active,
                    enter: this.ENTER_active.bind(this),
                    exit: this.EXIT_active.bind(this)
                }), this.stateMachine.addHook({
                    state: n.Collected,
                    enter: this.ENTER_collected.bind(this)
                }), this.stateMachine.set(n.Active)
            }
            return t.prototype.getHitbox = function() {
                return this.hitbox
            }, t.prototype.getMesh = function() {
                return this.mesh
            }, t.prototype.handleReset = function(t) {
                this.mesh.position.z += t, this.hitbox.flagForUpdate()
            }, t.prototype.update = function(t, e) {
                this.stateMachine.update(), this.rotationTween && this.rotationTween.update(t, e), this.mesh.visible !== !1 && (this.mesh.rotation.y += this.rotationSpeed * t)
            }, t.prototype.addPositionVector = function(t) {
                this.mesh.position.add(t), this.hitbox.flagForUpdate()
            }, t.prototype.addPositionComponent = function(t, e, i) {
                this.mesh.position.x += t, this.mesh.position.y += e, this.mesh.position.z += i, this.hitbox.flagForUpdate()
            }, t.prototype.setPositionVector = function(t) {
                this.mesh.position.copy(t), this.hitbox.flagForUpdate()
            }, t.prototype.setPositionComponent = function(t, e, i) {
                this.mesh.position.x = t, this.mesh.position.y = e, this.mesh.position.z = i, this.hitbox.flagForUpdate()
            }, t.prototype.reset = function() {
                this.stateMachine.set(n.Active)
            }, t.prototype.intersects = function(t) {
                var e = this.hitbox.intersects(t);
                return e && this.stateMachine.is(n.Active) ? (this.stateMachine.set(n.Collected), !0) : !1
            }, t.prototype.ENTER_active = function() {
                this.hitbox.flagForUpdate(), this.rotationSpeed = t.rotationSpeedActive, this.mesh.visible = !0
            }, t.prototype.EXIT_active = function() {}, t.prototype.ENTER_collected = function() {
                this.mesh.visible = !1
            }, t.rotationSpeedCollected = 100, t.rotationSpeedActive = 5, t
        }();
        i.Token = h
    }, {
        "../../components/statemachine": 8,
        "../../util/utilities": 60,
        "./sceneobject": 21,
        three: 64
    }],
    23: [function(t, e, i) {
        "use strict";
        var n = t("../util/utilities"),
            r = t("../components/event"),
            o = t("./levelgenerator"),
            a = Math.floor.bind(Math),
            s = Math.round.bind(Math),
            h = function() {
                function t() {
                    this.moonbeastHealth = t.MAX_MB_HP, this.kuboHealth = t.MAX_HEALTH, this.kuboArmor = .75 * t.MAX_ARMOR, this.score = 0, this.stageNumber = 0, this.elapsedMS = 0, this.stateChanged = new r.Event, this.gameLog = [], this.endScreenshot = null
                }
                return t.prototype.update = function(t) {
                    this.elapsedMS += t
                }, t.prototype.nextStage = function() {
                    this.stageNumber += 1
                }, t.prototype.hitMoonbeast = function(e) {
                    var i = Math.max(0, t.MAX_HIT_DAMAGE * (e + .2));
                    this.stageNumber < 3 && (i /= 3), this.score += i * i, this.moonbeastHealth -= i, this.stateChanged.trigger(this), this.gameLog.push({
                        e: "hit",
                        t: a(this.elapsedMS),
                        s: this.stageNumber,
                        d: a(i),
                        kh: a(this.kuboHealth),
                        ka: a(this.kuboArmor),
                        mb: a(this.moonbeastHealth),
                        pt: s(this.score)
                    })
                }, t.prototype.takeDamage = function(t) {
                    this.kuboArmor >= t ? this.kuboArmor -= t : (this.kuboHealth -= t - this.kuboArmor, this.kuboArmor = 0), this.kuboHealth = Math.max(0, this.kuboHealth), this.kuboArmor = Math.max(0, this.kuboArmor)
                }, t.prototype.missed = function(e) {
                    var i;
                    i = 0 >= e ? 1.1 * t.MAX_HIT_DAMAGE : t.MAX_HIT_DAMAGE * (e + .2), i = Math.max(0, i), this.stageNumber < 3 && (i /= 3), this.takeDamage(i), this.stateChanged.trigger(this), this.gameLog.push({
                        e: "miss",
                        t: a(this.elapsedMS),
                        s: this.stageNumber,
                        d: a(i),
                        kh: a(this.kuboHealth),
                        ka: a(this.kuboArmor),
                        mb: a(this.moonbeastHealth),
                        pt: s(this.score)
                    })
                }, t.prototype.collided = function() {
                    var t = 20;
                    this.takeDamage(t), this.stateChanged.trigger(this), this.gameLog.push({
                        e: "obst",
                        t: a(this.elapsedMS),
                        s: this.stageNumber,
                        d: a(t),
                        kh: a(this.kuboHealth),
                        ka: a(this.kuboArmor),
                        mb: a(this.moonbeastHealth),
                        pt: s(this.score)
                    })
                }, t.prototype.collectedToken = function(e) {
                    this.score += 10, e == o.TokenType.Armor && (this.kuboArmor = n.clamp(this.kuboArmor + t.ONE_ARMOR, 0, t.MAX_ARMOR)), this.stateChanged.trigger(this), this.gameLog.push({
                        e: "tok",
                        t: a(this.elapsedMS),
                        s: this.stageNumber,
                        kh: a(this.kuboHealth),
                        ka: a(this.kuboArmor),
                        mb: a(this.moonbeastHealth),
                        pt: s(this.score)
                    })
                }, t.prototype.tokenTutorial = function() {
                    this.kuboArmor = t.MAX_ARMOR, this.stateChanged.trigger(this)
                }, t.prototype.currentAttackSlowdown = function() {
                    return n.clamp((this.stageNumber - 4) / 100 + .3, .3, 1)
                }, t.prototype.calculateFinalScore = function() {
                    var t = this.kuboHealth > 0 && this.moonbeastHealth <= 0,
                        e = (t ? 1e3 : 0) + this.kuboArmor + this.kuboHealth;
                    this.score = Math.max(0, this.score);
                    for (var i = 0, n = 0, r = this.gameLog.length; r > n; n++) {
                        var o = this.gameLog[n];
                        if (i = o.pt, o.kh <= 0 || o.mb <= 0) break
                    }
                    return this.gameLog.unshift({
                        e: "end",
                        v: Math.round(this.score) == Math.round(i) ? 1 : 0,
                        t: a(this.elapsedMS),
                        s: this.stageNumber,
                        kh: a(this.kuboHealth),
                        ka: a(this.kuboArmor),
                        mb: a(this.moonbeastHealth),
                        pt: Math.round(i),
                        pt2: 1e5 - Math.round(this.score),
                        bonus: s(e),
                        totalScore: s(i + e),
                        didWin: t
                    }), {
                        didWin: t,
                        score: i,
                        bonus: e,
                        "final": i + e,
                        duration: s(this.elapsedMS)
                    }
                }, t.prototype.getHealthRatio = function() {
                    return this.kuboHealth / t.MAX_HEALTH
                }, t.prototype.getTotalHealthRatio = function() {
                    return (this.kuboArmor + this.kuboHealth) / (t.MAX_ARMOR + t.MAX_HEALTH)
                }, t.prototype.getMBRatio = function() {
                    return this.moonbeastHealth / t.MAX_MB_HP
                }, t.prototype.watermarkScreenshot = function(t) {
                    var e = this;
                    this.endScreenshot ? this._doWatermarkScreenshot(t) : setTimeout(function() {
                        e.watermarkScreenshot(t)
                    }, 50)
                }, t.prototype._doWatermarkScreenshot = function(t) {
                    var e = this,
                        i = document.createElement("canvas"),
                        n = new Image;
                    n.onload = function() {
                        i.width = Math.max(window.innerWidth / 2, 320), i.height = Math.max(window.innerHeight / 2, 240);
                        var r = i.getContext("2d");
                        r.drawImage(n, 0, 0, i.width, i.height), r.fillStyle = "#eeeef0", r.textAlign = "center";
                        var o = i.height / 3;
                        r.font = o.toFixed(0) + "px sans-serif", r.fillText(t["final"] + " pts " + (t.duration / 1e3).toFixed(1) + " s " + (t.didWin ? "win" : "lose"), i.width / 2, 1.5 * o, i.width), e.endScreenshot = i.toDataURL()
                    }, n.src = this.endScreenshot
                }, t.MAX_HIT_DAMAGE = 50, t.MAX_ARMOR = 100, t.ONE_ARMOR = 3, t.MAX_HEALTH = 60, t.MAX_MB_HP = 160, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = h
    }, {
        "../components/event": 3,
        "../util/utilities": 60,
        "./levelgenerator": 26
    }],
    24: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = t("./entities/sceneobject"),
            o = t("./../util/utilities"),
            a = t("../shaders/particlematerial"),
            s = t("../shaders/groundmaterial"),
            h = t("../shaders/mistmaterial"),
            u = function() {
                function t(e, i) {
                    this.object = new n.Object3D, this.groundSegmentCount = 2, this.lastGroundPosition = new n.Vector3, this.playerPosition = new n.Vector3, this.segmentWidth = 40, this.segmentLength = 100, this.minSegmentSize = 50, this.particleCount = 2e3, this.resetDistance = 10, this.textureWrapScale = .2, this._position = new n.Vector3, this.groundSegments = new Array, t.GroundGeometry = new n.PlaneBufferGeometry(this.segmentWidth, this.segmentLength, Math.floor(this.segmentWidth / this.minSegmentSize), Math.floor(this.segmentLength / this.minSegmentSize)), t.ParticleGeometry = new n.Geometry;
                    for (var u = this.segmentWidth / 2, c = this.segmentLength / 2, l = 0; l < this.particleCount; l++) {
                        var p = new n.Vector3;
                        p.x = o.getRandomRange(-u, u), p.y = o.getRandomRange(-c, c), p.z = o.getRandomRange(0, 30), t.ParticleGeometry.vertices.push(p)
                    }
                    var d = 4e-4,
                        f = 65e-6,
                        m = new n.Vector2(this.segmentWidth * this.textureWrapScale, this.segmentLength * this.textureWrapScale);
                    this.groundMaterial = s["default"](e, d, f, m, i), this.particleMaterial = a["default"](d, f), this.mistcardMaterial = h["default"](e, d, f);
                    var g = new n.PlaneGeometry(8, 3),
                        v = new n.Mesh(g, this.mistcardMaterial);
                    v.rotation.x = -Math.PI / 2;
                    for (var l = 0; l < this.groundSegmentCount; l++) {
                        var y = new n.Mesh(t.GroundGeometry, this.groundMaterial);
                        y.rotation.x = -Math.PI / 2, y.receiveShadow = !0, y.castShadow = !1;
                        var _ = new n.Points(t.ParticleGeometry, this.particleMaterial);
                        if (!i) {
                            y.add(_);
                            for (var b, x = 0; 10 > x; x++) b = v.clone(), b.position.set(14 * Math.random() - 7, o.getRandomRange(-c, c), 1), b.scale.z = .5 * Math.random() + .75, y.add(b)
                        }
                        var w = new r.SceneObject(y);
                        w.setPositionComponent(0, 0, l * this.segmentLength), this.lastGroundPosition.copy(w.getMesh().position), this.groundSegments.push(w), this.object.add(w.getMesh())
                    }
                }
                return t.prototype.getMesh = function() {
                    return this.object
                }, t.prototype.setPlayerPosition = function(t) {
                    this.playerPosition.copy(t)
                }, t.prototype.update = function(t, e) {
                    for (var i = this.playerPosition.z + this.resetDistance - this.segmentLength, n = 0; n < this.groundSegments.length; n++) {
                        var r = this.groundSegments[n];
                        i > r.getMesh().position.z && (this.lastGroundPosition.z += this.segmentLength, r.setPositionVector(this.lastGroundPosition))
                    }
                }, t.prototype.handleReset = function(t) {
                    this.lastGroundPosition.z += t;
                    for (var e = 0; e < this.groundSegments.length; e++) {
                        var i = this.groundSegments[e];
                        i.handleReset(t)
                    }
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = u
    }, {
        "../shaders/groundmaterial": 42,
        "../shaders/mistmaterial": 44,
        "../shaders/particlematerial": 46,
        "./../util/utilities": 60,
        "./entities/sceneobject": 21,
        three: 64
    }],
    25: [function(t, e, i) {
        "use strict";
        var n = t("./../util/console");
        ! function(t) {
            t[t.Left = 37] = "Left", t[t.Right = 39] = "Right", t[t.Up = 38] = "Up"
        }(i.InputEvent || (i.InputEvent = {}));
        var r, o = i.InputEvent;
        ! function(t) {
            t[t.Collect = 0] = "Collect", t[t.Attack = 1] = "Attack"
        }(r || (r = {}));
        var a = function() {
            function t(t) {
                this.active = {}, this.inputStyle = r.Collect, this.disabled = !0, this.swallow = !0, this.domElement = t
            }
            return t.prototype.isActive = function(t) {
                return this.active[t]
            }, t.prototype.clear = function(t) {
                this.active[t] = !1
            }, t.prototype.clearAll = function() {
                _.mapValues(this.active, function() {
                    return !1
                })
            }, t.prototype.attackStyle = function() {
                n._console.log("switching controls to attack style"), this.inputStyle = r.Attack
            }, t.prototype.isAttack = function() {
                return this.inputStyle == r.Attack
            }, t.prototype.collectStyle = function() {
                n._console.log("switching controls to collect style"), this.inputStyle = r.Collect
            }, t.prototype.bind = function() {
                this.bindKeys(), this.bindTouch(), this.bindMouse()
            }, t.prototype.bindKeys = function() {
                var t = this;
                window.addEventListener("keydown", function(e) {
                    return n._console.log(e.keyCode), e.altKey || e.metaKey || e.ctrlKey ? !0 : (t.swallow && e.preventDefault(), void(t.disabled || (t.active[e.keyCode] = !0)))
                }), window.addEventListener("keyup", function(e) {
                    t.active[e.keyCode] = !1
                })
            }, t.prototype.bindTouch = function() {
                this.domElement;
                window.addEventListener("touchstart", this.onTouchStart.bind(this)), window.addEventListener("touchend", this.onTouchEnd.bind(this))
            }, t.prototype.wrapEvent = function(t) {
                if (t instanceof MouseEvent) return t;
                if (t.touches.length) return t.clientX = t.touches[0].clientX, t.clientY = t.touches[0].clientY, t
            }, t.prototype.bindMouse = function() {
                this.domElement.addEventListener("mousedown", this.onPointerStart.bind(this)), this.domElement.addEventListener("mouseup", this.onPointerEnd.bind(this))
            }, t.prototype.onTouchStart = function(t) {
                return this.onPointerStart(this.wrapEvent(t))
            }, t.prototype.onTouchEnd = function(t) {
                return this.onPointerEnd(this.wrapEvent(t))
            }, t.prototype.onPointerStart = function(t) {
                if (this.swallow, !this.disabled) {
                    var e = t.clientX / this.domElement.clientWidth,
                        i = 1 - t.clientY / this.domElement.clientHeight;
                    if (this.inputStyle == r.Attack) return void(.33 >= e ? this.active[o.Left] = !0 : .67 > e ? this.active[o.Up] = !0 : this.active[o.Right] = !0);
                    var n = i > Math.pow(1.5 * e - .75, 2) + .45;
                    n ? this.active[o.Up] = !0 : .5 >= e ? this.active[o.Left] = !0 : this.active[o.Right] = !0
                }
            }, t.prototype.onPointerEnd = function(t) {
                this.active[o.Left] = this.active[o.Right] = this.active[o.Up] = !1
            }, t
        }();
        i.InputManager = a
    }, {
        "./../util/console": 53
    }],
    26: [function(t, e, i) {
        "use strict";
        var n = t("./../util/console");
        ! function(t) {
            t[t.Steer = 0] = "Steer", t[t.Jump = 1] = "Jump", t[t.Token = 2] = "Token", t[t.Attack = 3] = "Attack", t[t.Attack2 = 4] = "Attack2"
        }(i.TutorialStage || (i.TutorialStage = {}));
        i.TutorialStage;
        ! function(t) {
            t[t.Armor = 0] = "Armor", t[t.PowerUp = 1] = "PowerUp"
        }(i.TokenType || (i.TokenType = {}));
        i.TokenType;
        ! function(t) {
            t[t.BeginAttack = 0] = "BeginAttack", t[t.Hit = 1] = "Hit", t[t.Miss = 2] = "Miss", t[t.TooSlow = 3] = "TooSlow", t[t.Collide = 4] = "Collide", t[t.AttackTimerUpdate = 5] = "AttackTimerUpdate"
        }(i.GameEventType || (i.GameEventType = {}));
        var r;
        i.GameEventType;
        ! function(t) {
            function e(t) {
                return "tutorial" == t.tag
            }

            function i(t) {
                return "resize" == t.tag
            }

            function n(t) {
                return "enter" == t.tag
            }

            function r(t) {
                return "exit" == t.tag
            }

            function o(t) {
                return "token" == t.tag
            }

            function a(t) {
                return "points" == t.tag
            }

            function s(t) {
                return "game" == t.tag
            }
            t.isTutorial = e, t.isResize = i, t.isEnter = n, t.isExit = r, t.isToken = o, t.isPoints = a, t.isGame = s
        }(r = i.ProgressEvent || (i.ProgressEvent = {})),
        function(t) {
            t[t.Tutorial = 0] = "Tutorial", t[t.Attack = 1] = "Attack", t[t.Collection = 2] = "Collection"
        }(i.SegmentType || (i.SegmentType = {}));
        var o = i.SegmentType,
            a = function() {
                function t(t) {
                    this.segmentBuilders = t, this.currentSegment = null, this.nextSegment = null, this.assets = null, this.segmentNumber = 0, this.sameConsecutiveSegments = 0
                }
                return t.prototype.init = function(t, e) {
                    this.assets = e, this.currentSegment = this.segmentBuilders[o[o.Tutorial]](e), this.spawnNext(), this.scene = t, this.scene.add(this.currentSegment.getMesh()), this.scene.add(this.nextSegment.getMesh())
                }, t.prototype.createNext = function(t) {
                    this.segmentNumber++;
                    var e = o.Collection;
                    return this.segmentNumber < 5 ? e = this.segmentNumber % 2 ? o.Attack : o.Collection : (e = Math.random() > .33 ? o.Collection : o.Attack, t && (e = this.currentSegment.type == o.Collection ? o.Attack : o.Collection)), this.segmentBuilders[o[e]](this.assets)
                }, t.prototype.spawnNext = function() {
                    this.nextSegment = this.createNext(this.sameConsecutiveSegments > 2), this.nextSegment.offsetPosition(this.currentSegment.getMesh().position.z), this.nextSegment.offsetPosition(this.currentSegment.getLength()), n._console.log("segments now", this.currentSegment, this.nextSegment), this.currentSegment.type == this.nextSegment.type ? this.sameConsecutiveSegments += 1 : this.sameConsecutiveSegments = 1
                }, t.prototype.flip = function() {
                    this.currentSegment.destroy(), this.currentSegment = this.nextSegment, this.nextSegment = null, this.spawnNext(), this.scene.add(this.nextSegment.getMesh())
                }, t.prototype.handleReset = function(t) {
                    this.currentSegment.handleReset(t), this.nextSegment.handleReset(t)
                }, t.prototype.enterCurrent = function() {
                    var t = this;
                    this.currentSegment.progressEvent.register(function(e) {
                            n._console.log("resize, relayout"), t.nextSegment.getMesh().position.z = t.currentSegment.getMesh().position.z + t.currentSegment.getLength()
                        }, function(t) {
                            return r.isResize(t)
                        }),
                        this.currentSegment.progressEvent.trigger({
                            tag: "enter"
                        })
                }, t.prototype.getCurrent = function() {
                    return this.currentSegment
                }, t.prototype.getNext = function() {
                    return this.nextSegment
                }, t
            }();
        i.LevelGenerator = a
    }, {
        "./../util/console": 53
    }],
    27: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = t("./entities/sceneobject"),
            o = t("./../util/utilities"),
            a = t("../assets"),
            s = t("../shaders/villagematerial"),
            h = t("../shaders/scenerymaterial"),
            u = function() {
                function t(t, e) {
                    var i = this;
                    this.buildingCloneCount = 10, this.availablePositions = new Array, this.usedPositions = new Array, this.rotations = [0, Math.PI / 2, Math.PI, 3 * Math.PI / 2], this._center = new n.Vector3, this._size = new n.Vector3, this.sceneryCloneCount = 10, this.lastSceneryPosition = new n.Vector3, this.sceneryBiasNear = 18, this.sceneryBiasFar = 20, this.clutterCloneCount = 2, this.lastClutterPosition = new n.Vector3, this.resetDistance = 10, this.hiddenChance = .05, this.boundary = 3.5, this.gridSize = 6.5, this.firstRow = 3.5 + this.boundary, this.secondRow = this.firstRow + this.gridSize, this.playerPosition = new n.Vector3, this.playerResetDistance = 0, e && (this.buildingCloneCount = 4, this.sceneryCloneCount = 3, this.clutterCloneCount = 1, this.hiddenChance = 0), this.object = new n.Object3D, this.buildings = new Array, this.scenery = new Array, this.sceneryMaterial = h["default"](t, 4e-4, 65e-6), this.clutter = new Array, _.forOwn(a.buildingData, function(e, n) {
                        var o = t.objs[n],
                            a = o.children[0];
                        if (a)
                            for (var h = 0; h < i.buildingCloneCount; h++) {
                                var u = a.clone();
                                u.material = s.villageMaterial, u.castShadow = !0;
                                var c = new r.SceneObject(u);
                                i.buildings.push(c), i.object.add(c.getMesh())
                            }
                    }), _.forOwn(a.sceneryData, function(e, n) {
                        var o = t.objs[n],
                            a = o.children[0];
                        if (a)
                            for (var h = 0; h < i.sceneryCloneCount; h++) {
                                var u = a.clone();
                                u.material = s.villageMaterial, u.castShadow = !0;
                                var c = new r.SceneObject(u);
                                i.scenery.push(c), i.object.add(c.getMesh())
                            }
                    }), _.forOwn(a.clutterData, function(e, n) {
                        var o = t.objs[n],
                            a = o.children[0];
                        if (a)
                            for (var h = 0; h < i.clutterCloneCount; h++) {
                                var u = a.clone();
                                u.material = s.villageMaterial;
                                var c = new r.SceneObject(u);
                                i.clutter.push(c), i.object.add(c.getMesh())
                            }
                    }), this.setInititalClutterState(), this.setInititalBuildingState(), this.setInitialSceneryState()
                }
                return t.prototype.update = function(t, e) {
                    this.playerResetDistance = this.playerPosition.z - this.resetDistance, this.updateBuilding(), this.updateScenery(), this.updateClutter()
                }, t.prototype.getMesh = function() {
                    return this.object
                }, t.prototype.handleReset = function(t) {
                    this.lastSceneryPosition.z += t, this.lastClutterPosition.z += t;
                    for (var e = 0; e < this.buildings.length; e++) {
                        var i = this.buildings[e];
                        i.addPositionComponent(0, 0, t)
                    }
                    for (var e = 0; e < this.scenery.length; e++) {
                        var n = this.scenery[e];
                        n.addPositionComponent(0, 0, t)
                    }
                    for (var e = 0; e < this.clutter.length; e++) {
                        var r = this.clutter[e];
                        r.addPositionComponent(0, 0, t)
                    }
                    for (var e = 0; e < this.availablePositions.length; e++) {
                        var o = this.availablePositions[e];
                        o.z += t
                    }
                    for (var e = 0; e < this.usedPositions.length; e++) {
                        var o = this.usedPositions[e];
                        o.z += t
                    }
                }, t.prototype.setPlayerPosition = function(t) {
                    this.playerPosition.copy(t)
                }, t.prototype.setInititalBuildingState = function() {
                    o.shuffleArray(this.buildings), this.usedPositions = new Array, this.availablePositions = new Array, this.availablePositions.push(new n.Vector3(-this.secondRow, 0, this.playerPosition.z)), this.availablePositions.push(new n.Vector3(-this.secondRow, 0, this.playerPosition.z + this.gridSize)), this.availablePositions.push(new n.Vector3(-this.firstRow, 0, this.playerPosition.z)), this.availablePositions.push(new n.Vector3(-this.firstRow, 0, this.playerPosition.z + this.gridSize)), this.availablePositions.push(new n.Vector3(this.secondRow, 0, this.playerPosition.z)), this.availablePositions.push(new n.Vector3(this.secondRow, 0, this.playerPosition.z + this.gridSize)), this.availablePositions.push(new n.Vector3(this.firstRow, 0, this.playerPosition.z)), this.availablePositions.push(new n.Vector3(this.firstRow, 0, this.playerPosition.z + this.gridSize));
                    for (var t = 0; t < this.buildings.length; t++) {
                        var e = this.buildings[t];
                        this.setBuildingPosition(e)
                    }
                }, t.prototype.updateBuilding = function() {
                    for (var t = 0; t < this.buildings.length; t++) {
                        var e = this.buildings[t];
                        if (this.playerResetDistance > e.getMesh().position.z) {
                            this.setBuildingPosition(e);
                            break
                        }
                    }
                }, t.prototype.setBuildingPosition = function(t) {
                    t.getMesh().visible = !0, this.availablePositions.length < 1 && this.resetUsedPositions();
                    var e = Math.floor(o.getRandomRange(0, this.availablePositions.length - 1)),
                        i = Math.floor(o.getRandomRange(0, this.rotations.length - 1)),
                        n = this.availablePositions.splice(e, 1)[0],
                        r = this.rotations[i],
                        a = o.getRandomRange(-.15, .15),
                        s = o.getRandomRange(-.25, .25);
                    Math.random() < this.hiddenChance && Math.abs(n.x) < this.secondRow && (t.getMesh().visible = !1), t.setPositionVector(n), t.addPositionComponent(a, 0, s), t.getMesh().rotation.y = r, n.z += 2 * this.gridSize, this.usedPositions.push(n)
                }, t.prototype.setInitialSceneryState = function() {
                    o.shuffleArray(this.scenery);
                    var t = this.getSceneryPositionX(),
                        e = this.playerPosition.z;
                    this.lastSceneryPosition = new n.Vector3(t, 0, e);
                    for (var i = 0; i < this.scenery.length; i++) {
                        var r = this.scenery[i];
                        this.setSceneryPosition(r)
                    }
                }, t.prototype.updateScenery = function() {
                    for (var t = 0; t < this.scenery.length; t++) {
                        var e = this.scenery[t];
                        if (this.playerResetDistance > e.getMesh().position.z) {
                            this.setSceneryPosition(e);
                            break
                        }
                    }
                }, t.prototype.setSceneryPosition = function(t) {
                    var e = this.getSceneryPositionX(),
                        i = this.lastSceneryPosition.z + this.getSceneryPositionZ(),
                        n = o.getRandomRange(0, 2 * Math.PI);
                    t.getMesh().rotation.y = n, t.setPositionComponent(e, 0, i), this.lastSceneryPosition.set(e, 0, i)
                }, t.prototype.getSceneryPositionX = function() {
                    return o.getRandomDoubleRange(-this.boundary - 2, -this.boundary - 1, this.boundary + 1, this.boundary + 2)
                }, t.prototype.getSceneryPositionZ = function() {
                    return o.getRandomRange(this.sceneryBiasNear, this.sceneryBiasFar)
                }, t.prototype.setInititalClutterState = function() {
                    o.shuffleArray(this.clutter);
                    for (var t = 0; t < this.clutter.length; t++) {
                        var e = this.clutter[t];
                        this.setClutterPosition(e)
                    }
                }, t.prototype.setClutterPosition = function(t) {
                    var e = this.getClutterPositionX(),
                        i = this.lastClutterPosition.z + this.getClutterPositionZ(),
                        n = o.getRandomRange(0, 2 * Math.PI);
                    t.getMesh().rotation.y = n, t.setPositionComponent(e, -.07, i), this.lastClutterPosition.set(e, -.07, i)
                }, t.prototype.getClutterPositionX = function() {
                    return o.getRandomRange(-this.boundary, this.boundary)
                }, t.prototype.getClutterPositionZ = function() {
                    return o.getRandomRange(15, 20)
                }, t.prototype.updateClutter = function() {
                    for (var t = 0; t < this.clutter.length; t++) {
                        var e = this.clutter[t];
                        if (this.playerResetDistance > e.getMesh().position.z) {
                            this.setClutterPosition(e);
                            break
                        }
                    }
                }, t.prototype.resetUsedPositions = function() {
                    for (var t = 0; t < this.usedPositions.length; t++) {
                        var e = this.usedPositions[t];
                        this.availablePositions.push(e)
                    }
                    this.usedPositions = new Array
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = u
    }, {
        "../assets": 1,
        "../shaders/scenerymaterial": 48,
        "../shaders/villagematerial": 52,
        "./../util/utilities": 60,
        "./entities/sceneobject": 21,
        three: 64
    }],
    28: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            return new o.Vector3(t, e, i)
        }
        var r, o = t("three"),
            a = t("lodash"),
            s = t("../levelgenerator"),
            h = t("../../components/event"),
            u = t("../../components/statemachine"),
            c = t("../entities/moonbeast/controlpoint"),
            l = t("../input"),
            p = t("../../components/spriteanimation"),
            d = t("../../util/utilities"),
            f = !1,
            m = !1,
            g = 10;
        ! function(t) {
            t[t.BeginCircle = 1] = "BeginCircle", t[t.BeginAttack = 2] = "BeginAttack", t[t.EndAttack = 3] = "EndAttack"
        }(r || (r = {}));
        var v;
        ! function(t) {
            t[t.Positioning = 0] = "Positioning", t[t.Approach = 1] = "Approach", t[t.Commit = 2] = "Commit", t[t.Attack = 3] = "Attack", t[t.Complete = 4] = "Complete"
        }(v || (v = {}));
        var y = [new c.ControlPoint(n(-.5, 2, 1.5)), new c.ControlPoint(n(.2, 1.5, 1.5)), new c.ControlPoint(n(-.1, .8, 1.2)), new c.ControlPoint(n(0, .5, .9)), new c.ControlPoint(n(0, .2, .7)), new c.ControlPoint(n(0, .4, .5)), new c.ControlPoint(n(0, 2, 1))];
        y[1].label = r.BeginCircle, y[4].label = r.BeginAttack, y[5].label = r.EndAttack;
        var _, b = new o.PlaneGeometry(1, 1),
            x = function() {
                function t(t) {
                    var e = this;
                    this.type = s.SegmentType.Attack, this.progressEvent = new h.Event, this.progress = 0, this.playerPosition = new o.Vector3, this.mesh = new o.Object3D, this.position = this.mesh.position, this.length = 150, this.localMoonBeastPos = new o.Vector3, this.lastControlIndex = 0, this.localAttackPoints = y.map(function(t) {
                        return t.clone()
                    }), this.attackChosen = null, this.attackZone = null, this.misdirectionZone = null, this.attackStartDistance = 30, this.attackCommitDistance = 20, this.attackEndDistance = 0, this._updateTimerEvent = {
                        tag: "game",
                        type: s.GameEventType.AttackTimerUpdate,
                        value: 1
                    }, this.state = new u["default"](v), this.attackTurnCompleted = !1, this.misdirectionCompleted = !1;
                    var i = new o.Vector3(10, g, this.getLength()),
                        r = new o.Object3D;
                    this.mesh.add(r), this.localControlPoints = y.map(function(t, n) {
                        var a = new o.Object3D;
                        return a.position.copy(t.position).multiply(i), e.localAttackPoints[n].position.copy(a.position), r.add(a), a
                    }), this.attackTurnLeft = new c.ControlPoint(n(2, .35, .5).multiply(i), 5, 2), this.attackTurnUp = new c.ControlPoint(n(0, 2, .5).multiply(i), 5, 2), this.attackTurnRight = new c.ControlPoint(n(-2, .35, .5).multiply(i), 5, 2), this.misdirectionLeft = new c.ControlPoint(n(2, .2, .5).multiply(i), 5, 2), this.misdirectionRight = new c.ControlPoint(n(-2, .2, .5).multiply(i), 5, 2), this.misdirectionZone = a.shuffle([l.InputEvent.Left, l.InputEvent.Up, l.InputEvent.Right])[0], this.attackZone = a.shuffle([l.InputEvent.Left, l.InputEvent.Up, l.InputEvent.Right])[0], this.state.to(v.Positioning), this.state.addHook({
                        state: v.Attack,
                        enter: this.enterAttack.bind(this),
                        exit: this.exitAttack.bind(this)
                    }), _ || (_ = new p["default"]({
                        fps: 30,
                        frames: 8,
                        cols: 4,
                        rows: 2
                    }, t.textures.fx_blood_L), _.card = new o.Mesh(b, _.getMaterial()), _.card.rotation.y = Math.PI), this.mesh.add(_.card), _.card.visible = !1, _.card.scale.set(2, 2, 1), this.attackTurnTimer = .6 + .2 * Math.random() - .1
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.getLength = function() {
                    return this.length
                }, t.prototype.destroy = function() {
                    this.mesh.parent && this.mesh.parent.remove(this.mesh)
                }, t.prototype.offsetPosition = function(t) {
                    this.position.z += t
                }, t.prototype.getAttackStartDistance = function() {
                    return this.attackStartDistance
                }, t.prototype.getAttackCommitDistance = function() {
                    return this.attackCommitDistance
                }, t.prototype.getAttackEndDistance = function() {
                    return this.attackEndDistance
                }, t.prototype.getAttackLength = function() {
                    return this.getAttackCommitDistance() - this.getAttackEndDistance()
                }, t.prototype.getAttackElapsed = function() {
                    return (this.moonbeast.position.z - this.playerPosition.z - this.getAttackEndDistance()) / this.getAttackLength()
                }, t.prototype.update = function(t, e) {
                    this.state.update(), _.update(t);
                    var i = !1;
                    switch (this.state.get()) {
                        case v.Approach:
                            this.moonbeast.position.z - this.playerPosition.z < this.getAttackStartDistance() && this.state.to(v.Commit);
                            break;
                        case v.Commit:
                            this.moonbeast.position.z - this.playerPosition.z < this.getAttackCommitDistance() && (this.state.to(v.Attack), this.moonbeast.setStateCommit());
                            break;
                        case v.Attack:
                            this.moonbeast.position.z - this.playerPosition.z < this.getAttackEndDistance() && (this.state.to(v.Complete), this.moonbeast.jawBite()), i = !0
                    }
                    i && (this._updateTimerEvent.value = this.getAttackElapsed(), this.progressEvent.trigger(this._updateTimerEvent), !this.misdirectionCompleted && this.getAttackElapsed() < .95 && (this.setMisdirectionControlPoint(), this.misdirectionCompleted = !0), !this.attackTurnCompleted && this.getAttackElapsed() < this.attackTurnTimer && (this.setAttackTurnControlPoint(), this.attackTurnCompleted = !0), this.getAttackElapsed() < .5 && (f || (this.progressEvent.trigger({
                        tag: "tutorial",
                        stage: s.TutorialStage.Attack2
                    }), f = !0)))
                }, t.prototype.setMoonbeastHand = function() {
                    switch (this.attackZone) {
                        case l.InputEvent.Left:
                            this.moonbeast.handSwipeLeft();
                            break;
                        case l.InputEvent.Up:
                            this.moonbeast.handSwipeDown();
                            break;
                        case l.InputEvent.Right:
                            this.moonbeast.handSwipeRight()
                    }
                }, t.prototype.setMisdirectionControlPoint = function() {
                    switch (this.misdirectionZone) {
                        case l.InputEvent.Left:
                            this.moonbeast.setControlPoint(this.misdirectionLeft, this.mesh);
                            break;
                        case l.InputEvent.Up:
                            break;
                        case l.InputEvent.Right:
                            this.moonbeast.setControlPoint(this.misdirectionRight, this.mesh)
                    }
                }, t.prototype.setAttackTurnControlPoint = function() {
                    switch (this.attackZone) {
                        case l.InputEvent.Left:
                            this.moonbeast.setControlPoint(this.attackTurnLeft, this.mesh);
                            break;
                        case l.InputEvent.Up:
                            this.moonbeast.setControlPoint(this.attackTurnUp, this.mesh);
                            break;
                        case l.InputEvent.Right:
                            this.moonbeast.setControlPoint(this.attackTurnRight, this.mesh)
                    }
                }, t.prototype.handleReset = function(t) {
                    this.mesh.position.z += t
                }, t.prototype.setMoonBeast = function(t) {
                    var e = this;
                    this.moonbeast = t, this.moonbeast.setControlPoint(this.localAttackPoints[0], this.mesh), this.state.addHook({
                        state: v.Approach,
                        enter: function() {
                            return e.moonbeast.setStateAttacking()
                        }
                    }), this.state.addHook({
                        state: v.Complete,
                        enter: function() {
                            return e.moonbeast.setStateMoving()
                        }
                    })
                }, t.prototype.setKubo = function(t) {
                    this.kubo = t
                }, t.prototype.setPlayerPosition = function(t) {
                    this.playerPosition.copy(t);
                    var e = t.z - this.position.z;
                    return this.progress = e / this.length, this.progress > .25 && !m && (m = !0, this.progressEvent.trigger({
                        tag: "tutorial",
                        stage: s.TutorialStage.Attack
                    })), this.progress > 1 ? (f = !0, void this.progressEvent.trigger({
                        tag: "exit"
                    })) : void 0
                }, t.prototype.onControlPoint = function(t) {
                    if (this.lastControlIndex += 1, this.localAttackPoints[this.lastControlIndex] && (this.moonbeast.setControlPoint(this.localAttackPoints[this.lastControlIndex], this.mesh), this.misdirectionCompleted = !0), t.label == r.BeginCircle) {
                        var e = this.length;
                        this.length = this.progress * this.length, this.length += 100, this.progressEvent.trigger({
                            tag: "resize",
                            from: e,
                            to: this.length
                        }), this.state.to(v.Approach)
                    }
                }, t.prototype.enterAttack = function() {
                    this.progressEvent.trigger({
                        tag: "game",
                        type: s.GameEventType.BeginAttack
                    });
                    var t = new o.Vector3(10, g, this.getLength());
                    switch (this.moonbeast.jawBite(), this.attackZone) {
                        case l.InputEvent.Left:
                            this.moonbeast.setControlPoint(new c.ControlPoint(n(.5, .35, .4).multiply(t), 5, 2), this.mesh);
                            break;
                        case l.InputEvent.Up:
                            this.moonbeast.setControlPoint(new c.ControlPoint(n(0, .8, .4).multiply(t), 5, 2), this.mesh);
                            break;
                        case l.InputEvent.Right:
                            this.moonbeast.setControlPoint(new c.ControlPoint(n(-.5, .35, .4).multiply(t), 5, 2), this.mesh)
                    }
                }, t.prototype.exitAttack = function() {
                    null === this.attackChosen && this.progressEvent.trigger({
                        tag: "game",
                        type: s.GameEventType.TooSlow
                    })
                }, t.prototype.onChooseAttack = function(t) {
                    this.attackChosen = t, f = !0, this.attackChosen == this.attackZone && this.getAttackElapsed() > 0 ? this.progressEvent.trigger({
                        tag: "game",
                        type: s.GameEventType.Hit,
                        value: d.clamp(this.getAttackElapsed(), 0, 1),
                        which: this.attackChosen
                    }) : this.progressEvent.trigger({
                        tag: "game",
                        type: s.GameEventType.Miss,
                        value: d.clamp(this.getAttackElapsed(), 0, 1),
                        which: this.attackChosen
                    })
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = x
    }, {
        "../../components/event": 3,
        "../../components/spriteanimation": 7,
        "../../components/statemachine": 8,
        "../../util/utilities": 60,
        "../entities/moonbeast/controlpoint": 20,
        "../input": 25,
        "../levelgenerator": 26,
        lodash: 62,
        three: 64
    }],
    29: [function(t, e, i) {
        "use strict";

        function n(t) {
            w = t, o = new p["default"](u.map(u.range(32), function(t) {
                var e = new h.Mesh(w, M);
                e.visible = !1, e.castShadow = !0, e.name = "token", e.scale.set(.25, .25, .25);
                var i = new x.Token(e);
                return i
            }))
        }

        function r(t) {
            var e = new Array,
                i = new Array;
            u.forOwn(m.obstacleData, function(n, r) {
                var o = t.objs[r],
                    a = o.children[0];
                if (a)
                    for (var s = 0; 3 > s; s++) {
                        var h = a.clone();
                        h.material = g.villageMaterial, h.castShadow = !0, h.receiveShadow = !0, h.name = r;
                        var u = new d.CollisionObject(h, n.hitboxes);
                        1 === n.lanes ? e.push(u) : 2 === n.lanes && i.push(u)
                    }
            }), f.shuffleArray(e), f.shuffleArray(i), a = new p["default"](e), s = new p["default"](i)
        }
        var o, a, s, h = t("three"),
            u = t("lodash"),
            c = t("../levelgenerator"),
            l = t("../../components/event"),
            p = t("../../util/ringbuffer"),
            d = t("../entities/sceneobject"),
            f = t("../../util/utilities"),
            m = t("../../assets"),
            g = t("../../shaders/villagematerial"),
            v = t("../../shaders/tokenmaterial"),
            y = t("../entities/moonbeast/controlpoint"),
            _ = t("./collectionconfig"),
            b = t("../../util/console"),
            x = t("../entities/token"),
            w = void 0,
            M = v.tokenMaterial(),
            S = function() {
                function t(t) {
                    if (this.type = c.SegmentType.Collection, this.progressEvent = new l.Event, this.mesh = new h.Object3D, this.position = this.mesh.position, this.lastPlayerPosition = new h.Vector3, this.elapsedInside = 0, this.tokens = [], !o) {
                        var e = null;
                        t.objs.coin.traverse(function(t) {
                            t.geometry && (e = t.geometry)
                        }), n(e)
                    }
                    a && s || r(t), this.obstacles = new Array;
                    var i = Math.floor(f.getRandomRange(0, _.configurations.length - 1));
                    this.config = _.configurations[i], this.placeTokens(), b._console.log("Collection configuration '%s' selected", this.config.name);
                    for (var u = new h.Vector3, p = 0; p < this.config.points.length; p++) {
                        var d, m = this.config.points[p];
                        if (1 === m.lanes && (d = a.getNext()), 2 === m.lanes && (d = s.getNext()), d) {
                            u.copy(m.position), u.z *= this.getLength(), d.setPositionVector(u), this.obstacles.push(d), this.mesh.add(d.getMesh());
                            var g = (d.getHitboxes(), d.getMesh());
                            "wide_building" == g.name && 2 == g.position.x && (g.rotation.y = Math.PI / 2)
                        }
                    }
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.getLength = function() {
                    return 80
                }, t.prototype.destroy = function() {
                    this.mesh.parent && this.mesh.parent.remove(this.mesh)
                }, t.prototype.offsetPosition = function(t) {
                    this.position.z += t, this.obstacles.forEach(function(t) {
                        t.flagHitboxesForUpdate()
                    }), this.tokens.forEach(function(t) {
                        t.getHitbox().flagForUpdate()
                    })
                }, t.prototype.handleReset = function(t) {
                    this.offsetPosition(t)
                }, t.prototype.update = function(t, e) {
                    this.elapsedInside += t;
                    for (var i = this.kubo.getHitbox(), n = 0; n < this.tokens.length; n++) {
                        var r = this.tokens[n];
                        r.intersects(i) && this.progressEvent.trigger({
                            tag: "token",
                            token: c.TokenType.Armor
                        }), r.update(t, e)
                    }
                    for (var n = 0; n < this.obstacles.length; n++) {
                        var o = this.obstacles[n];
                        if (o.getMesh().visible !== !1 && o.intersects(i)) {
                            var a = this.kubo.stumble();
                            if (a) {
                                this.progressEvent.trigger({
                                    tag: "game",
                                    type: c.GameEventType.Collide
                                });
                                break
                            }
                        }
                    }
                }, t.prototype.setMoonBeast = function(t) {
                    var e = 2 * (Math.floor(2 * Math.random()) - .5);
                    this.moonbeast = t, t.setControlPoint(new y.ControlPoint(new h.Vector3(this.getLength() * e * .5, 20 + 10 * Math.random() - 5, .75 * this.getLength())), this.mesh)
                }, t.prototype.onControlPoint = function(t) {
                    var e = 2 * (Math.floor(2 * Math.random()) - .5);
                    this.moonbeast.setControlPoint(new y.ControlPoint(new h.Vector3(this.getLength() * e * .5, 20 + 10 * Math.random() - 5, .85 * this.getLength() + 1 * Math.random())), this.mesh)
                }, t.prototype.setKubo = function(t) {
                    this.kubo = t
                }, t.prototype.setPlayerPosition = function(t) {
                    this.lastPlayerPosition.copy(t);
                    var e = t.z - this.position.z;
                    return e > this.getLength() ? void this.progressEvent.trigger({
                        tag: "exit"
                    }) : void 0
                }, t.prototype.placeTokens = function() {
                    var t = 8,
                        e = f.copyVector3Array(this.config.tokens);
                    f.shuffleArray(e);
                    for (var i, n = 0; t > n; n++) {
                        var r = e.pop();
                        i = o.getNext(), i.getMesh().visible = !0;
                        f.getRandomRange(0, t);
                        r.z *= this.getLength(), i.setPositionVector(r), i.addPositionComponent(0, 0, f.getRandomRange(-2, 2)), i.reset(), this.tokens.push(i), this.mesh.add(i.getMesh())
                    }
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = S
    }, {
        "../../assets": 1,
        "../../components/event": 3,
        "../../shaders/tokenmaterial": 49,
        "../../shaders/villagematerial": 52,
        "../../util/console": 53,
        "../../util/ringbuffer": 57,
        "../../util/utilities": 60,
        "../entities/moonbeast/controlpoint": 20,
        "../entities/sceneobject": 21,
        "../entities/token": 22,
        "../levelgenerator": 26,
        "./collectionconfig": 30,
        lodash: 62,
        three: 64
    }],
    30: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            return new r.Vector3(t, e, i)
        }
        var r = t("three");
        i.configurations = [], i.configurations.push({
            name: "One",
            points: [{
                position: n(2, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .6),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .8),
                lanes: 1,
                jumpable: !0
            }],
            tokens: [n(2, 1, .1), n(-2, 1, .1), n(0, 1, .2), n(-2, 1, .3), n(0, 1, .3), n(2, 1, .3), n(-2, 1, .4), n(0, 1, .4), n(-2, 1, .5), n(0, 1, .5), n(2, 1, .5), n(0, 1, .6), n(-2, 1, .7), n(0, 1, .7), n(2, 1, .7), n(-2, 1, .8), n(2, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Two",
            points: [{
                position: n(0, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .8),
                lanes: 1,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(2, 1, .2), n(0, 1, .3), n(-2, 1, .3), n(2, 1, .4), n(-2, 1, .5), n(0, 1, .5), n(2, 1, .5), n(0, 1, .7), n(-2, 1, .8), n(2, 1, .8), n(0, 1, .9)]
        }), i.configurations.push({
            name: "Three",
            points: [{
                position: n(-1, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .6),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .8),
                lanes: 1,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(-2, 1, .2), n(0, 1, .2), n(2, 1, .2), n(-2, 1, .3), n(0, 1, .3), n(2, 1, .3), n(0, 1, .4), n(2, 1, .4), n(-2, 1, .5), n(0, 1, .5), n(2, 1, .5), n(0, 1, .6), n(0, 1, .7), n(-2, 1, .8), n(2, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Four",
            points: [{
                position: n(2, 0, .1),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .1),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-1, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(0, 1, .1), n(0, 1, .2), n(2, 1, .2), n(0, 1, .3), n(-2, 1, .4), n(0, 1, .4), n(2, 1, .4), n(0, 1, .5), n(-2, 1, .6), n(0, 1, .6), n(2, 1, .6), n(-2, 1, .7), n(2, 1, .8), n(0, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Five",
            points: [{
                position: n(1, 0, .1),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .1),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .6),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(-2, 1, .2), n(0, 1, .2), n(2, 1, .2), n(0, 1, .3), n(-2, 1, .4), n(0, 1, .4), n(2, 1, .4), n(2, 1, .6), n(-2, 1, .7), n(0, 1, .8), n(2, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Six",
            points: [{
                position: n(2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(1, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .6),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-1, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(0, 1, .2), n(-2, 1, .3), n(2, 1, .3), n(0, 1, .4), n(-2, 1, .5), n(2, 1, .5), n(-2, 1, .6), n(0, 1, .6), n(-2, 1, .7), n(2, 1, .7), n(0, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Seven",
            points: [{
                position: n(-2, 0, .1),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .8),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(0, 1, .1), n(2, 1, .1), n(2, 1, .2), n(-2, 1, .2), n(0, 1, .3), n(-2, 1, .4), n(0, 1, .4), n(2, 1, .4), n(0, 1, .5), n(2, 1, .5), n(-2, 1, .6), n(2, 1, .6), n(0, 1, .7), n(2, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Eight",
            points: [{
                position: n(1, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(1, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .6),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(-2, 1, .2), n(2, 1, .2), n(0, 1, .3), n(-2, 1, .4), n(0, 1, .4), n(2, 1, .4), n(-2, 1, .5), n(0, 1, .6), n(0, 1, .7), n(-2, 1, .7), n(0, 1, .8), n(2, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Nine",
            points: [{
                position: n(2, 0, .1),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .1),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(0, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .3),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-1, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .4),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .5),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .7),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(0, 1, .1), n(-2, 1, .2), n(0, 1, .3), n(-2, 1, .3), n(2, 1, .4), n(0, 1, .5), n(2, 1, .6), n(-2, 1, .6), n(2, 1, .7), n(0, 1, .7), n(-2, 1, .8), n(0, 1, .8), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        }), i.configurations.push({
            name: "Ten",
            points: [{
                position: n(2, 0, .2),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-1, 0, .2),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .3),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .4),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(-2, 0, .5),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(1, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-1, 0, .6),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .7),
                lanes: 2,
                jumpable: !0
            }, {
                position: n(2, 0, .8),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(1, 0, .8),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(0, 0, .8),
                lanes: 1,
                jumpable: !0
            }, {
                position: n(-2, 0, .8),
                lanes: 2,
                jumpable: !0
            }],
            tokens: [n(-2, 1, .1), n(0, 1, .1), n(2, 1, .1), n(0, 1, .2), n(-2, 1, .2), n(-2, 1, .3), n(2, 1, .3), n(0, 1, .4), n(0, 1, .5), n(-2, 1, .6), n(0, 1, .6), n(2, 1, .6), n(2, 1, .7), n(0, 1, .7), n(-2, 1, .9), n(0, 1, .9), n(2, 1, .9)]
        })
    }, {
        three: 64
    }],
    31: [function(t, e, i) {
        "use strict";
        var n, r = t("three"),
            o = t("lodash"),
            a = t("../levelgenerator"),
            s = t("../../components/event"),
            h = t("../../components/statemachine"),
            u = t("../entities/moonbeast/controlpoint"),
            c = (t("../entities/sceneobject"), t("../../assets"), t("../../shaders/villagematerial")),
            l = t("../../shaders/tokenmaterial");
        ! function(t) {
            t[t.Start = 0] = "Start", t[t.Steer = 1] = "Steer", t[t.Jump = 2] = "Jump", t[t.Token = 3] = "Token"
        }(n || (n = {}));
        var p = {
                Steer: 5,
                Jump: 7,
                Token: 20
            },
            d = function() {
                function t(t) {
                    var e = this;
                    this.type = a.SegmentType.Tutorial, this.progressEvent = new s.Event, this.lastPlayerPosition = new r.Vector3, this.mesh = new r.Object3D, this.position = this.mesh.position, this.state = new h["default"](n), this.state.to(n.Start), this.progressEvent.register(this.onEnter.bind(this), function(t) {
                        return a.ProgressEvent.isEnter(t)
                    });
                    var i = t.objs.crate_a;
                    i = i.children[0].clone(), i.material = c.villageMaterial, i.castShadow = !0, i.receiveShadow = !0;
                    var u = t.objs.coin.children[0];
                    u.material = l.tokenMaterial(), u.castShadow = !0, u.receiveShadow = !1, u.scale.set(.25, .25, .25), this.tokens = o.range(5).map(function(t) {
                        var i = u.clone();
                        return e.mesh.add(i), i.position.set(1 * (t - 2), 1.2, p.Token + 1.5), i
                    })
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.getLength = function() {
                    return 25
                }, t.prototype.destroy = function() {
                    this.mesh.parent && this.mesh.parent.remove(this.mesh)
                }, t.prototype.offsetPosition = function(t) {
                    this.position.z += t
                }, t.prototype.update = function(t, e) {
                    this.state.update(), this.tokens.forEach(function(e) {
                        e.rotation.y += 5 * t
                    })
                }, t.prototype.handleReset = function(t) {
                    this.mesh.position.z += t
                }, t.prototype.onEnter = function() {}, t.prototype.setMoonBeast = function(t) {
                    t.setControlPoint(new u.ControlPoint(new r.Vector3(this.getLength() / 2, 50, this.getLength()), 5, .1), this.mesh), this.moonbeast = t
                }, t.prototype.setKubo = function(t) {}, t.prototype.onControlPoint = function(t) {
                    this.moonbeast.setControlPoint(new u.ControlPoint(new r.Vector3(Math.random() * this.getLength() - .5 * this.getLength(), 50, Math.random() * this.getLength() + .5 * this.getLength()), 5, .1), this.mesh)
                }, t.prototype.setPlayerPosition = function(t) {
                    this.lastPlayerPosition.copy(t);
                    var e = this.lastPlayerPosition.z - this.position.z;
                    switch (this.state.get()) {
                        case n.Start:
                            e > p.Steer && (this.progressEvent.trigger({
                                tag: "tutorial",
                                stage: a.TutorialStage.Steer
                            }), this.state.to(n.Steer));
                            break;
                        case n.Steer:
                            e > p.Jump && (this.progressEvent.trigger({
                                tag: "tutorial",
                                stage: a.TutorialStage.Jump
                            }), this.state.to(n.Jump));
                            break;
                        case n.Jump:
                            e > p.Token && (this.progressEvent.trigger({
                                tag: "tutorial",
                                stage: a.TutorialStage.Token
                            }), this.state.to(n.Token));
                            break;
                        case n.Token:
                            e > this.getLength() && this.progressEvent.trigger({
                                tag: "exit"
                            })
                    }
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = d
    }, {
        "../../assets": 1,
        "../../components/event": 3,
        "../../components/statemachine": 8,
        "../../shaders/tokenmaterial": 49,
        "../../shaders/villagematerial": 52,
        "../entities/moonbeast/controlpoint": 20,
        "../entities/sceneobject": 21,
        "../levelgenerator": 26,
        lodash: 62,
        three: 64
    }],
    32: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = t("../util/dom"),
            o = t("./input"),
            a = t("../components/event"),
            s = t("../util/tween"),
            h = t("./vignette"),
            u = t("./gamemodel"),
            c = t("../components/leaderboard"),
            l = t("../components/ui/healthbar"),
            p = t("../components/ui/gradientbox"),
            d = t("../components/ui/attackbutton"),
            f = t("./../shaders/glowbarmaterial"),
            m = .3,
            g = .6,
            v = .8,
            y = new n.Color(10066329),
            _ = 8973567,
            b = 16769894,
            x = [new n.Vector3(-.6, -.25, 0), new n.Vector3(0, .33, 0), new n.Vector3(.6, -.25, 0)],
            w = {
                37: 0,
                38: 1,
                39: 2
            },
            M = function() {
                function t(t, e) {
                    var i = this;
                    this.game = t, this.overlays = r.byId("overlays"), this.tutorialScreen = null, this.attackPanel = null, this.expecting = null, this.advance = new a.Event, this.skipTutorial = new a.Event, this.mesh = new n.Object3D, this.borders = r.byId("borders"), this.bordersHidden = !1, this.gameOver = null, this.screenSize = new n.Vector3(window.innerWidth, window.innerHeight, 0), this.onNewGame = new a.Event, this.onPause = new a.Event, this.onMuteToggle = new a.Event, this.kuboBars = new n.Object3D, this.mbBars = new n.Object3D, this.kuboGlow = new n.Mesh, this.attackButtons = [], this.kuboBarsYTween = new s["default"]({
                        points: [.25, 0, .3, 1],
                        start: .1,
                        end: 0,
                        duration: .5,
                        onProgress: this.onKuboBarsYUpdate.bind(this)
                    }), this.kuboBarsVisible = !1, this.mbBarsYTween = new s["default"]({
                        points: [.25, 0, .3, 1],
                        start: .1,
                        end: 0,
                        duration: .5,
                        onProgress: this.onMBBarsYUpdate.bind(this)
                    }), this.mbBarsVisible = !1;
                    var o = new n.PlaneGeometry(g, 67 / 644 * g),
                        c = new n.PlaneGeometry(v, 67 / 644 * v),
                        p = e.textures.fx_healthbar,
                        y = e.textures.fx_healthbar_kubo;
                    this.healthbars = {
                        moonbeast: new l["default"](c, p, u["default"].MAX_MB_HP, u["default"].MAX_MB_HP),
                        kuboArmor: new l["default"](o, y, u["default"].MAX_ARMOR, u["default"].MAX_ARMOR),
                        kuboHealth: new l["default"](o, y, u["default"].MAX_HEALTH, u["default"].MAX_HEALTH)
                    }, this.mbBars.add(this.healthbars.moonbeast.getMesh()), this.kuboBars.add(this.healthbars.kuboArmor.getMesh()), this.kuboBars.add(this.healthbars.kuboHealth.getMesh());
                    var x = new n.PlaneGeometry(.66, .66);
                    this.attackButtons = [d["default"](e, x), d["default"](e, x), d["default"](e, x)], this.attackButtons.forEach(function(t) {
                        i.mesh.add(t.card), t.card.visible = !1
                    }), this.attackButtons[0].card.rotation.y = Math.PI, this.attackButtons[0].card.rotation.z = -Math.PI / 4, this.attackButtons[0].getMaterial().side = n.BackSide, this.attackButtons[2].card.rotation.z = -Math.PI / 4;
                    var w = this.healthbars.moonbeast.getMesh();
                    w.position.set(0, 1, 0);
                    var M = this.healthbars.kuboArmor.getMesh();
                    M.position.set(0, -.9835, 0), M.scale.y /= 2, this.healthbars.kuboArmor.material.repeat.set(1, .5), this.healthbars.kuboArmor.material.offset.set(0, .5);
                    var S = this.healthbars.kuboHealth.getMesh();
                    S.scale.set(1, 1, 1), S.position.set(0, -1.015, 0), S.scale.y /= 2, this.healthbars.kuboHealth.material.repeat.set(1, .5), this.healthbars.kuboHealth.material.offset.set(0, 0), this.bordersHidden = !!this.borders.className.match(/hidden/);
                    var T = new n.PlaneGeometry(698 * g / 644, 101 * g / 644),
                        A = new n.PlaneGeometry(698 * v / 644, 101 * v / 644),
                        E = new n.MeshBasicMaterial({
                            color: b,
                            transparent: !0,
                            map: e.textures.fx_healthbar_frame_kubo
                        }),
                        C = new n.Mesh(T, E.clone());
                    C.clone();
                    C.scale.set(1, 1, 1), C.position.set(0, -1, -.001), this.kuboBars.add(C), this.kuboFrame = C;
                    var P = new n.Mesh(A, E.clone());
                    P.material.map = e.textures.fx_healthbar_frame, P.material.color.setHex(_), P.scale.set(1, 1, 1), P.position.set(0, 1, -.001), this.mbBars.add(P), this.mbFrame = P, this.mesh.add(this.mbBars), this.mesh.add(this.kuboBars), this.mbBars.position.y = m, this.kuboBars.position.y = -m, this.mbBarsYTween.complete = !0, this.kuboBarsYTween.complete = !0;
                    var L = new n.PlaneGeometry(256 / 300, 64 / 300);
                    this.glowMaterial = f["default"](e), this.kuboGlow = new n.Mesh(L, this.glowMaterial), this.kuboBars.add(this.kuboGlow), this.kuboGlow.position.set(0, -1, .001), this.tutorialScreen = r.byId("begin-screen").cloneNode(!0), this.overlays.appendChild(this.tutorialScreen), r.addClass(this.tutorialScreen, "visible"), this.vignette = new h["default"], this.mesh.add(this.vignette.getMesh()), this.vignette.hide()
                }
                return t.prototype.getMesh = function() {
                    return this.mesh
                }, t.prototype.hide = function() {
                    this.mesh.visible = !1
                }, t.prototype.show = function() {
                    this.mesh.visible = !0
                }, t.prototype.assignKuboBarColor = function(t) {
                    this.kuboBarColor = t
                }, t.prototype.allowPointerEvents = function(t) {
                    t ? r.removeClass(this.overlays, "nopointer") : r.addClass(this.overlays, "nopointer")
                }, t.prototype.update = function(t, e) {
                    if (this.expecting)
                        for (var i = 0, n = this.expecting.length; n > i; i++)
                            if (this.game.inputManager.isActive(this.expecting[i])) {
                                this.advance.trigger(null);
                                break
                            }
                    this.healthbars.moonbeast.update(t, e), this.healthbars.kuboArmor.update(t, e), this.healthbars.kuboHealth.update(t, e), this.mbBarsYTween.update(t, e), this.kuboBarsYTween.update(t, e), this.vignette.update(t, e), this.glowMaterial.uniforms.uColor.value = this.kuboBarColor, this.attackButtons.forEach(function(i) {
                        i.card.visible && (i.update(t, e), i.playing && i.card.scale.addScalar(i.currentFrame / 20), i.playing || i.currentFrame != i.frames - 1 || (i.card.visible = !1))
                    })
                }, t.prototype.handleResize = function(t, e) {
                    this.screenSize.set(t, e, 0), this.kuboBarsVisible && (this.kuboBarsYTween.complete ? this.kuboBars.position.y = this.getBottomBarOrigin() : this.kuboBarsYTween.reset(this.kuboBars.position.y, this.getBottomBarOrigin())), this.mbBarsVisible && (this.mbBarsYTween.complete ? this.mbBars.position.y = this.getTopBarOrigin() : this.mbBarsYTween.reset(this.mbBars.position.y, this.getTopBarOrigin()))
                }, t.prototype.getBottomBarOrigin = function() {
                    return this.bordersHidden ? 40 / (this.screenSize.y / 2) + .01 : .25
                }, t.prototype.getTopBarOrigin = function() {
                    return this.bordersHidden ? -50.5 / (this.screenSize.y / 2) : -.25
                }, t.prototype.handleReset = function(t) {
                    this.mesh.position.z += t
                }, t.prototype.updateFromModel = function(t) {
                    this.healthbars.kuboArmor.setValue(t.kuboArmor), this.healthbars.kuboHealth.setValue(t.kuboHealth), this.healthbars.moonbeast.setValue(t.moonbeastHealth);
                    var e = this.kuboFrame.material.color,
                        i = this.mbFrame.material.color;
                    i.setHex(_), i.lerp(y, 1 - t.getMBRatio()), e.setHex(b), e.lerp(y, 1 - t.getTotalHealthRatio())
                }, t.prototype.setAttackTimer = function(t) {}, t.prototype.dismissTutorialScreen = function() {
                    var t = this;
                    if (this.expecting = null, this.tutorialScreen) {
                        var e = this.tutorialScreen;
                        return this.tutorialScreen.className.match(/tutorial-attack/) && this.hideBorders(), this.allowPointerEvents(!1), r.removeClass(this.tutorialScreen, "visible"), this.attackPanel && r.removeClass(this.attackPanel, "tutorial"), new Promise(function(i, n) {
                            setTimeout(function() {
                                r.remove(e), e == t.tutorialScreen && (t.tutorialScreen = null), i()
                            }, 1e3)
                        })
                    }
                }, t.prototype.showBeginScreen = function() {
                    var t = this;
                    this.vignette.show(), this.expecting = [o.InputEvent.Left, o.InputEvent.Right, o.InputEvent.Up], requestAnimationFrame(function() {
                        r.addClass(t.tutorialScreen, "seethrough")
                    }), this.tutorialScreen.addEventListener("click", function() {
                        t.advance.trigger(null)
                    });
                    var e = this.tutorialScreen.getElementsByClassName("skip")[0];
                    return e.addEventListener("click", function() {
                        t.skipTutorial.trigger(null), t.hideBorders()
                    }), e.addEventListener("touchstart", function() {
                        t.skipTutorial.trigger(null), t.hideBorders()
                    }), Promise.resolve()
                }, t.prototype.showSteerTutorial = function() {
                    var t = this;
                    this.vignette.hide(), this.tutorialScreen = r.byId("steer-tut").cloneNode(!0), this.overlays.appendChild(this.tutorialScreen), requestAnimationFrame(function() {
                        r.addClass(t.tutorialScreen, "visible")
                    }), this.expecting = [o.InputEvent.Left, o.InputEvent.Right];
                    var e = p.gradientboxRight(window.innerWidth, window.innerHeight),
                        i = r.el("div.svg");
                    i.innerHTML = e, this.tutorialScreen.getElementsByClassName("right")[0].appendChild(i);
                    var n = p.gradientboxLeft(window.innerWidth, window.innerHeight),
                        a = r.el("div.svg");
                    return a.innerHTML = n, this.tutorialScreen.getElementsByClassName("left")[0].appendChild(a), Promise.resolve()
                }, t.prototype.showJumpTutorial = function() {
                    var t = this;
                    this.vignette.hide(), this.tutorialScreen = r.byId("jump-tut").cloneNode(!0), this.overlays.appendChild(this.tutorialScreen), requestAnimationFrame(function() {
                        r.addClass(t.tutorialScreen, "visible")
                    }), this.expecting = [o.InputEvent.Up];
                    var e = p.gradientboxUp(window.innerWidth, window.innerHeight),
                        i = r.el("div.svg");
                    return i.innerHTML = e, this.tutorialScreen.getElementsByClassName("upper")[0].appendChild(i), Promise.resolve()
                }, t.prototype.showTokenTutorial = function() {
                    var t = this;
                    return this.vignette.hide(), this.tutorialScreen = r.byId("token-tut").cloneNode(!0), this.overlays.appendChild(this.tutorialScreen), requestAnimationFrame(function() {
                        r.addClass(t.tutorialScreen, "visible")
                    }), this.expecting = [o.InputEvent.Up, o.InputEvent.Left, o.InputEvent.Right], this.show(), this.healthbars.kuboArmor.show(), this.healthbars.kuboHealth.show(), this.healthbars.moonbeast.hide(), this.showKuboBars(), Promise.resolve()
                }, t.prototype.showAttackTutorial = function() {
                    var t = this;
                    return this.vignette.show(), this.tutorialScreen = r.byId("attack-tut").cloneNode(!0), this.overlays.appendChild(this.tutorialScreen), requestAnimationFrame(function() {
                        r.addClass(t.tutorialScreen, "visible")
                    }), this.healthbars.moonbeast.show(), this.showMBBars(), Promise.resolve()
                }, t.prototype.showAttackTutorial2 = function() {
                    r.addClass(this.tutorialScreen, "phase-2"), this.expecting = [o.InputEvent.Up, o.InputEvent.Left, o.InputEvent.Right]
                }, t.prototype.showAttackPanel = function() {
                    var t = this;
                    return this.attackButtons.forEach(function(e, i) {
                        e.reset().stop(), e.card.scale.set(1, 1, 1), e.card.visible = !0, e.card.position.copy(x[i]), e.card.position.x *= t.screenSize.x / t.screenSize.y
                    }), Promise.resolve()
                }, t.prototype.hideAttackPanel = function(t) {
                    return -1 != t && this.attackButtons[w[t]].play(), this.attackButtons.forEach(function(t) {
                        t.playing || (t.card.visible = !1)
                    }), Promise.resolve()
                }, t.prototype.hideBorders = function() {
                    this.bordersHidden || (r.addClass(this.borders, "hidden"), this.bordersHidden = !0, r.addClass(this.overlays, "in-game"), this.kuboBarsYTween.complete = !1, this.mbBarsYTween.complete = !1, this.handleResize(this.screenSize.x, this.screenSize.y))
                }, t.prototype.showGameOver = function(t, e) {
                    var i = this;
                    this.vignette.hide();
                    var n = !1,
                        o = Math.round(t["final"]).toFixed(0);
                    this.gameOver = r.byId("game-over").cloneNode(!0), this.overlays.appendChild(this.gameOver);
                    var a = this.gameOver.querySelector(".twitter-link");
                    a.href = a.href.replace("{TEXT}", escape("See if you can beat my score of " + o + " in Moon Beast Brawl to compete to win a pair of Kubo XVs!")).replace("{HASHTAGS}", escape("ShoesYourDestiny")).replace("{URL}", escape("http://kubothemovie.com/moon-beast-brawl/")), a.addEventListener("click", function() {
                        ga && ga("send", "event", "MBB", "Twitter")
                    });
                    var s = this.gameOver.querySelector(".facebook-link");
                    s.addEventListener("click", function(t) {
                        t.preventDefault(), ga && ga("send", "event", "MBB", "Facebook"), FB && FB.ui({
                            method: "feed",
                            link: "http://" + location.hostname + location.pathname,
                            caption: "See if you can beat my score of " + o + " points in Moon Beast Brawl to compete to win a pair of Kubo XVs!"
                        })
                    }), requestAnimationFrame(function() {
                        r.addClass(i.gameOver, "visible")
                    }), t.didWin ? (r.removeClass(this.gameOver, "loss"), r.addClass(this.gameOver, "victory")) : (r.addClass(this.gameOver, "loss"), r.removeClass(this.gameOver, "victory"));
                    var h = function() {
                        n || (n = !0, i.dismissGameOver(), i.onNewGame.trigger(null), ga && ga("send", "event", "MBB", "Replay"))
                    };
                    this.gameOver.getElementsByClassName("play-again")[0].addEventListener("click", h), this.gameOver.getElementsByClassName("play-again")[0].addEventListener("touchstart", h), r.removeClass(this.overlays, "in-game"), this.gameOver.getElementsByClassName("exit")[0].addEventListener("click", function() {
                        r.removeClass(r.byId("exit-panel"), "fade")
                    }), r.text(this.gameOver.getElementsByClassName("points")[0], t["final"].toFixed(0)), this.allowPointerEvents(!0)
                }, t.prototype.dismissGameOver = function() {
                    var t = this;
                    this.vignette.show();
                    var e = this.gameOver;
                    r.removeClass(this.gameOver, "visible"), r.addClass(this.overlays, "in-game"), setTimeout(function() {
                        r.remove(e), e == t.gameOver && (t.gameOver = null)
                    }, 1e3), this.allowPointerEvents(!1)
                }, t.prototype.setModels = function(t, e) {
                    this.gameModel = t, this.userModel = e
                }, t.prototype.saveScorePrompt = function() {
                    var t = this;
                    if (!this.saveScorePanel) {
                        this.saveScorePanel = r.byId("score-prompt-panel");
                        var e = function() {
                                r.addClass(t.saveScorePanel, "fade"), n()
                            },
                            i = function() {
                                r.addClass(t.saveScorePanel, "fade"), t.beginSaveScore(), n()
                            },
                            n = function() {
                                r.toarray(t.saveScorePanel.getElementsByClassName("cancel")).forEach(function(t) {
                                    t.removeEventListener("click", e)
                                }), r.toarray(t.saveScorePanel.getElementsByClassName("yes")).forEach(function(t) {
                                    t.removeEventListener("click", i)
                                })
                            };
                        r.toarray(this.saveScorePanel.getElementsByClassName("cancel")).forEach(function(t) {
                            t.addEventListener("click", e)
                        }), r.toarray(this.saveScorePanel.getElementsByClassName("yes")).forEach(function(t) {
                            t.addEventListener("click", i)
                        })
                    }
                    r.removeClass(this.saveScorePanel, "fade")
                }, t.prototype.beginSaveScore = function() {
                    var t = new c["default"](this.gameModel, this.userModel);
                    t.showOverlay(), this.userModel.needsLogin() ? t.showLogin() : t.submitScore()
                }, t.prototype.showKuboBars = function() {
                    this.kuboBarsVisible || (this.kuboBarsVisible = !0, this.kuboBarsYTween.reset(-m, this.getBottomBarOrigin()))
                }, t.prototype.hideKuboBars = function() {
                    this.kuboBarsVisible && (this.kuboBarsVisible = !1, this.kuboBarsYTween.reset(this.getBottomBarOrigin(), -m))
                }, t.prototype.onKuboBarsYUpdate = function(t) {
                    this.kuboBars.position.y = t
                }, t.prototype.showMBBars = function() {
                    this.mbBarsVisible || (this.mbBarsVisible = !0, this.mbBarsYTween.reset(m, this.getTopBarOrigin()))
                }, t.prototype.hideMBBars = function() {
                    this.mbBarsVisible && (this.mbBarsVisible = !1, this.mbBarsYTween.reset(this.getTopBarOrigin(), m))
                }, t.prototype.onMBBarsYUpdate = function(t) {
                    this.mbBars.position.y = t
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = M
    }, {
        "../components/event": 3,
        "../components/leaderboard": 4,
        "../components/ui/attackbutton": 9,
        "../components/ui/gradientbox": 10,
        "../components/ui/healthbar": 11,
        "../util/dom": 55,
        "../util/tween": 59,
        "./../shaders/glowbarmaterial": 40,
        "./gamemodel": 23,
        "./input": 25,
        "./vignette": 33,
        three: 64
    }],
    33: [function(t, e, i) {
        "use strict";
        var n = t("three"),
            r = t("../shaders/vignettecardmaterial"),
            o = t("../util/tween"),
            a = function() {
                function t() {
                    var t = this;
                    this.parent = new n.Object3D, this.positionYVisible = .8, this.positionYHidden = 1.2, this.positionY = this.positionYHidden, this._positionTween = new o["default"]({
                        points: [.1, .57, .37, .9],
                        duration: 3,
                        start: this.positionY,
                        end: this.positionYVisible,
                        onProgress: function(e) {
                            t.positionY = e
                        }
                    }), this.glowColor = new n.Color(0, 0, 0), this.startGlowColor = new n.Color(0, 0, 0), this.targetGlowColor = new n.Color(0, 0, 0), this._glowTween = new o["default"]({
                        points: [.3, 0, .3, 1],
                        duration: .3,
                        start: 0,
                        end: 1,
                        onProgress: function(e) {
                            t.glowColor = t.startGlowColor.lerp(t.targetGlowColor, e)
                        }
                    }), this.cardGeo = new n.PlaneGeometry(10, 1.1), this.cardMaterial = r["default"](), this.topCard = new n.Mesh(this.cardGeo, this.cardMaterial), this.topCard.position.set(0, this.positionY, -.1), this.topCard.name = "Vignette top card", this.bottomCard = new n.Mesh(this.cardGeo, this.cardMaterial), this.bottomCard.rotation.z = Math.PI, this.bottomCard.position.set(0, -this.positionY, -.1), this.bottomCard.name = "Vignette bottom card", this.parent.add(this.topCard), this.parent.add(this.bottomCard)
                }
                return t.prototype.update = function(t, e) {
                    this._glowTween.update(t, e), this._positionTween.update(t, e), this.cardMaterial.uniforms.uColor.value = this.glowColor, this.topCard.position.y = this.positionY, this.bottomCard.position.y = -this.positionY
                }, t.prototype.getMesh = function() {
                    return this.parent
                }, t.prototype.handleReset = function(t) {}, t.prototype.glowRed = function() {
                    this.pulseColor(211 / 255, 12 / 255, 20 / 255)
                }, t.prototype.glowBlue = function() {
                    this.pulseColor(83 / 255 / 2, 230 / 255 / 2, 247 / 255 / 2)
                }, t.prototype.show = function() {
                    this._positionTween.reset(this.positionY, this.positionYVisible)
                }, t.prototype.hide = function() {
                    this._positionTween.reset(this.positionY, this.positionYHidden)
                }, t.prototype.tweenGlowTo = function(t, e, i) {
                    this._glowTween.reset(0, 1), this.startGlowColor.copy(this.glowColor), this.targetGlowColor.setRGB(t, e, i)
                }, t.prototype.pulseColor = function(t, e, i) {
                    var n = this;
                    this.tweenGlowTo(t, e, i), this._glowTween.onComplete = function() {
                        n.tweenGlowTo(0, 0, 0)
                    }
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = a
    }, {
        "../shaders/vignettecardmaterial": 51,
        "../util/tween": 59,
        three: 64
    }],
    34: [function(t, e, i) {
        "use strict";

        function n(t) {
            t.OBJLoader = function(e) {
                this.manager = void 0 !== e ? e : t.DefaultLoadingManager, this.materials = null, this.regexp = {
                    vertex_pattern: /^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,
                    normal_pattern: /^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,
                    uv_pattern: /^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,
                    face_vertex: /^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,
                    face_vertex_uv: /^f\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+))?/,
                    face_vertex_uv_normal: /^f\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+)\/(-?\d+))?/,
                    face_vertex_normal: /^f\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)(?:\s+(-?\d+)\/\/(-?\d+))?/,
                    object_pattern: /^[og]\s*(.+)?/,
                    smoothing_pattern: /^s\s+(\d+|on|off)/,
                    material_library_pattern: /^mtllib /,
                    material_use_pattern: /^usemtl /
                }
            }, t.OBJLoader.prototype = {
                constructor: t.OBJLoader,
                load: function(e, i, n, r) {
                    var o = this,
                        a = new t.XHRLoader(o.manager);
                    a.setPath(this.path), a.load(e, function(t) {
                        i(o.parse(t))
                    }, n, r)
                },
                setPath: function(t) {
                    this.path = t
                },
                setMaterials: function(t) {
                    this.materials = t
                },
                _createParserState: function() {
                    var t = {
                        objects: [],
                        object: {},
                        vertices: [],
                        normals: [],
                        uvs: [],
                        materialLibraries: [],
                        startObject: function(t, e) {
                            return this.object && this.object.fromDeclaration === !1 ? (this.object.name = t, void(this.object.fromDeclaration = e !== !1)) : (this.object = {
                                name: t || "",
                                geometry: {
                                    vertices: [],
                                    normals: [],
                                    uvs: []
                                },
                                material: {
                                    name: "",
                                    smooth: !0
                                },
                                fromDeclaration: e !== !1
                            }, void this.objects.push(this.object))
                        },
                        parseVertexIndex: function(t, e) {
                            var i = parseInt(t, 10);
                            return 3 * (i >= 0 ? i - 1 : i + e / 3)
                        },
                        parseNormalIndex: function(t, e) {
                            var i = parseInt(t, 10);
                            return 3 * (i >= 0 ? i - 1 : i + e / 3)
                        },
                        parseUVIndex: function(t, e) {
                            var i = parseInt(t, 10);
                            return 2 * (i >= 0 ? i - 1 : i + e / 2)
                        },
                        addVertex: function(t, e, i) {
                            var n = this.vertices,
                                r = this.object.geometry.vertices;
                            r.push(n[t + 0]), r.push(n[t + 1]), r.push(n[t + 2]), r.push(n[e + 0]), r.push(n[e + 1]), r.push(n[e + 2]), r.push(n[i + 0]), r.push(n[i + 1]), r.push(n[i + 2])
                        },
                        addVertexLine: function(t) {
                            var e = this.vertices,
                                i = this.object.geometry.vertices;
                            i.push(e[t + 0]), i.push(e[t + 1]), i.push(e[t + 2])
                        },
                        addNormal: function(t, e, i) {
                            var n = this.normals,
                                r = this.object.geometry.normals;
                            r.push(n[t + 0]), r.push(n[t + 1]), r.push(n[t + 2]), r.push(n[e + 0]), r.push(n[e + 1]), r.push(n[e + 2]), r.push(n[i + 0]), r.push(n[i + 1]), r.push(n[i + 2])
                        },
                        addUV: function(t, e, i) {
                            var n = this.uvs,
                                r = this.object.geometry.uvs;
                            r.push(n[t + 0]), r.push(n[t + 1]), r.push(n[e + 0]), r.push(n[e + 1]), r.push(n[i + 0]), r.push(n[i + 1])
                        },
                        addUVLine: function(t) {
                            var e = this.uvs,
                                i = this.object.geometry.uvs;
                            i.push(e[t + 0]), i.push(e[t + 1])
                        },
                        addFace: function(t, e, i, n, r, o, a, s, h, u, c, l) {
                            var p, d = this.vertices.length,
                                f = this.parseVertexIndex(t, d),
                                m = this.parseVertexIndex(e, d),
                                g = this.parseVertexIndex(i, d);
                            if (void 0 === n ? this.addVertex(f, m, g) : (p = this.parseVertexIndex(n, d), this.addVertex(f, m, p), this.addVertex(m, g, p)), void 0 !== r) {
                                var v = this.uvs.length;
                                f = this.parseUVIndex(r, v), m = this.parseUVIndex(o, v), g = this.parseUVIndex(a, v), void 0 === n ? this.addUV(f, m, g) : (p = this.parseUVIndex(s, v), this.addUV(f, m, p), this.addUV(m, g, p))
                            }
                            if (void 0 !== h) {
                                var y = this.normals.length;
                                f = this.parseNormalIndex(h, y), m = h === u ? f : this.parseNormalIndex(u, y), g = h === c ? f : this.parseNormalIndex(c, y), void 0 === n ? this.addNormal(f, m, g) : (p = this.parseNormalIndex(l, y), this.addNormal(f, m, p), this.addNormal(m, g, p))
                            }
                        },
                        addLineGeometry: function(t, e) {
                            this.object.geometry.type = "Line";
                            for (var i = this.vertices.length, n = this.uvs.length, r = 0, o = t.length; o > r; r++) this.addVertexLine(this.parseVertexIndex(t[r], i));
                            for (var a = 0, o = e.length; o > a; a++) this.addUVLine(this.parseUVIndex(e[a], n))
                        }
                    };
                    return t.startObject("", !1), t
                },
                parse: function(e) {
                    var i = this._createParserState(); - 1 !== e.indexOf("\r\n") && (e = e.replace("\r\n", "\n"));
                    for (var n = e.split("\n"), r = "", o = "", a = "", s = 0, h = [], u = "function" == typeof "".trimLeft, c = 0, l = n.length; l > c; c++)
                        if (r = n[c], r = u ? r.trimLeft() : r.trim(), s = r.length, 0 !== s && (o = r.charAt(0), "#" !== o))
                            if ("v" === o)
                                if (a = r.charAt(1), " " === a && null !== (h = this.regexp.vertex_pattern.exec(r))) i.vertices.push(parseFloat(h[1]), parseFloat(h[2]), parseFloat(h[3]));
                                else if ("n" === a && null !== (h = this.regexp.normal_pattern.exec(r))) i.normals.push(parseFloat(h[1]), parseFloat(h[2]), parseFloat(h[3]));
                    else {
                        if ("t" !== a || null === (h = this.regexp.uv_pattern.exec(r))) throw new Error("Unexpected vertex/normal/uv line: '" + r + "'");
                        i.uvs.push(parseFloat(h[1]), parseFloat(h[2]))
                    } else if ("f" === o)
                        if (null !== (h = this.regexp.face_vertex_uv_normal.exec(r))) i.addFace(h[1], h[4], h[7], h[10], h[2], h[5], h[8], h[11], h[3], h[6], h[9], h[12]);
                        else if (null !== (h = this.regexp.face_vertex_uv.exec(r))) i.addFace(h[1], h[3], h[5], h[7], h[2], h[4], h[6], h[8]);
                    else if (null !== (h = this.regexp.face_vertex_normal.exec(r))) i.addFace(h[1], h[3], h[5], h[7], void 0, void 0, void 0, void 0, h[2], h[4], h[6], h[8]);
                    else {
                        if (null === (h = this.regexp.face_vertex.exec(r))) throw new Error("Unexpected face line: '" + r + "'");
                        i.addFace(h[1], h[2], h[3], h[4])
                    } else if ("l" === o) {
                        var p = r.substring(1).trim().split(" "),
                            d = [],
                            f = [];
                        if (-1 === r.indexOf("/")) d = p;
                        else
                            for (var m = 0, g = p.length; g > m; m++) {
                                var v = p[m].split("/");
                                "" !== v[0] && d.push(v[0]), "" !== v[1] && f.push(v[1])
                            }
                        i.addLineGeometry(d, f)
                    } else if (null !== (h = this.regexp.object_pattern.exec(r))) {
                        var y = h[0].substr(1).trim();
                        i.startObject(y)
                    } else if (this.regexp.material_use_pattern.test(r)) i.object.material.name = r.substring(7).trim();
                    else if (this.regexp.material_library_pattern.test(r)) i.materialLibraries.push(r.substring(7).trim());
                    else {
                        if (null === (h = this.regexp.smoothing_pattern.exec(r))) {
                            if ("\x00" === r) continue;
                            throw new Error("Unexpected line: '" + r + "'")
                        }
                        var _ = h[1].trim().toLowerCase();
                        i.object.material.smooth = "1" === _ || "on" === _
                    }
                    var b = new t.Group;
                    b.materialLibraries = [].concat(i.materialLibraries);
                    for (var c = 0, l = i.objects.length; l > c; c++) {
                        var x = i.objects[c],
                            w = x.geometry,
                            M = "Line" === w.type;
                        if (0 !== w.vertices.length) {
                            var S = new t.BufferGeometry;
                            S.addAttribute("position", new t.BufferAttribute(new Float32Array(w.vertices), 3)), w.normals.length > 0 ? S.addAttribute("normal", new t.BufferAttribute(new Float32Array(w.normals), 3)) : S.computeVertexNormals(), w.uvs.length > 0 && S.addAttribute("uv", new t.BufferAttribute(new Float32Array(w.uvs), 2));
                            var T;
                            if (null !== this.materials && (T = this.materials.create(x.material.name), M && T && !(T instanceof t.LineBasicMaterial))) {
                                var A = new t.LineBasicMaterial;
                                A.copy(T), T = A
                            }
                            T || (T = M ? new t.LineBasicMaterial : new t.MeshPhongMaterial, T.name = x.material.name), T.shading = x.material.smooth ? t.SmoothShading : t.FlatShading;
                            var E = M ? new t.Line(S, T) : new t.Mesh(S, T);
                            E.name = x.name, b.add(E)
                        }
                    }
                    return b
                }
            }
        }
        i.OBJLoader = n
    }, {}],
    35: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            return 1 - 3 * e + 3 * t
        }

        function r(t, e) {
            return 3 * e - 6 * t
        }

        function o(t) {
            return 3 * t
        }

        function a(t, e, i) {
            return ((n(e, i) * t + r(e, i)) * t + o(e)) * t
        }

        function s(t, e, i) {
            return 3 * n(e, i) * t * t + 2 * r(e, i) * t + o(e)
        }

        function h(t, e, i, n, r) {
            var o, s, h = 0;
            do s = e + (i - e) / 2, o = a(s, n, r) - t, o > 0 ? i = s : e = s; while (Math.abs(o) > d && ++h < f);
            return s
        }

        function u(t, e, i, n) {
            for (var r = 0; l > r; ++r) {
                var o = s(e, i, n);
                if (0 === o) return e;
                var h = a(e, i, n) - t;
                e -= h / o
            }
            return e
        }

        function c(t, e, i, n) {
            function r(e) {
                for (var n = 0, r = 1, a = m - 1; r !== a && o[r] <= e; ++r) n += g;
                --r;
                var c = (e - o[r]) / (o[r + 1] - o[r]),
                    l = n + c * g,
                    d = s(l, t, i);
                return d >= p ? u(e, l, t, i) : 0 === d ? l : h(e, n, n + g, t, i)
            }
            if (!(t >= 0 && 1 >= t && i >= 0 && 1 >= i)) throw new Error("bezier x values must be in [0, 1] range");
            var o = v ? new Float32Array(m) : new Array(m);
            if (t !== e || i !== n)
                for (var c = 0; m > c; ++c) o[c] = a(c * g, t, i);
            return function(o) {
                return t === e && i === n ? o : 0 === o ? 0 : 1 === o ? 1 : a(r(o), e, n)
            }
        }
        var l = 4,
            p = .001,
            d = 1e-7,
            f = 10,
            m = 11,
            g = 1 / (m - 1),
            v = "function" == typeof Float32Array;
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = c
    }, {}],
    36: [function(t, e, i) {
        "use strict";

        function n(t) {
            for (var e = t.current / t.total * 100, i = Math.round(e).toFixed(0), n = 0, r = i.length - 1; r >= n; n++) f.text(h[2 - n], i.charAt(r - n))
        }
        var r = t("three"),
            o = t("lodash"),
            a = t("es6-promise");
        window.Promise = a.Promise;
        var s, h, u, c = t("./game"),
            l = t("./runloop"),
            p = t("./util/loaders"),
            d = t("./assets"),
            f = t("./util/dom"),
            m = t("./game/input"),
            g = t("./components/agegate"),
            v = t("./components/wrapperui"),
            y = 14;
        try {
            var _ = window.innerWidth <= 1024;
            u = new r.WebGLRenderer, u.setPixelRatio(_ ? window.devicePixelRatio || 1 : 1), u.domElement.id = "game-canvas", _ || (u.shadowMapEnabled = !0), document.body.appendChild(u.domElement), s = document.getElementById("loader-progress"), h = f.toarray(s.getElementsByClassName("digit")), _ && (d.assets.textures = o.mapValues(d.assets.textures, function(t, e) {
                return t.replace(/assets\//, "assets/mobile/")
            }));
            var b = new g["default"](f.byId("age-gate")),
                x = p.loadAll(d.assets, n),
                w = new m.InputManager(u.domElement);
            x.then(function() {
                b.submitted().then(function(t) {
                    w.disabled = !1, setTimeout(function() {
                        var e, i, n = function() {
                            return e = new c.Game(w, u, _), e.init(d.assets), t >= y ? e.canSaveScores = !0 : e.canSaveScores = !1, e.ui.onNewGame.register(function() {
                                n(), e.skipTutorial = !0, e.skipIntro = !0, e.kubo.startRunning()
                            }), e.ui.onPause.register(function() {
                                i.togglePause()
                            }), i && (i.app = e, i.threeCamera = e.camera), e
                        };
                        n(), i = new l.RunLoop(e, u, e.camera), i.start();
                        new v["default"](i, document.getElementById("overlays"));
                        f.remove(f.byId("preloader"))
                    }, 0)
                })
            }, function(t) {
                alert("Failed to load some required assets: " + t)
            })
        } catch (M) {
            document.getElementById("unsupported-device").style.display = "block"
        }
    }, {
        "./assets": 1,
        "./components/agegate": 2,
        "./components/wrapperui": 13,
        "./game": 14,
        "./game/input": 25,
        "./runloop": 37,
        "./util/dom": 55,
        "./util/loaders": 56,
        "es6-promise": 61,
        lodash: 62,
        three: 64
    }],
    37: [function(t, e, i) {
        "use strict";

        function n(t) {
            return Math.max(window.innerWidth, 320)
        }

        function r(t) {
            return Math.max(window.innerHeight, 321)
        }

        function o(t) {
            for (var e = 2; .9 * t > e;) e <<= 1;
            return e
        }
        i.getWW = n, i.getWH = r, i.nextPowerOf2 = o;
        var a = function() {
            function t(t, e, i) {
                this.width = 0, this.height = 0, this.leftOffset = 0, this.frameNum = 0, this.queuedFrame = 0, this.lastFrameTime = +new Date, this.startTime = +new Date, this.paused = !1, this.running = !1, this.timerRingBuffer = new s, this.app = t, this.threeRenderer = e, this.threeCamera = i, this.width = n(e), this.height = r(e);
                e.getSize(), e.getPixelRatio();
                this.render = this.render.bind(this), this.resize(!0), this.paused = !1, this.running = !1
            }
            return t.prototype.reset = function() {
                this.startTime = +new Date, this.lastFrameTime = this.startTime
            }, t.prototype.resize = function(t) {
                var e = n(this.threeRenderer),
                    i = r(this.threeRenderer),
                    o = e / i,
                    a = 2.55,
                    s = 0;
                if (o > a) {
                    e = i * a, s = (window.innerWidth - e) / 2
                }
                return t || this.width != e || this.height != i || s != this.leftOffset ? (this.width = e, this.height = i, this.leftOffset = s, this.threeRenderer.setSize(this.width, this.height), this.threeRenderer.domElement.style.left = s + "px", this.app.resize(this.width, this.height), this.threeCamera.aspect = this.width / this.height, this.threeCamera.updateProjectionMatrix(), !0) : !1
            }, t.prototype.render = function() {
                this.frameNum += 1, this.running && (this.queuedFrame = requestAnimationFrame(this.render));
                var t = this.resize();
                t && this.app.handleResize(this.width, this.height);
                var e = Date.now(),
                    i = e,
                    n = e - this.lastFrameTime,
                    r = (i - this.startTime) / 1e3;
                this.timerRingBuffer.add(n / 1e3);
                var o = this.timerRingBuffer.checkThreshold(r);
                o && (this.app.mobile = !0, this.threeRenderer.shadowMap.enabled = !1), n > 500 && (n = 33.33334);
                for (var a = 16.66667; n >= a;) this.paused || this.app.update(a / 1e3, r), n -= a, i += a;
                this.lastFrameTime = e - n, this.app.beforeRender && this.app.beforeRender(this.threeRenderer), this.app.render(this.threeRenderer), this.app.lateRender && this.app.lateRender()
            }, t.prototype.start = function() {
                this.running || (this.running = !0, this.lastFrameTime = Date.now(), this.queuedFrame = requestAnimationFrame(this.render))
            }, t.prototype.stop = function() {
                this.running = !1, cancelAnimationFrame(this.queuedFrame), this.queuedFrame = null
            }, t.prototype.togglePause = function() {
                this.running ? this.stop() : this.start()
            }, t
        }();
        i.RunLoop = a;
        var s = function() {
            function t() {
                this.current = -1, this.BUFFER_SIZE = 60, this.AVERAGE_THRESHOLD = .04, this.VARIANCE_THRESHOLD = .032, this.VARIANCE_COUNT = 10, this.MAX_DT_VALUE = .2, this.timer = 0, this.MIN_TIME_MEASURE = 2, this.MIN_TIME_START = 15, this.measure = !1, this.toggle = !1, this.elements = new Array(this.BUFFER_SIZE), this.maxStack = new h(this.VARIANCE_COUNT), this.minStack = new u(this.VARIANCE_COUNT)
            }
            return t.prototype.add = function(t) {
                this.timer += t, t < this.MAX_DT_VALUE && (this.current = (this.current + 1) % this.BUFFER_SIZE, this.elements[this.current] = t, this.current === this.BUFFER_SIZE - 1 && (this.measure = !0))
            }, t.prototype.checkThreshold = function(t) {
                if (this.measure && this.timer > this.MIN_TIME_MEASURE && t > this.MIN_TIME_START) {
                    for (; this.timer > this.MIN_TIME_MEASURE;) this.timer -= this.MIN_TIME_MEASURE;
                    for (var e = 0, i = 0; i < this.elements.length; i++) {
                        var n = this.elements[i];
                        e += n, this.maxStack.add(n), this.minStack.add(n)
                    }
                    for (var r = e / this.BUFFER_SIZE, o = !0, i = 0; i < this.VARIANCE_COUNT; i++) {
                        var a = this.maxStack.pop(),
                            s = this.minStack.pop();
                        a - s < this.VARIANCE_THRESHOLD && (o = !1)
                    }
                    r > this.AVERAGE_THRESHOLD ? this.toggle = !0 : o ? this.toggle = !0 : this.toggle = !1
                }
                return this.toggle
            }, t
        }();
        i.TimerRingBuffer = s;
        var h = function() {
                function t(t) {
                    this.elements = new Array(t);
                    for (var e = 0; t > e; e++) this.elements[e] = 0
                }
                return t.prototype.add = function(t) {
                    t > this.elements[0] && (this.elements[0] = t, this.sort())
                }, t.prototype.pop = function() {
                    var t = this.elements[this.elements.length - 1];
                    return this.elements[this.elements.length - 1] = 0, this.sort(), t
                }, t.prototype.sort = function() {
                    this.elements.sort(function(t, e) {
                        return t - e
                    })
                }, t
            }(),
            u = function() {
                function t(t) {
                    this.elements = new Array(t);
                    for (var e = 0; t > e; e++) this.elements[e] = 1 / 0
                }
                return t.prototype.add = function(t) {
                    t < this.elements[0] && (this.elements[0] = t, this.sort())
                }, t.prototype.pop = function() {
                    var t = this.elements[this.elements.length - 1];
                    return this.elements[this.elements.length - 1] = 1 / 0, this.sort(), t
                }, t.prototype.sort = function() {
                    this.elements.sort(function(t, e) {
                        return e - t
                    })
                }, t
            }()
    }, {}],
    38: [function(t, e, i) {
        "use strict";

        function n(t) {
            function e(t, e) {
                return Math.exp(-(t * t) / (2 * e * e))
            }
            var i, n, r, o, a = 25,
                s = 2 * Math.ceil(3 * t) + 1;
            for (s > a && (s = a), o = .5 * (s - 1), n = new Array(s), r = 0, i = 0; s > i; ++i) n[i] = e(i - o, t), r += n[i];
            for (i = 0; s > i; ++i) n[i] /= r;
            return n
        }

        function r(t, e, i, r) {
            var h = new o.ShaderMaterial({
                uniforms: {
                    tDiffuse: {
                        type: "t",
                        value: null
                    },
                    uImageIncrement: {
                        type: "v2",
                        value: new o.Vector2(.001953125, 0)
                    },
                    cKernel: {
                        type: "fv1",
                        value: n(e)
                    }
                },
                defines: {
                    KERNEL_SIZE_FLOAT: t.toFixed(1),
                    KERNEL_SIZE_INT: t.toFixed(0)
                },
                vertexShader: a,
                fragmentShader: s
            });
            return h
        }
        var o = t("three"),
            a = ["uniform vec2 uImageIncrement;", "varying vec2 vUv;", "void main() {", "vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            s = ["uniform float cKernel[ KERNEL_SIZE_INT ];", "uniform sampler2D tDiffuse;", "uniform vec2 uImageIncrement;", "varying vec2 vUv;", "void main() {", "vec2 imageCoord = vUv;", "vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );", "for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {", "vec4 color = texture2D( tDiffuse, imageCoord );", "color = mix(color * color, color, 0.5);", "sum += clamp(color * cKernel[ i ], vec4(0.0, 0.0, 0.0, 0.0), vec4(1000.0, 1000.0, 1000.0, 1000.0));", "imageCoord += uImageIncrement;", "}", "gl_FragColor = sum;", "}"].join("\n");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        three: 64
    }],
    39: [function(t, e, i) {
        "use strict";
        var n = t("three");
        i.curveVertex = ["#define PHONG", "uniform float curvatureX;", "uniform float curvatureZ;", "uniform vec3 relativePosition;", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "varying vec3 vNormal;", "#endif", "vec3 transformPosition(vec3 position) {", "vec4 newPosition = vec4(position, 1.0);", "vec3 offsetPosition = newPosition.xyz - relativePosition;", "float xCurvature = (offsetPosition.x * offsetPosition.x) * curvatureX;", "float zCurvature = (offsetPosition.z * offsetPosition.z) * curvatureZ;", "newPosition.y = newPosition.y - (xCurvature + zCurvature);", "newPosition.x = newPosition.x + offsetPosition.y * curvatureX * offsetPosition.x;", "newPosition.z = newPosition.z + offsetPosition.y * curvatureZ * offsetPosition.z;", "return newPosition.xyz;", "}", n.ShaderChunk.common, n.ShaderChunk.uv_pars_vertex, n.ShaderChunk.uv2_pars_vertex, n.ShaderChunk.displacementmap_pars_vertex, n.ShaderChunk.envmap_pars_vertex, n.ShaderChunk.color_pars_vertex, n.ShaderChunk.morphtarget_pars_vertex, n.ShaderChunk.skinning_pars_vertex, n.ShaderChunk.shadowmap_pars_vertex, n.ShaderChunk.logdepthbuf_pars_vertex, n.ShaderChunk.clipping_planes_pars_vertex, "void main() {", n.ShaderChunk.uv_vertex, n.ShaderChunk.uv2_vertex, n.ShaderChunk.color_vertex, n.ShaderChunk.beginnormal_vertex, n.ShaderChunk.morphnormal_vertex, n.ShaderChunk.skinbase_vertex, n.ShaderChunk.skinnormal_vertex, n.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "vNormal = normalize( transformedNormal );", "#endif", n.ShaderChunk.begin_vertex, n.ShaderChunk.displacementmap_vertex, n.ShaderChunk.morphtarget_vertex, n.ShaderChunk.skinning_vertex, n.ShaderChunk.project_vertex, n.ShaderChunk.logdepthbuf_vertex, n.ShaderChunk.clipping_planes_vertex, "vViewPosition = - mvPosition.xyz;", n.ShaderChunk.worldpos_vertex, n.ShaderChunk.envmap_vertex, n.ShaderChunk.shadowmap_vertex, "}"].join("\n")
    }, {
        three: 64
    }],
    40: [function(t, e, i) {
        "use strict";

        function n(t) {
            var e = new r.ShaderMaterial({
                uniforms: {
                    uColor: {
                        type: "c",
                        value: new r.Color(16777215)
                    },
                    texture: {
                        type: "t",
                        value: t.textures.fx_barglow
                    }
                },
                vertexShader: o,
                fragmentShader: a
            });
            return e.transparent = !0, e.blending = r.AdditiveBlending, e
        }
        var r = t("three"),
            o = ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\n"),
            a = ["varying vec2 vUv;", "uniform vec3 uColor;", "uniform sampler2D texture;", "void main() {", "gl_FragColor = vec4(uColor, 1.0) * texture2D(texture, vUv) * 1.5;", "}"].join("\n");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        three: 64
    }],
    41: [function(t, e, i) {
        "use strict";

        function n(t) {
            var e = new r.MeshBasicMaterial({
                color: 13430527,
                map: t.textures.glow,
                blending: r.AdditiveBlending,
                fog: !1,
                depthWrite: !1,
                transparent: !0,
                opacity: .22
            });
            return e
        }
        var r = t("three");
        i.createGlowMaterial = n, i.segmentScales = [.5, .6, .8, .9, 1, 1, 1, .9, .8, .7, .6, .5, .4, .3, .2, .1, .1, .1, .1, .1, .1]
    }, {
        three: 64
    }],
    42: [function(t, e, i) {
        "use strict";

        function n(t, e, i, n, a) {
            var s = new r.ShaderMaterial({
                    uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.bumpmap, r.UniformsLib.normalmap, r.UniformsLib.displacementmap, r.UniformsLib.fog, r.UniformsLib.lights, {
                        curvatureX: {
                            type: "f",
                            value: e
                        },
                        curvatureZ: {
                            type: "f",
                            value: i
                        },
                        relativePosition: {
                            type: "v3",
                            value: new r.Vector3
                        },
                        specular: {
                            value: new r.Color(0)
                        },
                        emissive: {
                            value: new r.Color(0)
                        },
                        shininess: {
                            value: 0
                        }
                    }]),
                    defines: {
                        USE_MAP: !0,
                        USE_NORMALMAP: !0,
                        NAME: "GroundMaterial"
                    },
                    vertexShader: o.curveVertex,
                    fragmentShader: r.ShaderChunk.meshphong_frag
                }),
                h = t.textures.ground,
                u = t.textures.groundNormal;
            return h.wrapS = r.RepeatWrapping, h.wrapT = r.RepeatWrapping, u.wrapS = r.RepeatWrapping, u.wrapT = r.RepeatWrapping, s.extensions.derivatives = !0,
                s.lights = !0, s.fog = !0, s.uniforms.diffuse.value.setRGB(1, 1, 1), s.uniforms.map.value = h, s.uniforms.normalMap.value = u, s.uniforms.normalScale.value.set(.75, .25), s.uniforms.specular.value.setHex(197379), t.textures.ground.repeat = n, a ? new r.MeshLambertMaterial({
                    map: t.textures.ground
                }) : new r.MeshPhongMaterial({
                    map: t.textures.ground,
                    normalMap: t.textures.groundNormal,
                    specular: 197379
                })
        }
        var r = t("three"),
            o = t("./curveshader");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        "./curveshader": 39,
        three: 64
    }],
    43: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = new r.ShaderMaterial({
                uniforms: {
                    texture: {
                        type: "t",
                        value: t
                    },
                    offset: {
                        type: "v2",
                        value: new r.Vector2(0, 0)
                    },
                    repeat: {
                        type: "v2",
                        value: new r.Vector2(1, 1)
                    },
                    color: {
                        type: "c",
                        value: new r.Color(e)
                    },
                    emissive: {
                        type: "c",
                        value: new r.Color(0, 0, 0)
                    },
                    progress: {
                        type: "f",
                        value: 1
                    }
                },
                vertexShader: a,
                fragmentShader: s
            });
            return i.offset = i.uniforms.offset.value, i.repeat = i.uniforms.repeat.value, i.color = i.uniforms.color.value, i.emissive = i.uniforms.emissive.value, i.transparent = !0, t.wrapS = r.MirroredRepeatWrapping, t.wrapT = r.MirroredRepeatWrapping, t.flipY = !0, i.setProgress = function(t) {
                i.uniforms.progress.value = t
            }, i
        }
        var r = t("three"),
            o = "\nvarying vec2 vUv;\nvarying vec2 vUv2;\nuniform vec2 offset;\nuniform vec2 repeat;\nuniform sampler2D texture;\nuniform vec3 color;\nuniform vec3 emissive;\nuniform float progress;\n",
            a = "\n" + o + "\n\nvoid main() {\n  vUv = uv;\n  vUv2 = uv * repeat + offset;\n  gl_Position = projectionMatrix *\n                modelViewMatrix *\n                vec4(position,1.0);\n}",
            s = "\n" + o + "\n\nvoid main(void) {\n  gl_FragColor = mix(texture2D(texture, vUv2) * vec4(color, 1.0) + vec4(emissive, 0.0),\n                     vec4(0.,0.,0.,0.),\n                     smoothstep(progress, progress + 0.015, vUv.x));\n\n//   gl_FragColor = vec4(\n//       vUv.x,\n//       progress,\n//       0.,\n//       1.\n//   );\n}\n";
        i.healthbarMaterial = n
    }, {
        three: 64
    }],
    44: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            var n = new r.ShaderMaterial({
                uniforms: r.UniformsUtils.merge([r.UniformsLib.fog, {
                    curvatureX: {
                        type: "f",
                        value: e
                    },
                    curvatureZ: {
                        type: "f",
                        value: i
                    },
                    relativePosition: {
                        type: "v3",
                        value: new r.Vector3
                    },
                    time: {
                        type: "f",
                        value: 0
                    },
                    offsetRepeat: {
                        type: "v4",
                        value: new r.Vector4(0, 0, 1, 1)
                    }
                }]),
                defines: {
                    USE_MAP: !0,
                    NAME: "MistMaterial"
                },
                vertexShader: r.ShaderChunk.meshphong_vert,
                fragmentShader: o
            });
            return n.fog = !1, n.transparent = !0, n.blending = r.AdditiveBlending, n.depthWrite = !1, n.alphaTest = .1, n
        }
        var r = t("three"),
            o = "\n    uniform float time;\n    varying vec2 vUv;\n    varying vec3 vViewPosition;\n\n    //\n    // Description : Array and textureless GLSL 2D simplex noise function.\n    //      Author : Ian McEwan, Ashima Arts.\n    //  Maintainer : stegu\n    //     Lastmod : 20110822 (ijm)\n    //     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n    //               Distributed under the MIT License. See LICENSE file.\n    //               https://github.com/ashima/webgl-noise\n    //               https://github.com/stegu/webgl-noise\n    //\n\n    vec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec2 mod289(vec2 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec3 permute(vec3 x) {\n    return mod289(((x*34.0)+1.0)*x);\n    }\n\n    float snoise(vec2 v)\n    {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    // First corner\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n\n    // Other corners\n    vec2 i1;\n    //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n    //i1.y = 1.0 - i1.x;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    // x0 = x0 - 0.0 + 0.0 * C.xx ;\n    // x1 = x0 - i1 + 1.0 * C.xx ;\n    // x2 = x0 - 1.0 + 2.0 * C.xx ;\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n\n    // Permutations\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n            + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n\n    // Gradients: 41 points uniformly over a line, mapped onto a diamond.\n    // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt( a0*a0 + h*h );\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    // Compute final noise value at P\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n    }\n\n    void main()\n    {\n        vec2 uv = vUv;\n\n        float twoXMinusOne = 2. * uv.x - 1.;\n        float squared = twoXMinusOne * twoXMinusOne;\n        float fac = smoothstep(squared + .8,\n                            squared,\n                            uv.y);\n\n        float noise1 = snoise(uv * vec2(3., 13.) + vec2(1., 0.05) * vViewPosition.z * 0.0007);\n        float noise2 = snoise(uv * vec2(.5, 7.) + vec2(1., 0.) * vViewPosition.z * 0.0027);\n        float gray = noise1 * 0.27 + noise2 * 0.35 + 0.3;\n\n        gl_FragColor = mix(vec4(gray * 0.8, gray * 0.9, gray, gray), vec4(0.,0.,0.,0.0), fac);\n        gl_FragColor.a *= max(0.0, (120. - vViewPosition.z) / 120.);\n    }\n";
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        three: 64
    }],
    45: [function(t, e, i) {
        "use strict";

        function n(t) {
            var e = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastHeadDiff,
                    bumpMap: t.textures.moonbeastHeadBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastHeadGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                i = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastHandDiff,
                    bumpMap: t.textures.moonbeastHandBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastHandGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                n = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastLegsDiff,
                    bumpMap: t.textures.moonbeastLegsBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastLegsGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                h = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastABLMNDiff,
                    bumpMap: t.textures.moonbeastABLMNBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastABLMNGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                u = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastCDEFGHIJKDiff,
                    bumpMap: t.textures.moonbeastCDEFGHIJKBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastCDEFGHIJKGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                c = new r.MeshPhongMaterial({
                    color: 16777215,
                    map: t.textures.moonbeastOPQRSTUVWDiff,
                    bumpMap: t.textures.moonbeastOPQRSTUVWBump,
                    bumpScale: o,
                    emissiveMap: t.textures.moonbeastOPQRSTUVWGlow,
                    emissive: a,
                    emissiveIntensity: s,
                    specular: 1118481,
                    shininess: 2,
                    fog: !1
                }),
                l = {};
            return l.headMaterial = e, l.handMaterial = i, l.legMaterial = n, l.ABLMNMaterial = h, l.CDEFGHIJKMaterial = u, l.OPQRSTUVWMaterial = c, l
        }
        var r = t("three"),
            o = .05,
            a = 5498615,
            s = .25;
        i.createMoonbeastMaterials = n
    }, {
        three: 64
    }],
    46: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = new r.ShaderMaterial({
                uniforms: r.UniformsUtils.merge([r.UniformsLib.points, r.UniformsLib.fog, {
                    diffuse: {
                        type: "c",
                        value: new r.Color(10061960)
                    },
                    multiplier: {
                        type: "f",
                        value: 1e4
                    },
                    range: {
                        type: "f",
                        value: 40
                    },
                    curvatureX: {
                        type: "f",
                        value: 0
                    },
                    curvatureZ: {
                        type: "f",
                        value: 0
                    },
                    size: {
                        value: 20
                    }
                }]),
                defines: {
                    USE_SIZEATTENUATION: !0
                },
                vertexShader: o,
                fragmentShader: a
            });
            return i.fog = !0, i.uniforms.relativePosition = {
                type: "v3",
                value: new r.Vector3
            }, i.uniforms.headPosition = {
                type: "v3",
                value: new r.Vector3
            }, i.extensions.derivatives = !0, i
        }
        var r = t("three"),
            o = ["uniform float size;", "uniform float scale;", "uniform vec3 headPosition;", "uniform float multiplier;", "uniform float range;", "uniform float curvatureX;", "uniform float curvatureZ;", "uniform vec3 relativePosition;", r.ShaderChunk.common, r.ShaderChunk.color_pars_vertex, r.ShaderChunk.shadowmap_pars_vertex, r.ShaderChunk.logdepthbuf_pars_vertex, r.ShaderChunk.clipping_planes_pars_vertex, "float sigmoid(float x) {", "float square = range * range;", "if (x > square) {", "return 0.0;", "}", "float cube = square * range;", "float term = square - x ;", "return multiplier * (315.0 / (64.0 * PI * cube * cube * cube)) * term * term * term;", "}", "vec3 transformPosition(vec3 position) {", "vec3 offsetPosition = position.xyz - relativePosition;", "float xCurvature = (offsetPosition.x * offsetPosition.x) * curvatureX;", "float zCurvature = (offsetPosition.z * offsetPosition.z) * curvatureZ;", "position.y = position.y - (xCurvature + zCurvature);", "position.x = position.x + offsetPosition.y * curvatureX * offsetPosition.x;", "position.z = position.z + offsetPosition.y * curvatureX * offsetPosition.z;", "return position.xyz;", "}", "void main() {", r.ShaderChunk.color_vertex, r.ShaderChunk.begin_vertex, r.ShaderChunk.project_vertex, "vec4 worldPosition = modelMatrix * vec4(position, 1.0);", "vec3 newPosition = worldPosition.xyz - headPosition;", "float distance = dot(newPosition, newPosition);", "newPosition = newPosition * sigmoid(distance);", "newPosition = newPosition + worldPosition.xyz;", "newPosition = transformPosition(newPosition);", "gl_Position = projectionMatrix * viewMatrix * vec4( newPosition, 1.0 );", "#ifdef USE_SIZEATTENUATION", "gl_PointSize = size * ( scale / - mvPosition.z );", "#else", "gl_PointSize = size;", "#endif", r.ShaderChunk.logdepthbuf_vertex, r.ShaderChunk.clipping_planes_vertex, r.ShaderChunk.worldpos_vertex, r.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            a = ["uniform vec3 diffuse;", "uniform float opacity;", r.ShaderChunk.common, r.ShaderChunk.color_pars_fragment, r.ShaderChunk.map_particle_pars_fragment, r.ShaderChunk.fog_pars_fragment, r.ShaderChunk.shadowmap_pars_fragment, r.ShaderChunk.logdepthbuf_pars_fragment, r.ShaderChunk.clipping_planes_pars_fragment, "void main() {", r.ShaderChunk.clipping_planes_fragment, "vec3 outgoingLight = vec3( 0.0 );", "vec4 diffuseColor = vec4(diffuse, opacity);", r.ShaderChunk.logdepthbuf_fragment, r.ShaderChunk.map_particle_fragment, r.ShaderChunk.color_fragment, r.ShaderChunk.alphatest_fragment, "outgoingLight = diffuseColor.rgb;", "gl_FragColor = vec4(outgoingLight, diffuseColor.a);", r.ShaderChunk.premultiplied_alpha_fragment, r.ShaderChunk.tonemapping_fragment, r.ShaderChunk.encodings_fragment, r.ShaderChunk.fog_fragment, "gl_FragColor.a = smoothstep(fogFar, opacity, depth);", "}"].join("\n");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        three: 64
    }],
    47: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = new r.ShaderMaterial({
                uniforms: {
                    textureOne: {
                        type: "t",
                        value: t.texture
                    },
                    textureTwo: {
                        type: "t",
                        value: e.texture
                    }
                },
                vertexShader: o,
                fragmentShader: a
            });
            return i
        }
        var r = t("three"),
            o = ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\n"),
            a = ["varying vec2 vUv;", "uniform sampler2D textureOne;", "uniform sampler2D textureTwo;", "void main() {", "vec3 color = vec3(0.0, 0.0, 0.0);", "color += texture2D(textureOne, vUv).rgb;", "color += texture2D(textureTwo, vUv).rgb * 0.6;", "gl_FragColor = vec4(color, 1.0);", "}"].join("\n");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        three: 64
    }],
    48: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            var n = new r.ShaderMaterial({
                uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.bumpmap, r.UniformsLib.normalmap, r.UniformsLib.displacementmap, r.UniformsLib.fog, r.UniformsLib.lights, {
                    diffuse: {
                        type: "c",
                        value: new r.Color(0)
                    },
                    shininess: {
                        type: "f",
                        value: 2
                    },
                    curvatureX: {
                        type: "f",
                        value: e
                    },
                    curvatureZ: {
                        type: "f",
                        value: i
                    },
                    relativePosition: {
                        type: "v3",
                        value: new r.Vector3
                    }
                }]),
                defines: {
                    NAME: "TreeMaterial"
                },
                vertexShader: o.curveVertex,
                fragmentShader: r.ShaderChunk.meshphong_frag
            });
            return n.extensions.derivatives = !0, n.lights = !0, n.fog = !0, new r.MeshLambertMaterial({
                color: 0
            })
        }
        var r = t("three"),
            o = t("./curveshader");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        "./curveshader": 39,
        three: 64
    }],
    49: [function(t, e, i) {
        "use strict";

        function n() {
            return new r.MeshPhongMaterial({
                color: 16768358,
                shininess: 20,
                specular: 16768358
            })
        }
        var r = t("three");
        i.tokenMaterial = n
    }, {
        three: 64
    }],
    50: [function(t, e, i) {
        "use strict";

        function n(t, e) {
            var i = new r.ShaderMaterial({
                uniforms: {
                    texture: {
                        type: "t",
                        value: t
                    },
                    offset: {
                        type: "v2",
                        value: new r.Vector2
                    },
                    repeat: {
                        type: "v2",
                        value: new r.Vector2
                    },
                    color: {
                        type: "c",
                        value: new r.Color(e)
                    },
                    emissive: {
                        type: "c",
                        value: new r.Color(0, 0, 0)
                    },
                    opacity: {
                        type: "f",
                        value: 1
                    }
                },
                vertexShader: a,
                fragmentShader: s
            });
            return i.offset = i.uniforms.offset.value, i.repeat = i.uniforms.repeat.value, i.color = i.uniforms.color.value, i.emissive = i.uniforms.emissive.value, i.transparent = !0, i
        }
        var r = t("three"),
            o = "\nvarying vec2 vUv;\nuniform vec2 offset;\nuniform vec2 repeat;\nuniform sampler2D texture;\nuniform vec3 color;\nuniform vec3 emissive;\nuniform float opacity;\n",
            a = "\n" + o + "\n\nvoid main() {\n  vUv = uv * repeat + offset;\n  gl_Position = projectionMatrix *\n                modelViewMatrix *\n                vec4(position,1.0);\n}",
            s = "\n" + o + "\n\nvoid main(void) {\n  gl_FragColor = texture2D(texture, vUv) * vec4(color, opacity) + vec4(emissive, 0.0);\n}\n";
        i.unlitSpriteShaderMaterial = n
    }, {
        three: 64
    }],
    51: [function(t, e, i) {
        "use strict";

        function n() {
            var t = new r.ShaderMaterial({
                uniforms: {
                    uColor: {
                        type: "c",
                        value: new r.Color(0)
                    }
                },
                vertexShader: o,
                fragmentShader: a
            });
            return t.transparent = !0, t
        }
        var r = t("three"),
            o = ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);", "}"].join("\n"),
            a = ["varying vec2 vUv;", "uniform vec3 uColor;", "void main() {", "gl_FragColor = vec4(uColor, vUv.y);", "}"].join("\n");
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {
        three: 64
    }],
    52: [function(t, e, i) {
        "use strict";

        function n(t, e, n) {
            var a = new r.ShaderMaterial({
                    uniforms: r.UniformsUtils.merge([r.UniformsLib.common, r.UniformsLib.aomap, r.UniformsLib.lightmap, r.UniformsLib.emissivemap, r.UniformsLib.bumpmap, r.UniformsLib.normalmap, r.UniformsLib.displacementmap, r.UniformsLib.fog, r.UniformsLib.lights, {
                        diffuse: {
                            type: "c",
                            value: new r.Color(16777215)
                        },
                        specular: {
                            type: "c",
                            value: new r.Color(0)
                        },
                        curvatureX: {
                            type: "f",
                            value: e
                        },
                        curvatureZ: {
                            type: "f",
                            value: n
                        },
                        relativePosition: {
                            type: "v3",
                            value: new r.Vector3
                        }
                    }]),
                    defines: {
                        USE_MAP: !0,
                        NAME: "VillageMaterial"
                    },
                    vertexShader: o.curveVertex,
                    fragmentShader: r.ShaderChunk.meshphong_frag
                }),
                s = t.textures.village;
            s.wrapS = r.RepeatWrapping, s.wrapT = r.RepeatWrapping, a.extensions.derivatives = !0, a.lights = !0, a.fog = !0, a.side = r.DoubleSide, a.uniforms.map = {
                type: "t",
                value: s
            }, i.villageMaterial = new r.MeshLambertMaterial({
                map: t.textures.village,
                side: r.DoubleSide
            })
        }
        var r = t("three"),
            o = t("./curveshader");
        i.createVillageMaterial = n
    }, {
        "./curveshader": 39,
        three: 64
    }],
    53: [function(t, e, i) {
        "use strict";
        location.search.match(/debug=1/i) ? i._console = window.console : (i._console = {}, i._console.log = i._console.info = i._console.warn = i._console.error = i._console.debug = function() {})
    }, {}],
    54: [function(t, e, i) {
        "use strict";
        var n = function() {
            function t() {
                var t = this;
                this.promise = new Promise(function(e, i) {
                    t.resolve = e, t.reject = i
                }), this.then = this.promise.then.bind(this.promise)
            }
            return t
        }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {}],
    55: [function(t, e, i) {
        "use strict";

        function n(t) {
            for (var e = t.split("."), i = document.createElement(e[0]), n = 1; n < e.length; n++) a(i, e[n]);
            return i
        }

        function r(t) {
            return document.getElementById(t)
        }

        function o(t) {
            return document.getElementsByClassName(t)
        }

        function a(t, e) {
            return t.classList ? void t.classList.add(e) : void(t.className.match(e) || (t.className += " " + e))
        }

        function s(t, e) {
            if (t.classList) return void t.classList.remove(e);
            var i = new RegExp("(^|\\s)" + e + "($|\\s)");
            t.className.match(i) && (t.className = t.className.replace(i, " "))
        }

        function h(t) {
            return t && t.parentNode ? (t.parentNode.removeChild(t), !0) : !1
        }

        function u(t, e) {
            return void 0 == e ? t.textContent || t.innerText : void(void 0 !== t.textContent ? t.textContent = e : t.innerText = e)
        }

        function c(t) {
            return [].slice.call(t)
        }

        function l(t, e) {
            if (e.length && t) {
                var i = e.shift();
                requestAnimationFrame(function() {
                    a(t, i), l(t, e)
                })
            }
        }
        i.el = n, i.byId = r, i.byClassName = o, i.addClass = a, i.removeClass = s, i.remove = h, i.text = u, i.toarray = c, i.tickClasses = l
    }, {}],
    56: [function(t, e, i) {
        "use strict";

        function n(t) {
            return new Promise(function(e, i) {
                p.load(t, e, function() {}, i)
            })
        }

        function r(t) {
            return new Promise(function(e, i) {
                d.load(t, e, function() {}, i)
            })
        }

        function o(t) {
            return new Promise(function(e, i) {
                var n = new Image;
                n.onload = function(t) {
                    e(n)
                }, n.onerror = i, n.src = t
            })
        }

        function a(t, e) {
            return l["default"].getInstance().load(t, e)
        }

        function s(t, e) {
            function i(t, i, n) {
                return h.mapValues(t, function(r, o) {
                    p.total += 1;
                    var a = n(r, o);
                    return a = a.then(function(i) {
                        return t[o] = i, p.current += 1, e(p), i
                    }), i.push(a), t[o] = a, a
                })
            }
            var s = [],
                u = [],
                c = [],
                l = [],
                p = {
                    total: 0,
                    current: 0
                };
            return i(t.objs, s, n), i(t.textures, u, r), i(t.images, c, o), i(t.sounds, l, a), Promise.all(s.concat(u, c, s, l))
        }
        var h = t("lodash"),
            u = t("three"),
            c = t("../lib/OBJLoader");
        c.OBJLoader(u);
        var l = t("../components/mixer"),
            p = new u.OBJLoader;
        i.loadObj = n;
        var d = new u.TextureLoader;
        i.loadTexture = r, i.loadImage = o, i.loadSound = a, i.loadAll = s
    }, {
        "../components/mixer": 5,
        "../lib/OBJLoader": 34,
        lodash: 62,
        three: 64
    }],
    57: [function(t, e, i) {
        "use strict";
        var n = function() {
            function t(t) {
                this.array = t, this.currentIndex = 0
            }
            return t.prototype.get = function() {
                return this.array[this.currentIndex]
            }, t.prototype.set = function(t) {
                this.array[this.currentIndex] = t
            }, t.prototype.advance = function() {
                this.currentIndex += 1, this.currentIndex >= this.array.length && (this.currentIndex = 0)
            }, t.prototype.getNext = function() {
                return this.advance(), this.get()
            }, t.prototype.raw = function() {
                return this.array
            }, t.prototype.getNextN = function(t) {
                for (var e = new Array(t), i = 0; t > i; i++) e[i] = this.getNext();
                return e
            }, t
        }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = n
    }, {}],
    58: [function(t, e, i) {
        "use strict";

        function n(t) {
            var e = new r.Object3D,
                i = new r.PlaneGeometry(1, 1);
            return o.forEach(t, function(t, n) {
                var o = new r.Mesh(i, new r.MeshBasicMaterial({
                    map: t
                }));
                o.position.x = n, o.name = "textureUpload_" + t.image.src, e.add(o)
            }), e
        }
        var r = t("three"),
            o = t("lodash");
        i.textureUploadObject = n
    }, {
        lodash: 62,
        three: 64
    }],
    59: [function(t, e, i) {
        "use strict";
        var n = t("../lib/bezier-easing"),
            r = function() {
                function t(t) {
                    this.elapsed = 0, this.currentProgress = 0, this.complete = !1, this.duration = t.duration, this.startValue = t.start, this.endValue = t.end, this.onProgress = t.onProgress, this.onComplete = t.onComplete, this.bezier = n["default"].apply(null, t.points), this.currentValue = this.startValue
                }
                return t.prototype.reset = function(t, e) {
                    this.elapsed = 0, this.startValue = t, this.endValue = e, this.complete = !1, this.currentProgress = 0, this.currentValue = this.startValue
                }, t.prototype.update = function(t, e) {
                    this.complete || (this.elapsed += t, this.currentProgress = Math.max(0, Math.min(this.bezier(this.elapsed / this.duration), 1)), this.currentValue = (this.endValue - this.startValue) * this.currentProgress + this.startValue, this.onProgress && this.onProgress(this.currentValue), this.elapsed >= this.duration && (this.complete = !0, this.onComplete && this.onComplete(this.currentValue)))
                }, t.prototype.getProgress = function() {
                    return this.currentProgress
                }, t.prototype.getValue = function() {
                    return this.currentValue
                }, t
            }();
        Object.defineProperty(i, "__esModule", {
            value: !0
        }), i["default"] = r
    }, {
        "../lib/bezier-easing": 35
    }],
    60: [function(t, e, i) {
        "use strict";

        function n(t, e, i) {
            return (1 - i) * t + i * e
        }

        function r(t, e) {
            return Math.random() * (e - t + 1) + t
        }

        function o(t, e, i, n) {
            return Math.random() > .5 ? r(t, e) : r(i, n)
        }

        function a(t) {
            var e = 0,
                i = 0,
                n = null;
            for (e = t.length - 1; e > 0; e--) i = Math.floor(Math.random() * (e + 1)), n = t[e], t[e] = t[i], t[i] = n
        }

        function s(t, e, i) {
            return Math.min(i, Math.max(e, t))
        }

        function h(t) {
            for (var e = new Array(t.length), i = 0; i < t.length; i++) e[i] = (new u.Vector3).copy(t[i]);
            return e
        }
        var u = t("three");
        i.lerp = n, i.getRandomRange = r, i.getRandomDoubleRange = o, i.shuffleArray = a, i.clamp = s, i.copyVector3Array = h;
        var c = function() {
            function t(t, e, i) {
                this.stiffness = t, this.damping = e, this.mass = i
            }
            return t.prototype.findAcceleration = function(t, e, i) {
                var n = this.stiffness * e - this.damping * i,
                    r = n / this.mass;
                return r
            }, t
        }();
        i.Spring1 = c
    }, {
        three: 64
    }],
    61: [function(t, e, i) {
        (function(i, n) {
            (function() {
                "use strict";

                function r(t) {
                    return "function" == typeof t || "object" == typeof t && null !== t
                }

                function o(t) {
                    return "function" == typeof t
                }

                function a(t) {
                    Y = t
                }

                function s(t) {
                    Q = t
                }

                function h() {
                    return function() {
                        i.nextTick(d)
                    }
                }

                function u() {
                    return function() {
                        q(d)
                    }
                }

                function c() {
                    var t = 0,
                        e = new et(d),
                        i = document.createTextNode("");
                    return e.observe(i, {
                            characterData: !0
                        }),
                        function() {
                            i.data = t = ++t % 2
                        }
                }

                function l() {
                    var t = new MessageChannel;
                    return t.port1.onmessage = d,
                        function() {
                            t.port2.postMessage(0)
                        }
                }

                function p() {
                    return function() {
                        setTimeout(d, 1)
                    }
                }

                function d() {
                    for (var t = 0; J > t; t += 2) {
                        var e = rt[t],
                            i = rt[t + 1];
                        e(i), rt[t] = void 0, rt[t + 1] = void 0
                    }
                    J = 0
                }

                function f() {
                    try {
                        var e = t,
                            i = e("vertx");
                        return q = i.runOnLoop || i.runOnContext, u()
                    } catch (n) {
                        return p()
                    }
                }

                function m(t, e) {
                    var i = this,
                        n = new this.constructor(v);
                    void 0 === n[st] && O(n);
                    var r = i._state;
                    if (r) {
                        var o = arguments[r - 1];
                        Q(function() {
                            I(r, n, o, i._result)
                        })
                    } else P(i, n, t, e);
                    return n
                }

                function g(t) {
                    var e = this;
                    if (t && "object" == typeof t && t.constructor === e) return t;
                    var i = new e(v);
                    return T(i, t), i
                }

                function v() {}

                function y() {
                    return new TypeError("You cannot resolve a promise with itself")
                }

                function _() {
                    return new TypeError("A promises callback cannot return that same promise.")
                }

                function b(t) {
                    try {
                        return t.then
                    } catch (e) {
                        return lt.error = e, lt
                    }
                }

                function x(t, e, i, n) {
                    try {
                        t.call(e, i, n)
                    } catch (r) {
                        return r
                    }
                }

                function w(t, e, i) {
                    Q(function(t) {
                        var n = !1,
                            r = x(i, e, function(i) {
                                n || (n = !0, e !== i ? T(t, i) : E(t, i))
                            }, function(e) {
                                n || (n = !0, C(t, e))
                            }, "Settle: " + (t._label || " unknown promise"));
                        !n && r && (n = !0, C(t, r))
                    }, t)
                }

                function M(t, e) {
                    e._state === ut ? E(t, e._result) : e._state === ct ? C(t, e._result) : P(e, void 0, function(e) {
                        T(t, e)
                    }, function(e) {
                        C(t, e)
                    })
                }

                function S(t, e, i) {
                    e.constructor === t.constructor && i === ot && constructor.resolve === at ? M(t, e) : i === lt ? C(t, lt.error) : void 0 === i ? E(t, e) : o(i) ? w(t, e, i) : E(t, e)
                }

                function T(t, e) {
                    t === e ? C(t, y()) : r(e) ? S(t, e, b(e)) : E(t, e)
                }

                function A(t) {
                    t._onerror && t._onerror(t._result), L(t)
                }

                function E(t, e) {
                    t._state === ht && (t._result = e, t._state = ut, 0 !== t._subscribers.length && Q(L, t))
                }

                function C(t, e) {
                    t._state === ht && (t._state = ct, t._result = e, Q(A, t))
                }

                function P(t, e, i, n) {
                    var r = t._subscribers,
                        o = r.length;
                    t._onerror = null, r[o] = e, r[o + ut] = i, r[o + ct] = n, 0 === o && t._state && Q(L, t)
                }

                function L(t) {
                    var e = t._subscribers,
                        i = t._state;
                    if (0 !== e.length) {
                        for (var n, r, o = t._result, a = 0; a < e.length; a += 3) n = e[a], r = e[a + i], n ? I(i, n, r, o) : r(o);
                        t._subscribers.length = 0
                    }
                }

                function R() {
                    this.error = null
                }

                function k(t, e) {
                    try {
                        return t(e)
                    } catch (i) {
                        return pt.error = i, pt
                    }
                }

                function I(t, e, i, n) {
                    var r, a, s, h, u = o(i);
                    if (u) {
                        if (r = k(i, n), r === pt ? (h = !0, a = r.error, r = null) : s = !0, e === r) return void C(e, _())
                    } else r = n, s = !0;
                    e._state !== ht || (u && s ? T(e, r) : h ? C(e, a) : t === ut ? E(e, r) : t === ct && C(e, r))
                }

                function D(t, e) {
                    try {
                        e(function(e) {
                            T(t, e)
                        }, function(e) {
                            C(t, e)
                        })
                    } catch (i) {
                        C(t, i)
                    }
                }

                function B() {
                    return dt++
                }

                function O(t) {
                    t[st] = dt++, t._state = void 0, t._result = void 0, t._subscribers = []
                }

                function j(t) {
                    return new yt(this, t).promise
                }

                function U(t) {
                    var e = this;
                    return new e(K(t) ? function(i, n) {
                        for (var r = t.length, o = 0; r > o; o++) e.resolve(t[o]).then(i, n)
                    } : function(t, e) {
                        e(new TypeError("You must pass an array to race."))
                    })
                }

                function N(t) {
                    var e = this,
                        i = new e(v);
                    return C(i, t), i
                }

                function F() {
                    throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                }

                function V() {
                    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                }

                function G(t) {
                    this[st] = B(), this._result = this._state = void 0, this._subscribers = [], v !== t && ("function" != typeof t && F(), this instanceof G ? D(this, t) : V())
                }

                function z(t, e) {
                    this._instanceConstructor = t, this.promise = new t(v), this.promise[st] || O(this.promise), K(e) ? (this._input = e, this.length = e.length, this._remaining = e.length, this._result = new Array(this.length), 0 === this.length ? E(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && E(this.promise, this._result))) : C(this.promise, H())
                }

                function H() {
                    return new Error("Array Methods must be provided an Array")
                }

                function W() {
                    var t;
                    if ("undefined" != typeof n) t = n;
                    else if ("undefined" != typeof self) t = self;
                    else try {
                        t = Function("return this")()
                    } catch (e) {
                        throw new Error("polyfill failed because global object is unavailable in this environment")
                    }
                    var i = t.Promise;
                    i && "[object Promise]" === Object.prototype.toString.call(i.resolve()) && !i.cast || (t.Promise = vt)
                }
                var X;
                X = Array.isArray ? Array.isArray : function(t) {
                    return "[object Array]" === Object.prototype.toString.call(t)
                };
                var q, Y, Z, K = X,
                    J = 0,
                    Q = function(t, e) {
                        rt[J] = t, rt[J + 1] = e, J += 2, 2 === J && (Y ? Y(d) : Z())
                    },
                    $ = "undefined" != typeof window ? window : void 0,
                    tt = $ || {},
                    et = tt.MutationObserver || tt.WebKitMutationObserver,
                    it = "undefined" == typeof self && "undefined" != typeof i && "[object process]" === {}.toString.call(i),
                    nt = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
                    rt = new Array(1e3);
                Z = it ? h() : et ? c() : nt ? l() : void 0 === $ && "function" == typeof t ? f() : p();
                var ot = m,
                    at = g,
                    st = Math.random().toString(36).substring(16),
                    ht = void 0,
                    ut = 1,
                    ct = 2,
                    lt = new R,
                    pt = new R,
                    dt = 0,
                    ft = j,
                    mt = U,
                    gt = N,
                    vt = G;
                G.all = ft, G.race = mt, G.resolve = at, G.reject = gt, G._setScheduler = a, G._setAsap = s, G._asap = Q, G.prototype = {
                    constructor: G,
                    then: ot,
                    "catch": function(t) {
                        return this.then(null, t)
                    }
                };
                var yt = z;
                z.prototype._enumerate = function() {
                    for (var t = this.length, e = this._input, i = 0; this._state === ht && t > i; i++) this._eachEntry(e[i], i)
                }, z.prototype._eachEntry = function(t, e) {
                    var i = this._instanceConstructor,
                        n = i.resolve;
                    if (n === at) {
                        var r = b(t);
                        if (r === ot && t._state !== ht) this._settledAt(t._state, e, t._result);
                        else if ("function" != typeof r) this._remaining--, this._result[e] = t;
                        else if (i === vt) {
                            var o = new i(v);
                            S(o, t, r), this._willSettleAt(o, e)
                        } else this._willSettleAt(new i(function(e) {
                            e(t)
                        }), e)
                    } else this._willSettleAt(n(t), e)
                }, z.prototype._settledAt = function(t, e, i) {
                    var n = this.promise;
                    n._state === ht && (this._remaining--, t === ct ? C(n, i) : this._result[e] = i), 0 === this._remaining && E(n, this._result)
                }, z.prototype._willSettleAt = function(t, e) {
                    var i = this;
                    P(t, void 0, function(t) {
                        i._settledAt(ut, e, t)
                    }, function(t) {
                        i._settledAt(ct, e, t)
                    })
                };
                var _t = W,
                    bt = {
                        Promise: vt,
                        polyfill: _t
                    };
                "function" == typeof define && define.amd ? define(function() {
                    return bt
                }) : "undefined" != typeof e && e.exports ? e.exports = bt : "undefined" != typeof this && (this.ES6Promise = bt), _t()
            }).call(this)
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {
        _process: 63
    }],
    62: [function(t, e, i) {
        (function(t) {
            (function() {
                function n(t, e) {
                    return t.set(e[0], e[1]), t
                }

                function r(t, e) {
                    return t.add(e), t
                }

                function o(t, e, i) {
                    var n = i.length;
                    switch (n) {
                        case 0:
                            return t.call(e);
                        case 1:
                            return t.call(e, i[0]);
                        case 2:
                            return t.call(e, i[0], i[1]);
                        case 3:
                            return t.call(e, i[0], i[1], i[2])
                    }
                    return t.apply(e, i)
                }

                function a(t, e, i, n) {
                    for (var r = -1, o = t ? t.length : 0; ++r < o;) {
                        var a = t[r];
                        e(n, a, i(a), t)
                    }
                    return n
                }

                function s(t, e) {
                    for (var i = -1, n = t ? t.length : 0; ++i < n && e(t[i], i, t) !== !1;);
                    return t
                }

                function h(t, e) {
                    for (var i = t ? t.length : 0; i-- && e(t[i], i, t) !== !1;);
                    return t
                }

                function u(t, e) {
                    for (var i = -1, n = t ? t.length : 0; ++i < n;)
                        if (!e(t[i], i, t)) return !1;
                    return !0
                }

                function c(t, e) {
                    for (var i = -1, n = t ? t.length : 0, r = 0, o = []; ++i < n;) {
                        var a = t[i];
                        e(a, i, t) && (o[r++] = a)
                    }
                    return o
                }

                function l(t, e) {
                    var i = t ? t.length : 0;
                    return !!i && b(t, e, 0) > -1
                }

                function p(t, e, i) {
                    for (var n = -1, r = t ? t.length : 0; ++n < r;)
                        if (i(e, t[n])) return !0;
                    return !1
                }

                function d(t, e) {
                    for (var i = -1, n = t ? t.length : 0, r = Array(n); ++i < n;) r[i] = e(t[i], i, t);
                    return r
                }

                function f(t, e) {
                    for (var i = -1, n = e.length, r = t.length; ++i < n;) t[r + i] = e[i];
                    return t
                }

                function m(t, e, i, n) {
                    var r = -1,
                        o = t ? t.length : 0;
                    for (n && o && (i = t[++r]); ++r < o;) i = e(i, t[r], r, t);
                    return i
                }

                function g(t, e, i, n) {
                    var r = t ? t.length : 0;
                    for (n && r && (i = t[--r]); r--;) i = e(i, t[r], r, t);
                    return i
                }

                function v(t, e) {
                    for (var i = -1, n = t ? t.length : 0; ++i < n;)
                        if (e(t[i], i, t)) return !0;
                    return !1
                }

                function y(t, e, i) {
                    var n;
                    return i(t, function(t, i, r) {
                        return e(t, i, r) ? (n = i, !1) : void 0
                    }), n
                }

                function _(t, e, i, n) {
                    for (var r = t.length, o = i + (n ? 1 : -1); n ? o-- : ++o < r;)
                        if (e(t[o], o, t)) return o;
                    return -1
                }

                function b(t, e, i) {
                    if (e !== e) return N(t, i);
                    for (var n = i - 1, r = t.length; ++n < r;)
                        if (t[n] === e) return n;
                    return -1
                }

                function x(t, e, i, n) {
                    for (var r = i - 1, o = t.length; ++r < o;)
                        if (n(t[r], e)) return r;
                    return -1
                }

                function w(t, e) {
                    var i = t ? t.length : 0;
                    return i ? T(t, e) / i : St
                }

                function M(t, e, i, n, r) {
                    return r(t, function(t, r, o) {
                        i = n ? (n = !1, t) : e(i, t, r, o)
                    }), i
                }

                function S(t, e) {
                    var i = t.length;
                    for (t.sort(e); i--;) t[i] = t[i].value;
                    return t
                }

                function T(t, e) {
                    for (var i, n = -1, r = t.length; ++n < r;) {
                        var o = e(t[n]);
                        o !== K && (i = i === K ? o : i + o)
                    }
                    return i
                }

                function A(t, e) {
                    for (var i = -1, n = Array(t); ++i < t;) n[i] = e(i);
                    return n
                }

                function E(t, e) {
                    return d(e, function(e) {
                        return [e, t[e]]
                    })
                }

                function C(t) {
                    return function(e) {
                        return t(e)
                    }
                }

                function P(t, e) {
                    return d(e, function(e) {
                        return t[e]
                    })
                }

                function L(t, e) {
                    return t.has(e)
                }

                function R(t, e) {
                    for (var i = -1, n = t.length; ++i < n && b(e, t[i], 0) > -1;);
                    return i
                }

                function k(t, e) {
                    for (var i = t.length; i-- && b(e, t[i], 0) > -1;);
                    return i
                }

                function I(t) {
                    return t && t.Object === Object ? t : null
                }

                function D(t, e) {
                    for (var i = t.length, n = 0; i--;) t[i] === e && n++;
                    return n
                }

                function B(t) {
                    return Ai[t]
                }

                function O(t) {
                    return Ei[t]
                }

                function j(t) {
                    return "\\" + Pi[t]
                }

                function U(t, e) {
                    return null == t ? K : t[e]
                }

                function N(t, e, i) {
                    for (var n = t.length, r = e + (i ? 1 : -1); i ? r-- : ++r < n;) {
                        var o = t[r];
                        if (o !== o) return r
                    }
                    return -1
                }

                function F(t) {
                    var e = !1;
                    if (null != t && "function" != typeof t.toString) try {
                        e = !!(t + "")
                    } catch (i) {}
                    return e
                }

                function V(t) {
                    for (var e, i = []; !(e = t.next()).done;) i.push(e.value);
                    return i
                }

                function G(t) {
                    var e = -1,
                        i = Array(t.size);
                    return t.forEach(function(t, n) {
                        i[++e] = [n, t]
                    }), i
                }

                function z(t, e) {
                    for (var i = -1, n = t.length, r = 0, o = []; ++i < n;) {
                        var a = t[i];
                        a !== e && a !== et || (t[i] = et, o[r++] = i)
                    }
                    return o
                }

                function H(t) {
                    var e = -1,
                        i = Array(t.size);
                    return t.forEach(function(t) {
                        i[++e] = t
                    }), i
                }

                function W(t) {
                    var e = -1,
                        i = Array(t.size);
                    return t.forEach(function(t) {
                        i[++e] = [t, t]
                    }), i
                }

                function X(t) {
                    if (!t || !bi.test(t)) return t.length;
                    for (var e = yi.lastIndex = 0; yi.test(t);) e++;
                    return e
                }

                function q(t) {
                    return t.match(yi)
                }

                function Y(t) {
                    return Ci[t]
                }

                function Z(t) {
                    function e(t) {
                        if (ys(t) && !gl(t) && !(t instanceof Ie)) {
                            if (t instanceof I) return t;
                            if (Pu.call(t, "__wrapped__")) return lo(t)
                        }
                        return new I(t)
                    }

                    function i() {}

                    function I(t, e) {
                        this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = K
                    }

                    function Ie(t) {
                        this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Tt, this.__views__ = []
                    }

                    function De() {
                        var t = new Ie(this.__wrapped__);
                        return t.__actions__ = ir(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = ir(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = ir(this.__views__), t
                    }

                    function Be() {
                        if (this.__filtered__) {
                            var t = new Ie(this);
                            t.__dir__ = -1, t.__filtered__ = !0
                        } else t = this.clone(), t.__dir__ *= -1;
                        return t
                    }

                    function Oe() {
                        var t = this.__wrapped__.value(),
                            e = this.__dir__,
                            i = gl(t),
                            n = 0 > e,
                            r = i ? t.length : 0,
                            o = Gr(0, r, this.__views__),
                            a = o.start,
                            s = o.end,
                            h = s - a,
                            u = n ? s : a - 1,
                            c = this.__iteratees__,
                            l = c.length,
                            p = 0,
                            d = $u(h, this.__takeCount__);
                        if (!i || Q > r || r == h && d == h) return jn(t, this.__actions__);
                        var f = [];
                        t: for (; h-- && d > p;) {
                            u += e;
                            for (var m = -1, g = t[u]; ++m < l;) {
                                var v = c[m],
                                    y = v.iteratee,
                                    _ = v.type,
                                    b = y(g);
                                if (_ == _t) g = b;
                                else if (!b) {
                                    if (_ == yt) continue t;
                                    break t
                                }
                            }
                            f[p++] = g
                        }
                        return f
                    }

                    function je(t) {
                        var e = -1,
                            i = t ? t.length : 0;
                        for (this.clear(); ++e < i;) {
                            var n = t[e];
                            this.set(n[0], n[1])
                        }
                    }

                    function Ue() {
                        this.__data__ = cc ? cc(null) : {}
                    }

                    function Ne(t) {
                        return this.has(t) && delete this.__data__[t]
                    }

                    function Fe(t) {
                        var e = this.__data__;
                        if (cc) {
                            var i = e[t];
                            return i === tt ? K : i
                        }
                        return Pu.call(e, t) ? e[t] : K
                    }

                    function Ve(t) {
                        var e = this.__data__;
                        return cc ? e[t] !== K : Pu.call(e, t)
                    }

                    function Ge(t, e) {
                        var i = this.__data__;
                        return i[t] = cc && e === K ? tt : e, this
                    }

                    function ze(t) {
                        var e = -1,
                            i = t ? t.length : 0;
                        for (this.clear(); ++e < i;) {
                            var n = t[e];
                            this.set(n[0], n[1])
                        }
                    }

                    function He() {
                        this.__data__ = []
                    }

                    function We(t) {
                        var e = this.__data__,
                            i = di(e, t);
                        if (0 > i) return !1;
                        var n = e.length - 1;
                        return i == n ? e.pop() : Hu.call(e, i, 1), !0
                    }

                    function Xe(t) {
                        var e = this.__data__,
                            i = di(e, t);
                        return 0 > i ? K : e[i][1]
                    }

                    function qe(t) {
                        return di(this.__data__, t) > -1
                    }

                    function Ye(t, e) {
                        var i = this.__data__,
                            n = di(i, t);
                        return 0 > n ? i.push([t, e]) : i[n][1] = e, this
                    }

                    function Ze(t) {
                        var e = -1,
                            i = t ? t.length : 0;
                        for (this.clear(); ++e < i;) {
                            var n = t[e];
                            this.set(n[0], n[1])
                        }
                    }

                    function Ke() {
                        this.__data__ = {
                            hash: new je,
                            map: new(ac || ze),
                            string: new je
                        }
                    }

                    function Je(t) {
                        return Or(this, t)["delete"](t)
                    }

                    function Qe(t) {
                        return Or(this, t).get(t)
                    }

                    function $e(t) {
                        return Or(this, t).has(t)
                    }

                    function ti(t, e) {
                        return Or(this, t).set(t, e), this
                    }

                    function ei(t) {
                        var e = -1,
                            i = t ? t.length : 0;
                        for (this.__data__ = new Ze; ++e < i;) this.add(t[e])
                    }

                    function ii(t) {
                        return this.__data__.set(t, tt), this
                    }

                    function ni(t) {
                        return this.__data__.has(t)
                    }

                    function ri(t) {
                        this.__data__ = new ze(t)
                    }

                    function oi() {
                        this.__data__ = new ze
                    }

                    function ai(t) {
                        return this.__data__["delete"](t)
                    }

                    function si(t) {
                        return this.__data__.get(t)
                    }

                    function hi(t) {
                        return this.__data__.has(t)
                    }

                    function ui(t, e) {
                        var i = this.__data__;
                        return i instanceof ze && i.__data__.length == Q && (i = this.__data__ = new Ze(i.__data__)), i.set(t, e), this
                    }

                    function ci(t, e, i, n) {
                        return t === K || es(t, Su[i]) && !Pu.call(n, i) ? e : t
                    }

                    function li(t, e, i) {
                        (i === K || es(t[e], i)) && ("number" != typeof e || i !== K || e in t) || (t[e] = i)
                    }

                    function pi(t, e, i) {
                        var n = t[e];
                        Pu.call(t, e) && es(n, i) && (i !== K || e in t) || (t[e] = i)
                    }

                    function di(t, e) {
                        for (var i = t.length; i--;)
                            if (es(t[i][0], e)) return i;
                        return -1
                    }

                    function fi(t, e, i, n) {
                        return wc(t, function(t, r, o) {
                            e(n, t, i(t), o)
                        }), n
                    }

                    function mi(t, e) {
                        return t && nr(e, nh(e), t)
                    }

                    function yi(t, e) {
                        for (var i = -1, n = null == t, r = e.length, o = Array(r); ++i < r;) o[i] = n ? K : th(t, e[i]);
                        return o
                    }

                    function Ai(t, e, i) {
                        return t === t && (i !== K && (t = i >= t ? t : i), e !== K && (t = t >= e ? t : e)), t
                    }

                    function Ei(t, e, i, n, r, o, a) {
                        var h;
                        if (n && (h = o ? n(t, r, o, a) : n(t)), h !== K) return h;
                        if (!vs(t)) return t;
                        var u = gl(t);
                        if (u) {
                            if (h = Hr(t), !e) return ir(t, h)
                        } else {
                            var c = Vr(t),
                                l = c == It || c == Dt;
                            if (vl(t)) return Hn(t, e);
                            if (c == jt || c == Ct || l && !o) {
                                if (F(t)) return o ? t : {};
                                if (h = Wr(l ? {} : t), !e) return rr(t, mi(h, t))
                            } else {
                                if (!Ti[c]) return o ? t : {};
                                h = Xr(t, c, Ei, e)
                            }
                        }
                        a || (a = new ri);
                        var p = a.get(t);
                        if (p) return p;
                        if (a.set(t, h), !u) var d = i ? Rr(t) : nh(t);
                        return s(d || t, function(r, o) {
                            d && (o = r, r = t[o]), pi(h, o, Ei(r, e, i, n, o, t, a))
                        }), h
                    }

                    function Ci(t) {
                        var e = nh(t),
                            i = e.length;
                        return function(n) {
                            if (null == n) return !i;
                            for (var r = i; r--;) {
                                var o = e[r],
                                    a = t[o],
                                    s = n[o];
                                if (s === K && !(o in Object(n)) || !a(s)) return !1
                            }
                            return !0
                        }
                    }

                    function Pi(t) {
                        return vs(t) ? Gu(t) : {}
                    }

                    function ki(t, e, i) {
                        if ("function" != typeof t) throw new wu($);
                        return Wu(function() {
                            t.apply(K, i)
                        }, e)
                    }

                    function Ii(t, e, i, n) {
                        var r = -1,
                            o = l,
                            a = !0,
                            s = t.length,
                            h = [],
                            u = e.length;
                        if (!s) return h;
                        i && (e = d(e, C(i))), n ? (o = p, a = !1) : e.length >= Q && (o = L, a = !1, e = new ei(e));
                        t: for (; ++r < s;) {
                            var c = t[r],
                                f = i ? i(c) : c;
                            if (c = n || 0 !== c ? c : 0, a && f === f) {
                                for (var m = u; m--;)
                                    if (e[m] === f) continue t;
                                h.push(c)
                            } else o(e, f, n) || h.push(c)
                        }
                        return h
                    }

                    function Bi(t, e) {
                        var i = !0;
                        return wc(t, function(t, n, r) {
                            return i = !!e(t, n, r)
                        }), i
                    }

                    function Oi(t, e, i) {
                        for (var n = -1, r = t.length; ++n < r;) {
                            var o = t[n],
                                a = e(o);
                            if (null != a && (s === K ? a === a && !ks(a) : i(a, s))) var s = a,
                                h = o
                        }
                        return h
                    }

                    function ji(t, e, i, n) {
                        var r = t.length;
                        for (i = Ns(i), 0 > i && (i = -i > r ? 0 : r + i), n = n === K || n > r ? r : Ns(n), 0 > n && (n += r), n = i > n ? 0 : Fs(n); n > i;) t[i++] = e;
                        return t
                    }

                    function Fi(t, e) {
                        var i = [];
                        return wc(t, function(t, n, r) {
                            e(t, n, r) && i.push(t)
                        }), i
                    }

                    function Vi(t, e, i, n, r) {
                        var o = -1,
                            a = t.length;
                        for (i || (i = Yr), r || (r = []); ++o < a;) {
                            var s = t[o];
                            e > 0 && i(s) ? e > 1 ? Vi(s, e - 1, i, n, r) : f(r, s) : n || (r[r.length] = s)
                        }
                        return r
                    }

                    function Gi(t, e) {
                        return t && Sc(t, e, nh)
                    }

                    function zi(t, e) {
                        return t && Tc(t, e, nh)
                    }

                    function Hi(t, e) {
                        return c(e, function(e) {
                            return fs(t[e])
                        })
                    }

                    function Wi(t, e) {
                        e = Qr(e, t) ? [e] : Gn(e);
                        for (var i = 0, n = e.length; null != t && n > i;) t = t[uo(e[i++])];
                        return i && i == n ? t : K
                    }

                    function Xi(t, e, i) {
                        var n = e(t);
                        return gl(t) ? n : f(n, i(t))
                    }

                    function qi(t, e) {
                        return t > e
                    }

                    function Yi(t, e) {
                        return null != t && (Pu.call(t, e) || "object" == typeof t && e in t && null === Nr(t))
                    }

                    function Zi(t, e) {
                        return null != t && e in Object(t)
                    }

                    function Ki(t, e, i) {
                        return t >= $u(e, i) && t < Qu(e, i)
                    }

                    function Ji(t, e, i) {
                        for (var n = i ? p : l, r = t[0].length, o = t.length, a = o, s = Array(o), h = 1 / 0, u = []; a--;) {
                            var c = t[a];
                            a && e && (c = d(c, C(e))), h = $u(c.length, h), s[a] = !i && (e || r >= 120 && c.length >= 120) ? new ei(a && c) : K
                        }
                        c = t[0];
                        var f = -1,
                            m = s[0];
                        t: for (; ++f < r && u.length < h;) {
                            var g = c[f],
                                v = e ? e(g) : g;
                            if (g = i || 0 !== g ? g : 0, !(m ? L(m, v) : n(u, v, i))) {
                                for (a = o; --a;) {
                                    var y = s[a];
                                    if (!(y ? L(y, v) : n(t[a], v, i))) continue t
                                }
                                m && m.push(v), u.push(g)
                            }
                        }
                        return u
                    }

                    function Qi(t, e, i, n) {
                        return Gi(t, function(t, r, o) {
                            e(n, i(t), r, o)
                        }), n
                    }

                    function $i(t, e, i) {
                        Qr(e, t) || (e = Gn(e), t = so(t, e), e = Ro(e));
                        var n = null == t ? t : t[uo(e)];
                        return null == n ? K : o(n, t, i)
                    }

                    function tn(t, e, i, n, r) {
                        return t === e ? !0 : null == t || null == e || !vs(t) && !ys(e) ? t !== t && e !== e : en(t, e, tn, i, n, r)
                    }

                    function en(t, e, i, n, r, o) {
                        var a = gl(t),
                            s = gl(e),
                            h = Pt,
                            u = Pt;
                        a || (h = Vr(t), h = h == Ct ? jt : h), s || (u = Vr(e), u = u == Ct ? jt : u);
                        var c = h == jt && !F(t),
                            l = u == jt && !F(e),
                            p = h == u;
                        if (p && !c) return o || (o = new ri), a || Is(t) ? Cr(t, e, i, n, r, o) : Pr(t, e, h, i, n, r, o);
                        if (!(r & dt)) {
                            var d = c && Pu.call(t, "__wrapped__"),
                                f = l && Pu.call(e, "__wrapped__");
                            if (d || f) {
                                var m = d ? t.value() : t,
                                    g = f ? e.value() : e;
                                return o || (o = new ri), i(m, g, n, r, o)
                            }
                        }
                        return p ? (o || (o = new ri), Lr(t, e, i, n, r, o)) : !1
                    }

                    function nn(t, e, i, n) {
                        var r = i.length,
                            o = r,
                            a = !n;
                        if (null == t) return !o;
                        for (t = Object(t); r--;) {
                            var s = i[r];
                            if (a && s[2] ? s[1] !== t[s[0]] : !(s[0] in t)) return !1
                        }
                        for (; ++r < o;) {
                            s = i[r];
                            var h = s[0],
                                u = t[h],
                                c = s[1];
                            if (a && s[2]) {
                                if (u === K && !(h in t)) return !1
                            } else {
                                var l = new ri;
                                if (n) var p = n(u, c, h, t, e, l);
                                if (!(p === K ? tn(c, u, n, pt | dt, l) : p)) return !1
                            }
                        }
                        return !0
                    }

                    function rn(t) {
                        if (!vs(t) || eo(t)) return !1;
                        var e = fs(t) || F(t) ? Du : Ee;
                        return e.test(co(t))
                    }

                    function on(t) {
                        return "function" == typeof t ? t : null == t ? Xh : "object" == typeof t ? gl(t) ? ln(t[0], t[1]) : cn(t) : tu(t)
                    }

                    function an(t) {
                        return Ju(Object(t))
                    }

                    function sn(t) {
                        t = null == t ? t : Object(t);
                        var e = [];
                        for (var i in t) e.push(i);
                        return e
                    }

                    function hn(t, e) {
                        return e > t
                    }

                    function un(t, e) {
                        var i = -1,
                            n = rs(t) ? Array(t.length) : [];
                        return wc(t, function(t, r, o) {
                            n[++i] = e(t, r, o)
                        }), n
                    }

                    function cn(t) {
                        var e = jr(t);
                        return 1 == e.length && e[0][2] ? ro(e[0][0], e[0][1]) : function(i) {
                            return i === t || nn(i, t, e)
                        }
                    }

                    function ln(t, e) {
                        return Qr(t) && no(e) ? ro(uo(t), e) : function(i) {
                            var n = th(i, t);
                            return n === K && n === e ? ih(i, t) : tn(e, n, K, pt | dt)
                        }
                    }

                    function pn(t, e, i, n, r) {
                        if (t !== e) {
                            if (!gl(e) && !Is(e)) var o = rh(e);
                            s(o || e, function(a, s) {
                                if (o && (s = a, a = e[s]), vs(a)) r || (r = new ri), dn(t, e, s, i, pn, n, r);
                                else {
                                    var h = n ? n(t[s], a, s + "", t, e, r) : K;
                                    h === K && (h = a), li(t, s, h)
                                }
                            })
                        }
                    }

                    function dn(t, e, i, n, r, o, a) {
                        var s = t[i],
                            h = e[i],
                            u = a.get(h);
                        if (u) return void li(t, i, u);
                        var c = o ? o(s, h, i + "", t, e, a) : K,
                            l = c === K;
                        l && (c = h, gl(h) || Is(h) ? gl(s) ? c = s : os(s) ? c = ir(s) : (l = !1, c = Ei(h, !0)) : Es(h) || is(h) ? is(s) ? c = Gs(s) : !vs(s) || n && fs(s) ? (l = !1, c = Ei(h, !0)) : c = s : l = !1), a.set(h, c), l && r(c, h, n, o, a), a["delete"](h), li(t, i, c)
                    }

                    function fn(t, e) {
                        var i = t.length;
                        if (i) return e += 0 > e ? i : 0, Kr(e, i) ? t[e] : K
                    }

                    function mn(t, e, i) {
                        var n = -1;
                        e = d(e.length ? e : [Xh], C(Br()));
                        var r = un(t, function(t, i, r) {
                            var o = d(e, function(e) {
                                return e(t)
                            });
                            return {
                                criteria: o,
                                index: ++n,
                                value: t
                            }
                        });
                        return S(r, function(t, e) {
                            return $n(t, e, i)
                        })
                    }

                    function gn(t, e) {
                        return t = Object(t), m(e, function(e, i) {
                            return i in t && (e[i] = t[i]), e
                        }, {})
                    }

                    function vn(t, e) {
                        for (var i = -1, n = kr(t), r = n.length, o = {}; ++i < r;) {
                            var a = n[i],
                                s = t[a];
                            e(s, a) && (o[a] = s)
                        }
                        return o
                    }

                    function yn(t) {
                        return function(e) {
                            return null == e ? K : e[t]
                        }
                    }

                    function _n(t) {
                        return function(e) {
                            return Wi(e, t)
                        }
                    }

                    function bn(t, e, i, n) {
                        var r = n ? x : b,
                            o = -1,
                            a = e.length,
                            s = t;
                        for (t === e && (e = ir(e)), i && (s = d(t, C(i))); ++o < a;)
                            for (var h = 0, u = e[o], c = i ? i(u) : u;
                                (h = r(s, c, h, n)) > -1;) s !== t && Hu.call(s, h, 1), Hu.call(t, h, 1);
                        return t
                    }

                    function xn(t, e) {
                        for (var i = t ? e.length : 0, n = i - 1; i--;) {
                            var r = e[i];
                            if (i == n || r !== o) {
                                var o = r;
                                if (Kr(r)) Hu.call(t, r, 1);
                                else if (Qr(r, t)) delete t[uo(r)];
                                else {
                                    var a = Gn(r),
                                        s = so(t, a);
                                    null != s && delete s[uo(Ro(a))]
                                }
                            }
                        }
                        return t
                    }

                    function wn(t, e) {
                        return t + qu(ec() * (e - t + 1))
                    }

                    function Mn(t, e, i, n) {
                        for (var r = -1, o = Qu(Xu((e - t) / (i || 1)), 0), a = Array(o); o--;) a[n ? o : ++r] = t, t += i;
                        return a
                    }

                    function Sn(t, e) {
                        var i = "";
                        if (!t || 1 > e || e > wt) return i;
                        do e % 2 && (i += t), e = qu(e / 2), e && (t += t); while (e);
                        return i
                    }

                    function Tn(t, e, i, n) {
                        e = Qr(e, t) ? [e] : Gn(e);
                        for (var r = -1, o = e.length, a = o - 1, s = t; null != s && ++r < o;) {
                            var h = uo(e[r]);
                            if (vs(s)) {
                                var u = i;
                                if (r != a) {
                                    var c = s[h];
                                    u = n ? n(c, h, s) : K, u === K && (u = null == c ? Kr(e[r + 1]) ? [] : {} : c)
                                }
                                pi(s, h, u)
                            }
                            s = s[h]
                        }
                        return t
                    }

                    function An(t, e, i) {
                        var n = -1,
                            r = t.length;
                        0 > e && (e = -e > r ? 0 : r + e), i = i > r ? r : i, 0 > i && (i += r), r = e > i ? 0 : i - e >>> 0, e >>>= 0;
                        for (var o = Array(r); ++n < r;) o[n] = t[n + e];
                        return o
                    }

                    function En(t, e) {
                        var i;
                        return wc(t, function(t, n, r) {
                            return i = e(t, n, r), !i
                        }), !!i
                    }

                    function Cn(t, e, i) {
                        var n = 0,
                            r = t ? t.length : n;
                        if ("number" == typeof e && e === e && Et >= r) {
                            for (; r > n;) {
                                var o = n + r >>> 1,
                                    a = t[o];
                                null !== a && !ks(a) && (i ? e >= a : e > a) ? n = o + 1 : r = o
                            }
                            return r
                        }
                        return Pn(t, e, Xh, i)
                    }

                    function Pn(t, e, i, n) {
                        e = i(e);
                        for (var r = 0, o = t ? t.length : 0, a = e !== e, s = null === e, h = ks(e), u = e === K; o > r;) {
                            var c = qu((r + o) / 2),
                                l = i(t[c]),
                                p = l !== K,
                                d = null === l,
                                f = l === l,
                                m = ks(l);
                            if (a) var g = n || f;
                            else g = u ? f && (n || p) : s ? f && p && (n || !d) : h ? f && p && !d && (n || !m) : d || m ? !1 : n ? e >= l : e > l;
                            g ? r = c + 1 : o = c
                        }
                        return $u(o, At)
                    }

                    function Ln(t, e) {
                        for (var i = -1, n = t.length, r = 0, o = []; ++i < n;) {
                            var a = t[i],
                                s = e ? e(a) : a;
                            if (!i || !es(s, h)) {
                                var h = s;
                                o[r++] = 0 === a ? 0 : a
                            }
                        }
                        return o
                    }

                    function Rn(t) {
                        return "number" == typeof t ? t : ks(t) ? St : +t
                    }

                    function kn(t) {
                        if ("string" == typeof t) return t;
                        if (ks(t)) return xc ? xc.call(t) : "";
                        var e = t + "";
                        return "0" == e && 1 / t == -xt ? "-0" : e
                    }

                    function In(t, e, i) {
                        var n = -1,
                            r = l,
                            o = t.length,
                            a = !0,
                            s = [],
                            h = s;
                        if (i) a = !1, r = p;
                        else if (o >= Q) {
                            var u = e ? null : Ec(t);
                            if (u) return H(u);
                            a = !1, r = L, h = new ei
                        } else h = e ? [] : s;
                        t: for (; ++n < o;) {
                            var c = t[n],
                                d = e ? e(c) : c;
                            if (c = i || 0 !== c ? c : 0, a && d === d) {
                                for (var f = h.length; f--;)
                                    if (h[f] === d) continue t;
                                e && h.push(d), s.push(c)
                            } else r(h, d, i) || (h !== s && h.push(d), s.push(c))
                        }
                        return s
                    }

                    function Dn(t, e) {
                        e = Qr(e, t) ? [e] : Gn(e), t = so(t, e);
                        var i = uo(Ro(e));
                        return !(null != t && Yi(t, i)) || delete t[i]
                    }

                    function Bn(t, e, i, n) {
                        return Tn(t, e, i(Wi(t, e)), n)
                    }

                    function On(t, e, i, n) {
                        for (var r = t.length, o = n ? r : -1;
                            (n ? o-- : ++o < r) && e(t[o], o, t););
                        return i ? An(t, n ? 0 : o, n ? o + 1 : r) : An(t, n ? o + 1 : 0, n ? r : o)
                    }

                    function jn(t, e) {
                        var i = t;
                        return i instanceof Ie && (i = i.value()), m(e, function(t, e) {
                            return e.func.apply(e.thisArg, f([t], e.args))
                        }, i)
                    }

                    function Un(t, e, i) {
                        for (var n = -1, r = t.length; ++n < r;) var o = o ? f(Ii(o, t[n], e, i), Ii(t[n], o, e, i)) : t[n];
                        return o && o.length ? In(o, e, i) : []
                    }

                    function Nn(t, e, i) {
                        for (var n = -1, r = t.length, o = e.length, a = {}; ++n < r;) {
                            var s = o > n ? e[n] : K;
                            i(a, t[n], s)
                        }
                        return a
                    }

                    function Fn(t) {
                        return os(t) ? t : []
                    }

                    function Vn(t) {
                        return "function" == typeof t ? t : Xh
                    }

                    function Gn(t) {
                        return gl(t) ? t : Ic(t)
                    }

                    function zn(t, e, i) {
                        var n = t.length;
                        return i = i === K ? n : i, !e && i >= n ? t : An(t, e, i)
                    }

                    function Hn(t, e) {
                        if (e) return t.slice();
                        var i = new t.constructor(t.length);
                        return t.copy(i), i
                    }

                    function Wn(t) {
                        var e = new t.constructor(t.byteLength);
                        return new Uu(e).set(new Uu(t)), e
                    }

                    function Xn(t, e) {
                        var i = e ? Wn(t.buffer) : t.buffer;
                        return new t.constructor(i, t.byteOffset, t.byteLength)
                    }

                    function qn(t, e, i) {
                        var r = e ? i(G(t), !0) : G(t);
                        return m(r, n, new t.constructor)
                    }

                    function Yn(t) {
                        var e = new t.constructor(t.source, Me.exec(t));
                        return e.lastIndex = t.lastIndex, e
                    }

                    function Zn(t, e, i) {
                        var n = e ? i(H(t), !0) : H(t);
                        return m(n, r, new t.constructor)
                    }

                    function Kn(t) {
                        return bc ? Object(bc.call(t)) : {}
                    }

                    function Jn(t, e) {
                        var i = e ? Wn(t.buffer) : t.buffer;
                        return new t.constructor(i, t.byteOffset, t.length)
                    }

                    function Qn(t, e) {
                        if (t !== e) {
                            var i = t !== K,
                                n = null === t,
                                r = t === t,
                                o = ks(t),
                                a = e !== K,
                                s = null === e,
                                h = e === e,
                                u = ks(e);
                            if (!s && !u && !o && t > e || o && a && h && !s && !u || n && a && h || !i && h || !r) return 1;
                            if (!n && !o && !u && e > t || u && i && r && !n && !o || s && i && r || !a && r || !h) return -1
                        }
                        return 0
                    }

                    function $n(t, e, i) {
                        for (var n = -1, r = t.criteria, o = e.criteria, a = r.length, s = i.length; ++n < a;) {
                            var h = Qn(r[n], o[n]);
                            if (h) {
                                if (n >= s) return h;
                                var u = i[n];
                                return h * ("desc" == u ? -1 : 1)
                            }
                        }
                        return t.index - e.index
                    }

                    function tr(t, e, i, n) {
                        for (var r = -1, o = t.length, a = i.length, s = -1, h = e.length, u = Qu(o - a, 0), c = Array(h + u), l = !n; ++s < h;) c[s] = e[s];
                        for (; ++r < a;)(l || o > r) && (c[i[r]] = t[r]);
                        for (; u--;) c[s++] = t[r++];
                        return c
                    }

                    function er(t, e, i, n) {
                        for (var r = -1, o = t.length, a = -1, s = i.length, h = -1, u = e.length, c = Qu(o - s, 0), l = Array(c + u), p = !n; ++r < c;) l[r] = t[r];
                        for (var d = r; ++h < u;) l[d + h] = e[h];
                        for (; ++a < s;)(p || o > r) && (l[d + i[a]] = t[r++]);
                        return l
                    }

                    function ir(t, e) {
                        var i = -1,
                            n = t.length;
                        for (e || (e = Array(n)); ++i < n;) e[i] = t[i];
                        return e
                    }

                    function nr(t, e, i, n) {
                        i || (i = {});
                        for (var r = -1, o = e.length; ++r < o;) {
                            var a = e[r],
                                s = n ? n(i[a], t[a], a, i, t) : t[a];
                            pi(i, a, s)
                        }
                        return i
                    }

                    function rr(t, e) {
                        return nr(t, Fr(t), e)
                    }

                    function or(t, e) {
                        return function(i, n) {
                            var r = gl(i) ? a : fi,
                                o = e ? e() : {};
                            return r(i, t, Br(n), o)
                        }
                    }

                    function ar(t) {
                        return Wa(function(e, i) {
                            var n = -1,
                                r = i.length,
                                o = r > 1 ? i[r - 1] : K,
                                a = r > 2 ? i[2] : K;
                            for (o = t.length > 3 && "function" == typeof o ? (r--, o) : K, a && Jr(i[0], i[1], a) && (o = 3 > r ? K : o, r = 1), e = Object(e); ++n < r;) {
                                var s = i[n];
                                s && t(e, s, n, o)
                            }
                            return e
                        })
                    }

                    function sr(t, e) {
                        return function(i, n) {
                            if (null == i) return i;
                            if (!rs(i)) return t(i, n);
                            for (var r = i.length, o = e ? r : -1, a = Object(i);
                                (e ? o-- : ++o < r) && n(a[o], o, a) !== !1;);
                            return i
                        }
                    }

                    function hr(t) {
                        return function(e, i, n) {
                            for (var r = -1, o = Object(e), a = n(e), s = a.length; s--;) {
                                var h = a[t ? s : ++r];
                                if (i(o[h], h, o) === !1) break
                            }
                            return e
                        }
                    }

                    function ur(t, e, i) {
                        function n() {
                            var e = this && this !== Ui && this instanceof n ? o : t;
                            return e.apply(r ? i : this, arguments)
                        }
                        var r = e & it,
                            o = pr(t);
                        return n
                    }

                    function cr(t) {
                        return function(e) {
                            e = Hs(e);
                            var i = bi.test(e) ? q(e) : K,
                                n = i ? i[0] : e.charAt(0),
                                r = i ? zn(i, 1).join("") : e.slice(1);
                            return n[t]() + r
                        }
                    }

                    function lr(t) {
                        return function(e) {
                            return m(Gh(wh(e).replace(gi, "")), t, "")
                        }
                    }

                    function pr(t) {
                        return function() {
                            var e = arguments;
                            switch (e.length) {
                                case 0:
                                    return new t;
                                case 1:
                                    return new t(e[0]);
                                case 2:
                                    return new t(e[0], e[1]);
                                case 3:
                                    return new t(e[0], e[1], e[2]);
                                case 4:
                                    return new t(e[0], e[1], e[2], e[3]);
                                case 5:
                                    return new t(e[0], e[1], e[2], e[3], e[4]);
                                case 6:
                                    return new t(e[0], e[1], e[2], e[3], e[4], e[5]);
                                case 7:
                                    return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6])
                            }
                            var i = Pi(t.prototype),
                                n = t.apply(i, e);
                            return vs(n) ? n : i
                        }
                    }

                    function dr(t, e, i) {
                        function n() {
                            for (var a = arguments.length, s = Array(a), h = a, u = Dr(n); h--;) s[h] = arguments[h];
                            var c = 3 > a && s[0] !== u && s[a - 1] !== u ? [] : z(s, u);
                            if (a -= c.length, i > a) return Sr(t, e, gr, n.placeholder, K, s, c, K, K, i - a);
                            var l = this && this !== Ui && this instanceof n ? r : t;
                            return o(l, this, s)
                        }
                        var r = pr(t);
                        return n
                    }

                    function fr(t) {
                        return function(e, i, n) {
                            var r = Object(e);
                            if (i = Br(i, 3), !rs(e)) var o = nh(e);
                            var a = t(o || e, function(t, e) {
                                return o && (e = t, t = r[e]), i(t, e, r)
                            }, n);
                            return a > -1 ? e[o ? o[a] : a] : K
                        }
                    }

                    function mr(t) {
                        return Wa(function(e) {
                            e = Vi(e, 1);
                            var i = e.length,
                                n = i,
                                r = I.prototype.thru;
                            for (t && e.reverse(); n--;) {
                                var o = e[n];
                                if ("function" != typeof o) throw new wu($);
                                if (r && !a && "wrapper" == Ir(o)) var a = new I([], !0)
                            }
                            for (n = a ? n : i; ++n < i;) {
                                o = e[n];
                                var s = Ir(o),
                                    h = "wrapper" == s ? Cc(o) : K;
                                a = h && to(h[0]) && h[1] == (ut | ot | st | ct) && !h[4].length && 1 == h[9] ? a[Ir(h[0])].apply(a, h[3]) : 1 == o.length && to(o) ? a[s]() : a.thru(o)
                            }
                            return function() {
                                var t = arguments,
                                    n = t[0];
                                if (a && 1 == t.length && gl(n) && n.length >= Q) return a.plant(n).value();
                                for (var r = 0, o = i ? e[r].apply(this, t) : n; ++r < i;) o = e[r].call(this, o);
                                return o
                            }
                        })
                    }

                    function gr(t, e, i, n, r, o, a, s, h, u) {
                        function c() {
                            for (var v = arguments.length, y = Array(v), _ = v; _--;) y[_] = arguments[_];
                            if (f) var b = Dr(c),
                                x = D(y, b);
                            if (n && (y = tr(y, n, r, f)), o && (y = er(y, o, a, f)), v -= x, f && u > v) {
                                var w = z(y, b);
                                return Sr(t, e, gr, c.placeholder, i, y, w, s, h, u - v)
                            }
                            var M = p ? i : this,
                                S = d ? M[t] : t;
                            return v = y.length, s ? y = ho(y, s) : m && v > 1 && y.reverse(), l && v > h && (y.length = h), this && this !== Ui && this instanceof c && (S = g || pr(S)), S.apply(M, y)
                        }
                        var l = e & ut,
                            p = e & it,
                            d = e & nt,
                            f = e & (ot | at),
                            m = e & lt,
                            g = d ? K : pr(t);
                        return c
                    }

                    function vr(t, e) {
                        return function(i, n) {
                            return Qi(i, t, e(n), {})
                        }
                    }

                    function yr(t) {
                        return function(e, i) {
                            var n;
                            if (e === K && i === K) return 0;
                            if (e !== K && (n = e), i !== K) {
                                if (n === K) return i;
                                "string" == typeof e || "string" == typeof i ? (e = kn(e), i = kn(i)) : (e = Rn(e), i = Rn(i)), n = t(e, i)
                            }
                            return n
                        }
                    }

                    function _r(t) {
                        return Wa(function(e) {
                            return e = 1 == e.length && gl(e[0]) ? d(e[0], C(Br())) : d(Vi(e, 1, Zr), C(Br())), Wa(function(i) {
                                var n = this;
                                return t(e, function(t) {
                                    return o(t, n, i)
                                })
                            })
                        })
                    }

                    function br(t, e) {
                        e = e === K ? " " : kn(e);
                        var i = e.length;
                        if (2 > i) return i ? Sn(e, t) : e;
                        var n = Sn(e, Xu(t / X(e)));
                        return bi.test(e) ? zn(q(n), 0, t).join("") : n.slice(0, t)
                    }

                    function xr(t, e, i, n) {
                        function r() {
                            for (var e = -1, h = arguments.length, u = -1, c = n.length, l = Array(c + h), p = this && this !== Ui && this instanceof r ? s : t; ++u < c;) l[u] = n[u];
                            for (; h--;) l[u++] = arguments[++e];
                            return o(p, a ? i : this, l)
                        }
                        var a = e & it,
                            s = pr(t);
                        return r
                    }

                    function wr(t) {
                        return function(e, i, n) {
                            return n && "number" != typeof n && Jr(e, i, n) && (i = n = K), e = Vs(e), e = e === e ? e : 0, i === K ? (i = e, e = 0) : i = Vs(i) || 0, n = n === K ? i > e ? 1 : -1 : Vs(n) || 0, Mn(e, i, n, t)
                        }
                    }

                    function Mr(t) {
                        return function(e, i) {
                            return "string" == typeof e && "string" == typeof i || (e = Vs(e), i = Vs(i)), t(e, i)
                        }
                    }

                    function Sr(t, e, i, n, r, o, a, s, h, u) {
                        var c = e & ot,
                            l = c ? a : K,
                            p = c ? K : a,
                            d = c ? o : K,
                            f = c ? K : o;
                        e |= c ? st : ht, e &= ~(c ? ht : st), e & rt || (e &= ~(it | nt));
                        var m = [t, e, r, d, l, f, p, s, h, u],
                            g = i.apply(K, m);
                        return to(t) && kc(g, m), g.placeholder = n, g
                    }

                    function Tr(t) {
                        var e = bu[t];
                        return function(t, i) {
                            if (t = Vs(t), i = $u(Ns(i), 292)) {
                                var n = (Hs(t) + "e").split("e"),
                                    r = e(n[0] + "e" + (+n[1] + i));
                                return n = (Hs(r) + "e").split("e"), +(n[0] + "e" + (+n[1] - i))
                            }
                            return e(t)
                        }
                    }

                    function Ar(t) {
                        return function(e) {
                            var i = Vr(e);
                            return i == Bt ? G(e) : i == Ft ? W(e) : E(e, t(e))
                        }
                    }

                    function Er(t, e, i, n, r, o, a, s) {
                        var h = e & nt;
                        if (!h && "function" != typeof t) throw new wu($);
                        var u = n ? n.length : 0;
                        if (u || (e &= ~(st | ht), n = r = K), a = a === K ? a : Qu(Ns(a), 0), s = s === K ? s : Ns(s), u -= r ? r.length : 0, e & ht) {
                            var c = n,
                                l = r;
                            n = r = K
                        }
                        var p = h ? K : Cc(t),
                            d = [t, e, i, n, r, c, l, o, a, s];
                        if (p && oo(d, p), t = d[0], e = d[1], i = d[2], n = d[3], r = d[4], s = d[9] = null == d[9] ? h ? 0 : t.length : Qu(d[9] - u, 0), !s && e & (ot | at) && (e &= ~(ot | at)), e && e != it) f = e == ot || e == at ? dr(t, e, s) : e != st && e != (it | st) || r.length ? gr.apply(K, d) : xr(t, e, i, n);
                        else var f = ur(t, e, i);
                        var m = p ? Ac : kc;
                        return m(f, d)
                    }

                    function Cr(t, e, i, n, r, o) {
                        var a = r & dt,
                            s = t.length,
                            h = e.length;
                        if (s != h && !(a && h > s)) return !1;
                        var u = o.get(t);
                        if (u) return u == e;
                        var c = -1,
                            l = !0,
                            p = r & pt ? new ei : K;
                        for (o.set(t, e); ++c < s;) {
                            var d = t[c],
                                f = e[c];
                            if (n) var m = a ? n(f, d, c, e, t, o) : n(d, f, c, t, e, o);
                            if (m !== K) {
                                if (m) continue;
                                l = !1;
                                break
                            }
                            if (p) {
                                if (!v(e, function(t, e) {
                                        return p.has(e) || d !== t && !i(d, t, n, r, o) ? void 0 : p.add(e)
                                    })) {
                                    l = !1;
                                    break
                                }
                            } else if (d !== f && !i(d, f, n, r, o)) {
                                l = !1;
                                break
                            }
                        }
                        return o["delete"](t), l
                    }

                    function Pr(t, e, i, n, r, o, a) {
                        switch (i) {
                            case Xt:
                                if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                                t = t.buffer, e = e.buffer;
                            case Wt:
                                return !(t.byteLength != e.byteLength || !n(new Uu(t), new Uu(e)));
                            case Lt:
                            case Rt:
                                return +t == +e;
                            case kt:
                                return t.name == e.name && t.message == e.message;
                            case Ot:
                                return t != +t ? e != +e : t == +e;
                            case Nt:
                            case Vt:
                                return t == e + "";
                            case Bt:
                                var s = G;
                            case Ft:
                                var h = o & dt;
                                if (s || (s = H), t.size != e.size && !h) return !1;
                                var u = a.get(t);
                                return u ? u == e : (o |= pt, a.set(t, e), Cr(s(t), s(e), n, r, o, a));
                            case Gt:
                                if (bc) return bc.call(t) == bc.call(e)
                        }
                        return !1
                    }

                    function Lr(t, e, i, n, r, o) {
                        var a = r & dt,
                            s = nh(t),
                            h = s.length,
                            u = nh(e),
                            c = u.length;
                        if (h != c && !a) return !1;
                        for (var l = h; l--;) {
                            var p = s[l];
                            if (!(a ? p in e : Yi(e, p))) return !1
                        }
                        var d = o.get(t);
                        if (d) return d == e;
                        var f = !0;
                        o.set(t, e);
                        for (var m = a; ++l < h;) {
                            p = s[l];
                            var g = t[p],
                                v = e[p];
                            if (n) var y = a ? n(v, g, p, e, t, o) : n(g, v, p, t, e, o);
                            if (!(y === K ? g === v || i(g, v, n, r, o) : y)) {
                                f = !1;
                                break
                            }
                            m || (m = "constructor" == p)
                        }
                        if (f && !m) {
                            var _ = t.constructor,
                                b = e.constructor;
                            _ != b && "constructor" in t && "constructor" in e && !("function" == typeof _ && _ instanceof _ && "function" == typeof b && b instanceof b) && (f = !1)
                        }
                        return o["delete"](t), f
                    }

                    function Rr(t) {
                        return Xi(t, nh, Fr)
                    }

                    function kr(t) {
                        return Xi(t, rh, Lc)
                    }

                    function Ir(t) {
                        for (var e = t.name + "", i = dc[e], n = Pu.call(dc, e) ? i.length : 0; n--;) {
                            var r = i[n],
                                o = r.func;
                            if (null == o || o == t) return r.name
                        }
                        return e
                    }

                    function Dr(t) {
                        var i = Pu.call(e, "placeholder") ? e : t;
                        return i.placeholder
                    }

                    function Br() {
                        var t = e.iteratee || qh;
                        return t = t === qh ? on : t, arguments.length ? t(arguments[0], arguments[1]) : t
                    }

                    function Or(t, e) {
                        var i = t.__data__;
                        return $r(e) ? i["string" == typeof e ? "string" : "hash"] : i.map
                    }

                    function jr(t) {
                        for (var e = nh(t), i = e.length; i--;) {
                            var n = e[i],
                                r = t[n];
                            e[i] = [n, r, no(r)]
                        }
                        return e
                    }

                    function Ur(t, e) {
                        var i = U(t, e);
                        return rn(i) ? i : K
                    }

                    function Nr(t) {
                        return Yu(Object(t))
                    }

                    function Fr(t) {
                        return Fu(Object(t))
                    }

                    function Vr(t) {
                        return ku.call(t)
                    }

                    function Gr(t, e, i) {
                        for (var n = -1, r = i.length; ++n < r;) {
                            var o = i[n],
                                a = o.size;
                            switch (o.type) {
                                case "drop":
                                    t += a;
                                    break;
                                case "dropRight":
                                    e -= a;
                                    break;
                                case "take":
                                    e = $u(e, t + a);
                                    break;
                                case "takeRight":
                                    t = Qu(t, e - a)
                            }
                        }
                        return {
                            start: t,
                            end: e
                        }
                    }

                    function zr(t, e, i) {
                        e = Qr(e, t) ? [e] : Gn(e);
                        for (var n, r = -1, o = e.length; ++r < o;) {
                            var a = uo(e[r]);
                            if (!(n = null != t && i(t, a))) break;
                            t = t[a]
                        }
                        if (n) return n;
                        var o = t ? t.length : 0;
                        return !!o && gs(o) && Kr(a, o) && (gl(t) || Rs(t) || is(t))
                    }

                    function Hr(t) {
                        var e = t.length,
                            i = t.constructor(e);
                        return e && "string" == typeof t[0] && Pu.call(t, "index") && (i.index = t.index, i.input = t.input), i
                    }

                    function Wr(t) {
                        return "function" != typeof t.constructor || io(t) ? {} : Pi(Nr(t))
                    }

                    function Xr(t, e, i, n) {
                        var r = t.constructor;
                        switch (e) {
                            case Wt:
                                return Wn(t);
                            case Lt:
                            case Rt:
                                return new r(+t);
                            case Xt:
                                return Xn(t, n);
                            case qt:
                            case Yt:
                            case Zt:
                            case Kt:
                            case Jt:
                            case Qt:
                            case $t:
                            case te:
                            case ee:
                                return Jn(t, n);
                            case Bt:
                                return qn(t, n, i);
                            case Ot:
                            case Vt:
                                return new r(t);
                            case Nt:
                                return Yn(t);
                            case Ft:
                                return Zn(t, n, i);
                            case Gt:
                                return Kn(t)
                        }
                    }

                    function qr(t) {
                        var e = t ? t.length : K;
                        return gs(e) && (gl(t) || Rs(t) || is(t)) ? A(e, String) : null
                    }

                    function Yr(t) {
                        return gl(t) || is(t)
                    }

                    function Zr(t) {
                        return gl(t) && !(2 == t.length && !fs(t[0]))
                    }

                    function Kr(t, e) {
                        return e = null == e ? wt : e, !!e && ("number" == typeof t || Pe.test(t)) && t > -1 && t % 1 == 0 && e > t
                    }

                    function Jr(t, e, i) {
                        if (!vs(i)) return !1;
                        var n = typeof e;
                        return ("number" == n ? rs(i) && Kr(e, i.length) : "string" == n && e in i) ? es(i[e], t) : !1
                    }

                    function Qr(t, e) {
                        if (gl(t)) return !1;
                        var i = typeof t;
                        return "number" == i || "symbol" == i || "boolean" == i || null == t || ks(t) ? !0 : de.test(t) || !pe.test(t) || null != e && t in Object(e)
                    }

                    function $r(t) {
                        var e = typeof t;
                        return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t
                    }

                    function to(t) {
                        var i = Ir(t),
                            n = e[i];
                        if ("function" != typeof n || !(i in Ie.prototype)) return !1;
                        if (t === n) return !0;
                        var r = Cc(n);
                        return !!r && t === r[0]
                    }

                    function eo(t) {
                        return !!Eu && Eu in t
                    }

                    function io(t) {
                        var e = t && t.constructor,
                            i = "function" == typeof e && e.prototype || Su;
                        return t === i
                    }

                    function no(t) {
                        return t === t && !vs(t)
                    }

                    function ro(t, e) {
                        return function(i) {
                            return null == i ? !1 : i[t] === e && (e !== K || t in Object(i))
                        }
                    }

                    function oo(t, e) {
                        var i = t[1],
                            n = e[1],
                            r = i | n,
                            o = (it | nt | ut) > r,
                            a = n == ut && i == ot || n == ut && i == ct && t[7].length <= e[8] || n == (ut | ct) && e[7].length <= e[8] && i == ot;
                        if (!o && !a) return t;
                        n & it && (t[2] = e[2], r |= i & it ? 0 : rt);
                        var s = e[3];
                        if (s) {
                            var h = t[3];
                            t[3] = h ? tr(h, s, e[4]) : s, t[4] = h ? z(t[3], et) : e[4]
                        }
                        return s = e[5], s && (h = t[5], t[5] = h ? er(h, s, e[6]) : s, t[6] = h ? z(t[5], et) : e[6]), s = e[7], s && (t[7] = s), n & ut && (t[8] = null == t[8] ? e[8] : $u(t[8], e[8])), null == t[9] && (t[9] = e[9]), t[0] = e[0], t[1] = r, t
                    }

                    function ao(t, e, i, n, r, o) {
                        return vs(t) && vs(e) && pn(t, e, K, ao, o.set(e, t)), t
                    }

                    function so(t, e) {
                        return 1 == e.length ? t : Wi(t, An(e, 0, -1))
                    }

                    function ho(t, e) {
                        for (var i = t.length, n = $u(e.length, i), r = ir(t); n--;) {
                            var o = e[n];
                            t[n] = Kr(o, i) ? r[o] : K
                        }
                        return t
                    }

                    function uo(t) {
                        if ("string" == typeof t || ks(t)) return t;
                        var e = t + "";
                        return "0" == e && 1 / t == -xt ? "-0" : e
                    }

                    function co(t) {
                        if (null != t) {
                            try {
                                return Cu.call(t)
                            } catch (e) {}
                            try {
                                return t + ""
                            } catch (e) {}
                        }
                        return ""
                    }

                    function lo(t) {
                        if (t instanceof Ie) return t.clone();
                        var e = new I(t.__wrapped__, t.__chain__);
                        return e.__actions__ = ir(t.__actions__), e.__index__ = t.__index__, e.__values__ = t.__values__, e
                    }

                    function po(t, e, i) {
                        e = (i ? Jr(t, e, i) : e === K) ? 1 : Qu(Ns(e), 0);
                        var n = t ? t.length : 0;
                        if (!n || 1 > e) return [];
                        for (var r = 0, o = 0, a = Array(Xu(n / e)); n > r;) a[o++] = An(t, r, r += e);
                        return a
                    }

                    function fo(t) {
                        for (var e = -1, i = t ? t.length : 0, n = 0, r = []; ++e < i;) {
                            var o = t[e];
                            o && (r[n++] = o)
                        }
                        return r
                    }

                    function mo() {
                        for (var t = arguments.length, e = Array(t ? t - 1 : 0), i = arguments[0], n = t; n--;) e[n - 1] = arguments[n];
                        return t ? f(gl(i) ? ir(i) : [i], Vi(e, 1)) : []
                    }

                    function go(t, e, i) {
                        var n = t ? t.length : 0;
                        return n ? (e = i || e === K ? 1 : Ns(e), An(t, 0 > e ? 0 : e, n)) : []
                    }

                    function vo(t, e, i) {
                        var n = t ? t.length : 0;
                        return n ? (e = i || e === K ? 1 : Ns(e), e = n - e, An(t, 0, 0 > e ? 0 : e)) : []
                    }

                    function yo(t, e) {
                        return t && t.length ? On(t, Br(e, 3), !0, !0) : []
                    }

                    function _o(t, e) {
                        return t && t.length ? On(t, Br(e, 3), !0) : []
                    }

                    function bo(t, e, i, n) {
                        var r = t ? t.length : 0;
                        return r ? (i && "number" != typeof i && Jr(t, e, i) && (i = 0, n = r), ji(t, e, i, n)) : []
                    }

                    function xo(t, e, i) {
                        var n = t ? t.length : 0;
                        if (!n) return -1;
                        var r = null == i ? 0 : Ns(i);
                        return 0 > r && (r = Qu(n + r, 0)), _(t, Br(e, 3), r)
                    }

                    function wo(t, e, i) {
                        var n = t ? t.length : 0;
                        if (!n) return -1;
                        var r = n - 1;
                        return i !== K && (r = Ns(i), r = 0 > i ? Qu(n + r, 0) : $u(r, n - 1)), _(t, Br(e, 3), r, !0)
                    }

                    function Mo(t) {
                        var e = t ? t.length : 0;
                        return e ? Vi(t, 1) : []
                    }

                    function So(t) {
                        var e = t ? t.length : 0;
                        return e ? Vi(t, xt) : []
                    }

                    function To(t, e) {
                        var i = t ? t.length : 0;
                        return i ? (e = e === K ? 1 : Ns(e), Vi(t, e)) : []
                    }

                    function Ao(t) {
                        for (var e = -1, i = t ? t.length : 0, n = {}; ++e < i;) {
                            var r = t[e];
                            n[r[0]] = r[1]
                        }
                        return n
                    }

                    function Eo(t) {
                        return t && t.length ? t[0] : K
                    }

                    function Co(t, e, i) {
                        var n = t ? t.length : 0;
                        if (!n) return -1;
                        var r = null == i ? 0 : Ns(i);
                        return 0 > r && (r = Qu(n + r, 0)), b(t, e, r)
                    }

                    function Po(t) {
                        return vo(t, 1)
                    }

                    function Lo(t, e) {
                        return t ? Ku.call(t, e) : ""
                    }

                    function Ro(t) {
                        var e = t ? t.length : 0;
                        return e ? t[e - 1] : K
                    }

                    function ko(t, e, i) {
                        var n = t ? t.length : 0;
                        if (!n) return -1;
                        var r = n;
                        if (i !== K && (r = Ns(i), r = (0 > r ? Qu(n + r, 0) : $u(r, n - 1)) + 1), e !== e) return N(t, r - 1, !0);
                        for (; r--;)
                            if (t[r] === e) return r;
                        return -1
                    }

                    function Io(t, e) {
                        return t && t.length ? fn(t, Ns(e)) : K
                    }

                    function Do(t, e) {
                        return t && t.length && e && e.length ? bn(t, e) : t
                    }

                    function Bo(t, e, i) {
                        return t && t.length && e && e.length ? bn(t, e, Br(i)) : t
                    }

                    function Oo(t, e, i) {
                        return t && t.length && e && e.length ? bn(t, e, K, i) : t
                    }

                    function jo(t, e) {
                        var i = [];
                        if (!t || !t.length) return i;
                        var n = -1,
                            r = [],
                            o = t.length;
                        for (e = Br(e, 3); ++n < o;) {
                            var a = t[n];
                            e(a, n, t) && (i.push(a), r.push(n))
                        }
                        return xn(t, r), i
                    }

                    function Uo(t) {
                        return t ? nc.call(t) : t
                    }

                    function No(t, e, i) {
                        var n = t ? t.length : 0;
                        return n ? (i && "number" != typeof i && Jr(t, e, i) ? (e = 0, i = n) : (e = null == e ? 0 : Ns(e), i = i === K ? n : Ns(i)), An(t, e, i)) : []
                    }

                    function Fo(t, e) {
                        return Cn(t, e)
                    }

                    function Vo(t, e, i) {
                        return Pn(t, e, Br(i))
                    }

                    function Go(t, e) {
                        var i = t ? t.length : 0;
                        if (i) {
                            var n = Cn(t, e);
                            if (i > n && es(t[n], e)) return n
                        }
                        return -1
                    }

                    function zo(t, e) {
                        return Cn(t, e, !0)
                    }

                    function Ho(t, e, i) {
                        return Pn(t, e, Br(i), !0)
                    }

                    function Wo(t, e) {
                        var i = t ? t.length : 0;
                        if (i) {
                            var n = Cn(t, e, !0) - 1;
                            if (es(t[n], e)) return n
                        }
                        return -1
                    }

                    function Xo(t) {
                        return t && t.length ? Ln(t) : []
                    }

                    function qo(t, e) {
                        return t && t.length ? Ln(t, Br(e)) : []
                    }

                    function Yo(t) {
                        return go(t, 1)
                    }

                    function Zo(t, e, i) {
                        return t && t.length ? (e = i || e === K ? 1 : Ns(e), An(t, 0, 0 > e ? 0 : e)) : []
                    }

                    function Ko(t, e, i) {
                        var n = t ? t.length : 0;
                        return n ? (e = i || e === K ? 1 : Ns(e), e = n - e, An(t, 0 > e ? 0 : e, n)) : []
                    }

                    function Jo(t, e) {
                        return t && t.length ? On(t, Br(e, 3), !1, !0) : []
                    }

                    function Qo(t, e) {
                        return t && t.length ? On(t, Br(e, 3)) : []
                    }

                    function $o(t) {
                        return t && t.length ? In(t) : []
                    }

                    function ta(t, e) {
                        return t && t.length ? In(t, Br(e)) : []
                    }

                    function ea(t, e) {
                        return t && t.length ? In(t, K, e) : []
                    }

                    function ia(t) {
                        if (!t || !t.length) return [];
                        var e = 0;
                        return t = c(t, function(t) {
                            return os(t) ? (e = Qu(t.length, e), !0) : void 0
                        }), A(e, function(e) {
                            return d(t, yn(e))
                        })
                    }

                    function na(t, e) {
                        if (!t || !t.length) return [];
                        var i = ia(t);
                        return null == e ? i : d(i, function(t) {
                            return o(e, K, t)
                        })
                    }

                    function ra(t, e) {
                        return Nn(t || [], e || [], pi)
                    }

                    function oa(t, e) {
                        return Nn(t || [], e || [], Tn)
                    }

                    function aa(t) {
                        var i = e(t);
                        return i.__chain__ = !0, i
                    }

                    function sa(t, e) {
                        return e(t), t
                    }

                    function ha(t, e) {
                        return e(t)
                    }

                    function ua() {
                        return aa(this)
                    }

                    function ca() {
                        return new I(this.value(), this.__chain__)
                    }

                    function la() {
                        this.__values__ === K && (this.__values__ = js(this.value()));
                        var t = this.__index__ >= this.__values__.length,
                            e = t ? K : this.__values__[this.__index__++];
                        return {
                            done: t,
                            value: e
                        }
                    }

                    function pa() {
                        return this
                    }

                    function da(t) {
                        for (var e, n = this; n instanceof i;) {
                            var r = lo(n);
                            r.__index__ = 0, r.__values__ = K, e ? o.__wrapped__ = r : e = r;
                            var o = r;
                            n = n.__wrapped__
                        }
                        return o.__wrapped__ = t, e
                    }

                    function fa() {
                        var t = this.__wrapped__;
                        if (t instanceof Ie) {
                            var e = t;
                            return this.__actions__.length && (e = new Ie(this)), e = e.reverse(), e.__actions__.push({
                                func: ha,
                                args: [Uo],
                                thisArg: K
                            }), new I(e, this.__chain__)
                        }
                        return this.thru(Uo)
                    }

                    function ma() {
                        return jn(this.__wrapped__, this.__actions__)
                    }

                    function ga(t, e, i) {
                        var n = gl(t) ? u : Bi;
                        return i && Jr(t, e, i) && (e = K), n(t, Br(e, 3))
                    }

                    function va(t, e) {
                        var i = gl(t) ? c : Fi;
                        return i(t, Br(e, 3))
                    }

                    function ya(t, e) {
                        return Vi(Sa(t, e), 1)
                    }

                    function _a(t, e) {
                        return Vi(Sa(t, e), xt)
                    }

                    function ba(t, e, i) {
                        return i = i === K ? 1 : Ns(i), Vi(Sa(t, e), i)
                    }

                    function xa(t, e) {
                        var i = gl(t) ? s : wc;
                        return i(t, Br(e, 3))
                    }

                    function wa(t, e) {
                        var i = gl(t) ? h : Mc;
                        return i(t, Br(e, 3))
                    }

                    function Ma(t, e, i, n) {
                        t = rs(t) ? t : gh(t), i = i && !n ? Ns(i) : 0;
                        var r = t.length;
                        return 0 > i && (i = Qu(r + i, 0)), Rs(t) ? r >= i && t.indexOf(e, i) > -1 : !!r && b(t, e, i) > -1
                    }

                    function Sa(t, e) {
                        var i = gl(t) ? d : un;
                        return i(t, Br(e, 3))
                    }

                    function Ta(t, e, i, n) {
                        return null == t ? [] : (gl(e) || (e = null == e ? [] : [e]), i = n ? K : i, gl(i) || (i = null == i ? [] : [i]), mn(t, e, i))
                    }

                    function Aa(t, e, i) {
                        var n = gl(t) ? m : M,
                            r = arguments.length < 3;
                        return n(t, Br(e, 4), i, r, wc)
                    }

                    function Ea(t, e, i) {
                        var n = gl(t) ? g : M,
                            r = arguments.length < 3;
                        return n(t, Br(e, 4), i, r, Mc)
                    }

                    function Ca(t, e) {
                        var i = gl(t) ? c : Fi;
                        return e = Br(e, 3), i(t, function(t, i, n) {
                            return !e(t, i, n)
                        })
                    }

                    function Pa(t) {
                        var e = rs(t) ? t : gh(t),
                            i = e.length;
                        return i > 0 ? e[wn(0, i - 1)] : K
                    }

                    function La(t, e, i) {
                        var n = -1,
                            r = js(t),
                            o = r.length,
                            a = o - 1;
                        for (e = (i ? Jr(t, e, i) : e === K) ? 1 : Ai(Ns(e), 0, o); ++n < e;) {
                            var s = wn(n, a),
                                h = r[s];
                            r[s] = r[n], r[n] = h
                        }
                        return r.length = e, r
                    }

                    function Ra(t) {
                        return La(t, Tt)
                    }

                    function ka(t) {
                        if (null == t) return 0;
                        if (rs(t)) {
                            var e = t.length;
                            return e && Rs(t) ? X(t) : e
                        }
                        if (ys(t)) {
                            var i = Vr(t);
                            if (i == Bt || i == Ft) return t.size
                        }
                        return nh(t).length
                    }

                    function Ia(t, e, i) {
                        var n = gl(t) ? v : En;
                        return i && Jr(t, e, i) && (e = K), n(t, Br(e, 3))
                    }

                    function Da() {
                        return yu.now()
                    }

                    function Ba(t, e) {
                        if ("function" != typeof e) throw new wu($);
                        return t = Ns(t),
                            function() {
                                return --t < 1 ? e.apply(this, arguments) : void 0
                            }
                    }

                    function Oa(t, e, i) {
                        return e = i ? K : e, e = t && null == e ? t.length : e, Er(t, ut, K, K, K, K, e)
                    }

                    function ja(t, e) {
                        var i;
                        if ("function" != typeof e) throw new wu($);
                        return t = Ns(t),
                            function() {
                                return --t > 0 && (i = e.apply(this, arguments)), 1 >= t && (e = K), i
                            }
                    }

                    function Ua(t, e, i) {
                        e = i ? K : e;
                        var n = Er(t, ot, K, K, K, K, K, e);
                        return n.placeholder = Ua.placeholder, n
                    }

                    function Na(t, e, i) {
                        e = i ? K : e;
                        var n = Er(t, at, K, K, K, K, K, e);
                        return n.placeholder = Na.placeholder, n
                    }

                    function Fa(t, e, i) {
                        function n(e) {
                            var i = p,
                                n = d;
                            return p = d = K, y = e, m = t.apply(n, i)
                        }

                        function r(t) {
                            return y = t, g = Wu(s, e), _ ? n(t) : m
                        }

                        function o(t) {
                            var i = t - v,
                                n = t - y,
                                r = e - i;
                            return b ? $u(r, f - n) : r
                        }

                        function a(t) {
                            var i = t - v,
                                n = t - y;
                            return v === K || i >= e || 0 > i || b && n >= f
                        }

                        function s() {
                            var t = Da();
                            return a(t) ? h(t) : void(g = Wu(s, o(t)))
                        }

                        function h(t) {
                            return g = K, x && p ? n(t) : (p = d = K, m)
                        }

                        function u() {
                            y = 0, p = v = d = g = K
                        }

                        function c() {
                            return g === K ? m : h(Da())
                        }

                        function l() {
                            var t = Da(),
                                i = a(t);
                            if (p = arguments, d = this, v = t, i) {
                                if (g === K) return r(v);
                                if (b) return g = Wu(s, e), n(v)
                            }
                            return g === K && (g = Wu(s, e)), m
                        }
                        var p, d, f, m, g, v, y = 0,
                            _ = !1,
                            b = !1,
                            x = !0;
                        if ("function" != typeof t) throw new wu($);
                        return e = Vs(e) || 0, vs(i) && (_ = !!i.leading, b = "maxWait" in i, f = b ? Qu(Vs(i.maxWait) || 0, e) : f, x = "trailing" in i ? !!i.trailing : x), l.cancel = u, l.flush = c, l
                    }

                    function Va(t) {
                        return Er(t, lt)
                    }

                    function Ga(t, e) {
                        if ("function" != typeof t || e && "function" != typeof e) throw new wu($);
                        var i = function() {
                            var n = arguments,
                                r = e ? e.apply(this, n) : n[0],
                                o = i.cache;
                            if (o.has(r)) return o.get(r);
                            var a = t.apply(this, n);
                            return i.cache = o.set(r, a), a
                        };
                        return i.cache = new(Ga.Cache || Ze), i
                    }

                    function za(t) {
                        if ("function" != typeof t) throw new wu($);
                        return function() {
                            return !t.apply(this, arguments)
                        }
                    }

                    function Ha(t) {
                        return ja(2, t)
                    }

                    function Wa(t, e) {
                        if ("function" != typeof t) throw new wu($);
                        return e = Qu(e === K ? t.length - 1 : Ns(e), 0),
                            function() {
                                for (var i = arguments, n = -1, r = Qu(i.length - e, 0), a = Array(r); ++n < r;) a[n] = i[e + n];
                                switch (e) {
                                    case 0:
                                        return t.call(this, a);
                                    case 1:
                                        return t.call(this, i[0], a);
                                    case 2:
                                        return t.call(this, i[0], i[1], a)
                                }
                                var s = Array(e + 1);
                                for (n = -1; ++n < e;) s[n] = i[n];
                                return s[e] = a, o(t, this, s)
                            }
                    }

                    function Xa(t, e) {
                        if ("function" != typeof t) throw new wu($);
                        return e = e === K ? 0 : Qu(Ns(e), 0), Wa(function(i) {
                            var n = i[e],
                                r = zn(i, 0, e);
                            return n && f(r, n), o(t, this, r)
                        })
                    }

                    function qa(t, e, i) {
                        var n = !0,
                            r = !0;
                        if ("function" != typeof t) throw new wu($);
                        return vs(i) && (n = "leading" in i ? !!i.leading : n, r = "trailing" in i ? !!i.trailing : r), Fa(t, e, {
                            leading: n,
                            maxWait: e,
                            trailing: r
                        })
                    }

                    function Ya(t) {
                        return Oa(t, 1)
                    }

                    function Za(t, e) {
                        return e = null == e ? Xh : e, ll(e, t)
                    }

                    function Ka() {
                        if (!arguments.length) return [];
                        var t = arguments[0];
                        return gl(t) ? t : [t]
                    }

                    function Ja(t) {
                        return Ei(t, !1, !0)
                    }

                    function Qa(t, e) {
                        return Ei(t, !1, !0, e)
                    }

                    function $a(t) {
                        return Ei(t, !0, !0)
                    }

                    function ts(t, e) {
                        return Ei(t, !0, !0, e)
                    }

                    function es(t, e) {
                        return t === e || t !== t && e !== e
                    }

                    function is(t) {
                        return os(t) && Pu.call(t, "callee") && (!zu.call(t, "callee") || ku.call(t) == Ct)
                    }

                    function ns(t) {
                        return ys(t) && ku.call(t) == Wt
                    }

                    function rs(t) {
                        return null != t && gs(Pc(t)) && !fs(t)
                    }

                    function os(t) {
                        return ys(t) && rs(t)
                    }

                    function as(t) {
                        return t === !0 || t === !1 || ys(t) && ku.call(t) == Lt
                    }

                    function ss(t) {
                        return ys(t) && ku.call(t) == Rt
                    }

                    function hs(t) {
                        return !!t && 1 === t.nodeType && ys(t) && !Es(t)
                    }

                    function us(t) {
                        if (rs(t) && (gl(t) || Rs(t) || fs(t.splice) || is(t) || vl(t))) return !t.length;
                        if (ys(t)) {
                            var e = Vr(t);
                            if (e == Bt || e == Ft) return !t.size
                        }
                        for (var i in t)
                            if (Pu.call(t, i)) return !1;
                        return !(pc && nh(t).length)
                    }

                    function cs(t, e) {
                        return tn(t, e)
                    }

                    function ls(t, e, i) {
                        i = "function" == typeof i ? i : K;
                        var n = i ? i(t, e) : K;
                        return n === K ? tn(t, e, i) : !!n
                    }

                    function ps(t) {
                        return ys(t) ? ku.call(t) == kt || "string" == typeof t.message && "string" == typeof t.name : !1
                    }

                    function ds(t) {
                        return "number" == typeof t && Zu(t)
                    }

                    function fs(t) {
                        var e = vs(t) ? ku.call(t) : "";
                        return e == It || e == Dt
                    }

                    function ms(t) {
                        return "number" == typeof t && t == Ns(t)
                    }

                    function gs(t) {
                        return "number" == typeof t && t > -1 && t % 1 == 0 && wt >= t
                    }

                    function vs(t) {
                        var e = typeof t;
                        return !!t && ("object" == e || "function" == e)
                    }

                    function ys(t) {
                        return !!t && "object" == typeof t
                    }

                    function _s(t) {
                        return ys(t) && Vr(t) == Bt
                    }

                    function bs(t, e) {
                        return t === e || nn(t, e, jr(e))
                    }

                    function xs(t, e, i) {
                        return i = "function" == typeof i ? i : K, nn(t, e, jr(e), i)
                    }

                    function ws(t) {
                        return As(t) && t != +t
                    }

                    function Ms(t) {
                        if (Rc(t)) throw new _u("This method is not supported with `core-js`. Try https://github.com/es-shims.");
                        return rn(t)
                    }

                    function Ss(t) {
                        return null === t
                    }

                    function Ts(t) {
                        return null == t
                    }

                    function As(t) {
                        return "number" == typeof t || ys(t) && ku.call(t) == Ot
                    }

                    function Es(t) {
                        if (!ys(t) || ku.call(t) != jt || F(t)) return !1;
                        var e = Nr(t);
                        if (null === e) return !0;
                        var i = Pu.call(e, "constructor") && e.constructor;
                        return "function" == typeof i && i instanceof i && Cu.call(i) == Ru
                    }

                    function Cs(t) {
                        return vs(t) && ku.call(t) == Nt
                    }

                    function Ps(t) {
                        return ms(t) && t >= -wt && wt >= t
                    }

                    function Ls(t) {
                        return ys(t) && Vr(t) == Ft
                    }

                    function Rs(t) {
                        return "string" == typeof t || !gl(t) && ys(t) && ku.call(t) == Vt
                    }

                    function ks(t) {
                        return "symbol" == typeof t || ys(t) && ku.call(t) == Gt
                    }

                    function Is(t) {
                        return ys(t) && gs(t.length) && !!Si[ku.call(t)]
                    }

                    function Ds(t) {
                        return t === K
                    }

                    function Bs(t) {
                        return ys(t) && Vr(t) == zt
                    }

                    function Os(t) {
                        return ys(t) && ku.call(t) == Ht
                    }

                    function js(t) {
                        if (!t) return [];
                        if (rs(t)) return Rs(t) ? q(t) : ir(t);
                        if (Vu && t[Vu]) return V(t[Vu]());
                        var e = Vr(t),
                            i = e == Bt ? G : e == Ft ? H : gh;
                        return i(t)
                    }

                    function Us(t) {
                        if (!t) return 0 === t ? t : 0;
                        if (t = Vs(t), t === xt || t === -xt) {
                            var e = 0 > t ? -1 : 1;
                            return e * Mt
                        }
                        return t === t ? t : 0
                    }

                    function Ns(t) {
                        var e = Us(t),
                            i = e % 1;
                        return e === e ? i ? e - i : e : 0
                    }

                    function Fs(t) {
                        return t ? Ai(Ns(t), 0, Tt) : 0
                    }

                    function Vs(t) {
                        if ("number" == typeof t) return t;
                        if (ks(t)) return St;
                        if (vs(t)) {
                            var e = fs(t.valueOf) ? t.valueOf() : t;
                            t = vs(e) ? e + "" : e
                        }
                        if ("string" != typeof t) return 0 === t ? t : +t;
                        t = t.replace(ve, "");
                        var i = Ae.test(t);
                        return i || Ce.test(t) ? Ri(t.slice(2), i ? 2 : 8) : Te.test(t) ? St : +t
                    }

                    function Gs(t) {
                        return nr(t, rh(t))
                    }

                    function zs(t) {
                        return Ai(Ns(t), -wt, wt)
                    }

                    function Hs(t) {
                        return null == t ? "" : kn(t)
                    }

                    function Ws(t, e) {
                        var i = Pi(t);
                        return e ? mi(i, e) : i
                    }

                    function Xs(t, e) {
                        return y(t, Br(e, 3), Gi)
                    }

                    function qs(t, e) {
                        return y(t, Br(e, 3), zi)
                    }

                    function Ys(t, e) {
                        return null == t ? t : Sc(t, Br(e, 3), rh)
                    }

                    function Zs(t, e) {
                        return null == t ? t : Tc(t, Br(e, 3), rh)
                    }

                    function Ks(t, e) {
                        return t && Gi(t, Br(e, 3))
                    }

                    function Js(t, e) {
                        return t && zi(t, Br(e, 3))
                    }

                    function Qs(t) {
                        return null == t ? [] : Hi(t, nh(t))
                    }

                    function $s(t) {
                        return null == t ? [] : Hi(t, rh(t))
                    }

                    function th(t, e, i) {
                        var n = null == t ? K : Wi(t, e);
                        return n === K ? i : n
                    }

                    function eh(t, e) {
                        return null != t && zr(t, e, Yi)
                    }

                    function ih(t, e) {
                        return null != t && zr(t, e, Zi)
                    }

                    function nh(t) {
                        var e = io(t);
                        if (!e && !rs(t)) return an(t);
                        var i = qr(t),
                            n = !!i,
                            r = i || [],
                            o = r.length;
                        for (var a in t) !Yi(t, a) || n && ("length" == a || Kr(a, o)) || e && "constructor" == a || r.push(a);
                        return r
                    }

                    function rh(t) {
                        for (var e = -1, i = io(t), n = sn(t), r = n.length, o = qr(t), a = !!o, s = o || [], h = s.length; ++e < r;) {
                            var u = n[e];
                            a && ("length" == u || Kr(u, h)) || "constructor" == u && (i || !Pu.call(t, u)) || s.push(u)
                        }
                        return s
                    }

                    function oh(t, e) {
                        var i = {};
                        return e = Br(e, 3), Gi(t, function(t, n, r) {
                            i[e(t, n, r)] = t
                        }), i
                    }

                    function ah(t, e) {
                        var i = {};
                        return e = Br(e, 3), Gi(t, function(t, n, r) {
                            i[n] = e(t, n, r)
                        }), i
                    }

                    function sh(t, e) {
                        return e = Br(e), vn(t, function(t, i) {
                            return !e(t, i)
                        })
                    }

                    function hh(t, e) {
                        return null == t ? {} : vn(t, Br(e))
                    }

                    function uh(t, e, i) {
                        e = Qr(e, t) ? [e] : Gn(e);
                        var n = -1,
                            r = e.length;
                        for (r || (t = K, r = 1); ++n < r;) {
                            var o = null == t ? K : t[uo(e[n])];
                            o === K && (n = r, o = i), t = fs(o) ? o.call(t) : o
                        }
                        return t
                    }

                    function ch(t, e, i) {
                        return null == t ? t : Tn(t, e, i)
                    }

                    function lh(t, e, i, n) {
                        return n = "function" == typeof n ? n : K, null == t ? t : Tn(t, e, i, n)
                    }

                    function ph(t, e, i) {
                        var n = gl(t) || Is(t);
                        if (e = Br(e, 4), null == i)
                            if (n || vs(t)) {
                                var r = t.constructor;
                                i = n ? gl(t) ? new r : [] : fs(r) ? Pi(Nr(t)) : {}
                            } else i = {};
                        return (n ? s : Gi)(t, function(t, n, r) {
                            return e(i, t, n, r)
                        }), i
                    }

                    function dh(t, e) {
                        return null == t ? !0 : Dn(t, e)
                    }

                    function fh(t, e, i) {
                        return null == t ? t : Bn(t, e, Vn(i))
                    }

                    function mh(t, e, i, n) {
                        return n = "function" == typeof n ? n : K, null == t ? t : Bn(t, e, Vn(i), n)
                    }

                    function gh(t) {
                        return t ? P(t, nh(t)) : []
                    }

                    function vh(t) {
                        return null == t ? [] : P(t, rh(t))
                    }

                    function yh(t, e, i) {
                        return i === K && (i = e, e = K), i !== K && (i = Vs(i), i = i === i ? i : 0), e !== K && (e = Vs(e), e = e === e ? e : 0), Ai(Vs(t), e, i)
                    }

                    function _h(t, e, i) {
                        return e = Vs(e) || 0, i === K ? (i = e, e = 0) : i = Vs(i) || 0, t = Vs(t), Ki(t, e, i)
                    }

                    function bh(t, e, i) {
                        if (i && "boolean" != typeof i && Jr(t, e, i) && (e = i = K), i === K && ("boolean" == typeof e ? (i = e, e = K) : "boolean" == typeof t && (i = t, t = K)), t === K && e === K ? (t = 0, e = 1) : (t = Vs(t) || 0, e === K ? (e = t, t = 0) : e = Vs(e) || 0), t > e) {
                            var n = t;
                            t = e, e = n
                        }
                        if (i || t % 1 || e % 1) {
                            var r = ec();
                            return $u(t + r * (e - t + Li("1e-" + ((r + "").length - 1))), e)
                        }
                        return wn(t, e)
                    }

                    function xh(t) {
                        return zl(Hs(t).toLowerCase())
                    }

                    function wh(t) {
                        return t = Hs(t), t && t.replace(Le, B).replace(vi, "")
                    }

                    function Mh(t, e, i) {
                        t = Hs(t), e = kn(e);
                        var n = t.length;
                        return i = i === K ? n : Ai(Ns(i), 0, n), i -= e.length, i >= 0 && t.indexOf(e, i) == i
                    }

                    function Sh(t) {
                        return t = Hs(t), t && he.test(t) ? t.replace(ae, O) : t
                    }

                    function Th(t) {
                        return t = Hs(t), t && ge.test(t) ? t.replace(me, "\\$&") : t
                    }

                    function Ah(t, e, i) {
                        t = Hs(t), e = Ns(e);
                        var n = e ? X(t) : 0;
                        if (!e || n >= e) return t;
                        var r = (e - n) / 2;
                        return br(qu(r), i) + t + br(Xu(r), i)
                    }

                    function Eh(t, e, i) {
                        t = Hs(t), e = Ns(e);
                        var n = e ? X(t) : 0;
                        return e && e > n ? t + br(e - n, i) : t
                    }

                    function Ch(t, e, i) {
                        t = Hs(t), e = Ns(e);
                        var n = e ? X(t) : 0;
                        return e && e > n ? br(e - n, i) + t : t
                    }

                    function Ph(t, e, i) {
                        return i || null == e ? e = 0 : e && (e = +e), t = Hs(t).replace(ve, ""), tc(t, e || (Se.test(t) ? 16 : 10))
                    }

                    function Lh(t, e, i) {
                        return e = (i ? Jr(t, e, i) : e === K) ? 1 : Ns(e), Sn(Hs(t), e)
                    }

                    function Rh() {
                        var t = arguments,
                            e = Hs(t[0]);
                        return t.length < 3 ? e : ic.call(e, t[1], t[2])
                    }

                    function kh(t, e, i) {
                        return i && "number" != typeof i && Jr(t, e, i) && (e = i = K), (i = i === K ? Tt : i >>> 0) ? (t = Hs(t), t && ("string" == typeof e || null != e && !Cs(e)) && (e = kn(e), "" == e && bi.test(t)) ? zn(q(t), 0, i) : rc.call(t, e, i)) : []
                    }

                    function Ih(t, e, i) {
                        return t = Hs(t), i = Ai(Ns(i), 0, t.length), t.lastIndexOf(kn(e), i) == i
                    }

                    function Dh(t, i, n) {
                        var r = e.templateSettings;
                        n && Jr(t, i, n) && (i = K), t = Hs(t), i = wl({}, i, r, ci);
                        var o, a, s = wl({}, i.imports, r.imports, ci),
                            h = nh(s),
                            u = P(s, h),
                            c = 0,
                            l = i.interpolate || Re,
                            p = "__p += '",
                            d = xu((i.escape || Re).source + "|" + l.source + "|" + (l === le ? we : Re).source + "|" + (i.evaluate || Re).source + "|$", "g"),
                            f = "//# sourceURL=" + ("sourceURL" in i ? i.sourceURL : "lodash.templateSources[" + ++Mi + "]") + "\n";
                        t.replace(d, function(e, i, n, r, s, h) {
                            return n || (n = r), p += t.slice(c, h).replace(ke, j), i && (o = !0, p += "' +\n__e(" + i + ") +\n'"), s && (a = !0, p += "';\n" + s + ";\n__p += '"), n && (p += "' +\n((__t = (" + n + ")) == null ? '' : __t) +\n'"), c = h + e.length, e
                        }), p += "';\n";
                        var m = i.variable;
                        m || (p = "with (obj) {\n" + p + "\n}\n"), p = (a ? p.replace(ie, "") : p).replace(ne, "$1").replace(re, "$1;"), p = "function(" + (m || "obj") + ") {\n" + (m ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (o ? ", __e = _.escape" : "") + (a ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + p + "return __p\n}";
                        var g = Hl(function() {
                            return Function(h, f + "return " + p).apply(K, u)
                        });
                        if (g.source = p, ps(g)) throw g;
                        return g
                    }

                    function Bh(t) {
                        return Hs(t).toLowerCase()
                    }

                    function Oh(t) {
                        return Hs(t).toUpperCase()
                    }

                    function jh(t, e, i) {
                        if (t = Hs(t), t && (i || e === K)) return t.replace(ve, "");
                        if (!t || !(e = kn(e))) return t;
                        var n = q(t),
                            r = q(e),
                            o = R(n, r),
                            a = k(n, r) + 1;
                        return zn(n, o, a).join("")
                    }

                    function Uh(t, e, i) {
                        if (t = Hs(t), t && (i || e === K)) return t.replace(_e, "");
                        if (!t || !(e = kn(e))) return t;
                        var n = q(t),
                            r = k(n, q(e)) + 1;
                        return zn(n, 0, r).join("")
                    }

                    function Nh(t, e, i) {
                        if (t = Hs(t), t && (i || e === K)) return t.replace(ye, "");
                        if (!t || !(e = kn(e))) return t;
                        var n = q(t),
                            r = R(n, q(e));
                        return zn(n, r).join("")
                    }

                    function Fh(t, e) {
                        var i = ft,
                            n = mt;
                        if (vs(e)) {
                            var r = "separator" in e ? e.separator : r;
                            i = "length" in e ? Ns(e.length) : i, n = "omission" in e ? kn(e.omission) : n
                        }
                        t = Hs(t);
                        var o = t.length;
                        if (bi.test(t)) {
                            var a = q(t);
                            o = a.length
                        }
                        if (i >= o) return t;
                        var s = i - X(n);
                        if (1 > s) return n;
                        var h = a ? zn(a, 0, s).join("") : t.slice(0, s);
                        if (r === K) return h + n;
                        if (a && (s += h.length - s), Cs(r)) {
                            if (t.slice(s).search(r)) {
                                var u, c = h;
                                for (r.global || (r = xu(r.source, Hs(Me.exec(r)) + "g")), r.lastIndex = 0; u = r.exec(c);) var l = u.index;
                                h = h.slice(0, l === K ? s : l)
                            }
                        } else if (t.indexOf(kn(r), s) != s) {
                            var p = h.lastIndexOf(r);
                            p > -1 && (h = h.slice(0, p))
                        }
                        return h + n
                    }

                    function Vh(t) {
                        return t = Hs(t), t && se.test(t) ? t.replace(oe, Y) : t
                    }

                    function Gh(t, e, i) {
                        return t = Hs(t), e = i ? K : e, e === K && (e = xi.test(t) ? _i : be), t.match(e) || []
                    }

                    function zh(t) {
                        var e = t ? t.length : 0,
                            i = Br();
                        return t = e ? d(t, function(t) {
                            if ("function" != typeof t[1]) throw new wu($);
                            return [i(t[0]), t[1]]
                        }) : [], Wa(function(i) {
                            for (var n = -1; ++n < e;) {
                                var r = t[n];
                                if (o(r[0], this, i)) return o(r[1], this, i)
                            }
                        })
                    }

                    function Hh(t) {
                        return Ci(Ei(t, !0))
                    }

                    function Wh(t) {
                        return function() {
                            return t
                        }
                    }

                    function Xh(t) {
                        return t
                    }

                    function qh(t) {
                        return on("function" == typeof t ? t : Ei(t, !0))
                    }

                    function Yh(t) {
                        return cn(Ei(t, !0))
                    }

                    function Zh(t, e) {
                        return ln(t, Ei(e, !0))
                    }

                    function Kh(t, e, i) {
                        var n = nh(e),
                            r = Hi(e, n);
                        null != i || vs(e) && (r.length || !n.length) || (i = e, e = t, t = this, r = Hi(e, nh(e)));
                        var o = !(vs(i) && "chain" in i && !i.chain),
                            a = fs(t);
                        return s(r, function(i) {
                            var n = e[i];
                            t[i] = n, a && (t.prototype[i] = function() {
                                var e = this.__chain__;
                                if (o || e) {
                                    var i = t(this.__wrapped__),
                                        r = i.__actions__ = ir(this.__actions__);
                                    return r.push({
                                        func: n,
                                        args: arguments,
                                        thisArg: t
                                    }), i.__chain__ = e, i
                                }
                                return n.apply(t, f([this.value()], arguments))
                            })
                        }), t
                    }

                    function Jh() {
                        return Ui._ === this && (Ui._ = Iu), this
                    }

                    function Qh() {}

                    function $h(t) {
                        return t = Ns(t), Wa(function(e) {
                            return fn(e, t)
                        })
                    }

                    function tu(t) {
                        return Qr(t) ? yn(uo(t)) : _n(t)
                    }

                    function eu(t) {
                        return function(e) {
                            return null == t ? K : Wi(t, e)
                        }
                    }

                    function iu() {
                        return []
                    }

                    function nu() {
                        return !1
                    }

                    function ru() {
                        return {}
                    }

                    function ou() {
                        return ""
                    }

                    function au() {
                        return !0
                    }

                    function su(t, e) {
                        if (t = Ns(t), 1 > t || t > wt) return [];
                        var i = Tt,
                            n = $u(t, Tt);
                        e = Br(e), t -= Tt;
                        for (var r = A(n, e); ++i < t;) e(i);
                        return r
                    }

                    function hu(t) {
                        return gl(t) ? d(t, uo) : ks(t) ? [t] : ir(Ic(t))
                    }

                    function uu(t) {
                        var e = ++Lu;
                        return Hs(t) + e
                    }

                    function cu(t) {
                        return t && t.length ? Oi(t, Xh, qi) : K
                    }

                    function lu(t, e) {
                        return t && t.length ? Oi(t, Br(e), qi) : K
                    }

                    function pu(t) {
                        return w(t, Xh)
                    }

                    function du(t, e) {
                        return w(t, Br(e))
                    }

                    function fu(t) {
                        return t && t.length ? Oi(t, Xh, hn) : K
                    }

                    function mu(t, e) {
                        return t && t.length ? Oi(t, Br(e), hn) : K
                    }

                    function gu(t) {
                        return t && t.length ? T(t, Xh) : 0
                    }

                    function vu(t, e) {
                        return t && t.length ? T(t, Br(e)) : 0
                    }
                    t = t ? Ni.defaults({}, t, Ni.pick(Ui, wi)) : Ui;
                    var yu = t.Date,
                        _u = t.Error,
                        bu = t.Math,
                        xu = t.RegExp,
                        wu = t.TypeError,
                        Mu = t.Array.prototype,
                        Su = t.Object.prototype,
                        Tu = t.String.prototype,
                        Au = t["__core-js_shared__"],
                        Eu = function() {
                            var t = /[^.]+$/.exec(Au && Au.keys && Au.keys.IE_PROTO || "");
                            return t ? "Symbol(src)_1." + t : ""
                        }(),
                        Cu = t.Function.prototype.toString,
                        Pu = Su.hasOwnProperty,
                        Lu = 0,
                        Ru = Cu.call(Object),
                        ku = Su.toString,
                        Iu = Ui._,
                        Du = xu("^" + Cu.call(Pu).replace(me, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                        Bu = Di ? t.Buffer : K,
                        Ou = t.Reflect,
                        ju = t.Symbol,
                        Uu = t.Uint8Array,
                        Nu = Ou ? Ou.enumerate : K,
                        Fu = Object.getOwnPropertySymbols,
                        Vu = "symbol" == typeof(Vu = ju && ju.iterator) ? Vu : K,
                        Gu = Object.create,
                        zu = Su.propertyIsEnumerable,
                        Hu = Mu.splice,
                        Wu = function(e, i) {
                            return t.setTimeout.call(Ui, e, i)
                        },
                        Xu = bu.ceil,
                        qu = bu.floor,
                        Yu = Object.getPrototypeOf,
                        Zu = t.isFinite,
                        Ku = Mu.join,
                        Ju = Object.keys,
                        Qu = bu.max,
                        $u = bu.min,
                        tc = t.parseInt,
                        ec = bu.random,
                        ic = Tu.replace,
                        nc = Mu.reverse,
                        rc = Tu.split,
                        oc = Ur(t, "DataView"),
                        ac = Ur(t, "Map"),
                        sc = Ur(t, "Promise"),
                        hc = Ur(t, "Set"),
                        uc = Ur(t, "WeakMap"),
                        cc = Ur(Object, "create"),
                        lc = uc && new uc,
                        pc = !zu.call({
                            valueOf: 1
                        }, "valueOf"),
                        dc = {},
                        fc = co(oc),
                        mc = co(ac),
                        gc = co(sc),
                        vc = co(hc),
                        yc = co(uc),
                        _c = ju ? ju.prototype : K,
                        bc = _c ? _c.valueOf : K,
                        xc = _c ? _c.toString : K;
                    e.templateSettings = {
                        escape: ue,
                        evaluate: ce,
                        interpolate: le,
                        variable: "",
                        imports: {
                            _: e
                        }
                    }, e.prototype = i.prototype, e.prototype.constructor = e, I.prototype = Pi(i.prototype), I.prototype.constructor = I, Ie.prototype = Pi(i.prototype), Ie.prototype.constructor = Ie, je.prototype.clear = Ue, je.prototype["delete"] = Ne, je.prototype.get = Fe, je.prototype.has = Ve, je.prototype.set = Ge, ze.prototype.clear = He, ze.prototype["delete"] = We, ze.prototype.get = Xe, ze.prototype.has = qe, ze.prototype.set = Ye, Ze.prototype.clear = Ke, Ze.prototype["delete"] = Je, Ze.prototype.get = Qe, Ze.prototype.has = $e, Ze.prototype.set = ti, ei.prototype.add = ei.prototype.push = ii, ei.prototype.has = ni, ri.prototype.clear = oi, ri.prototype["delete"] = ai, ri.prototype.get = si, ri.prototype.has = hi, ri.prototype.set = ui;
                    var wc = sr(Gi),
                        Mc = sr(zi, !0),
                        Sc = hr(),
                        Tc = hr(!0);
                    Nu && !zu.call({
                        valueOf: 1
                    }, "valueOf") && (sn = function(t) {
                        return V(Nu(t))
                    });
                    var Ac = lc ? function(t, e) {
                            return lc.set(t, e), t
                        } : Xh,
                        Ec = hc && 1 / H(new hc([, -0]))[1] == xt ? function(t) {
                            return new hc(t)
                        } : Qh,
                        Cc = lc ? function(t) {
                            return lc.get(t)
                        } : Qh,
                        Pc = yn("length");
                    Fu || (Fr = iu);
                    var Lc = Fu ? function(t) {
                        for (var e = []; t;) f(e, Fr(t)), t = Nr(t);
                        return e
                    } : Fr;
                    (oc && Vr(new oc(new ArrayBuffer(1))) != Xt || ac && Vr(new ac) != Bt || sc && Vr(sc.resolve()) != Ut || hc && Vr(new hc) != Ft || uc && Vr(new uc) != zt) && (Vr = function(t) {
                        var e = ku.call(t),
                            i = e == jt ? t.constructor : K,
                            n = i ? co(i) : K;
                        if (n) switch (n) {
                            case fc:
                                return Xt;
                            case mc:
                                return Bt;
                            case gc:
                                return Ut;
                            case vc:
                                return Ft;
                            case yc:
                                return zt
                        }
                        return e
                    });
                    var Rc = Au ? fs : nu,
                        kc = function() {
                            var t = 0,
                                e = 0;
                            return function(i, n) {
                                var r = Da(),
                                    o = vt - (r - e);
                                if (e = r, o > 0) {
                                    if (++t >= gt) return i
                                } else t = 0;
                                return Ac(i, n)
                            }
                        }(),
                        Ic = Ga(function(t) {
                            var e = [];
                            return Hs(t).replace(fe, function(t, i, n, r) {
                                e.push(n ? r.replace(xe, "$1") : i || t)
                            }), e
                        }),
                        Dc = Wa(function(t, e) {
                            return os(t) ? Ii(t, Vi(e, 1, os, !0)) : []
                        }),
                        Bc = Wa(function(t, e) {
                            var i = Ro(e);
                            return os(i) && (i = K), os(t) ? Ii(t, Vi(e, 1, os, !0), Br(i)) : []
                        }),
                        Oc = Wa(function(t, e) {
                            var i = Ro(e);
                            return os(i) && (i = K), os(t) ? Ii(t, Vi(e, 1, os, !0), K, i) : []
                        }),
                        jc = Wa(function(t) {
                            var e = d(t, Fn);
                            return e.length && e[0] === t[0] ? Ji(e) : []
                        }),
                        Uc = Wa(function(t) {
                            var e = Ro(t),
                                i = d(t, Fn);
                            return e === Ro(i) ? e = K : i.pop(), i.length && i[0] === t[0] ? Ji(i, Br(e)) : []
                        }),
                        Nc = Wa(function(t) {
                            var e = Ro(t),
                                i = d(t, Fn);
                            return e === Ro(i) ? e = K : i.pop(), i.length && i[0] === t[0] ? Ji(i, K, e) : []
                        }),
                        Fc = Wa(Do),
                        Vc = Wa(function(t, e) {
                            e = Vi(e, 1);
                            var i = t ? t.length : 0,
                                n = yi(t, e);
                            return xn(t, d(e, function(t) {
                                return Kr(t, i) ? +t : t
                            }).sort(Qn)), n
                        }),
                        Gc = Wa(function(t) {
                            return In(Vi(t, 1, os, !0))
                        }),
                        zc = Wa(function(t) {
                            var e = Ro(t);
                            return os(e) && (e = K), In(Vi(t, 1, os, !0), Br(e))
                        }),
                        Hc = Wa(function(t) {
                            var e = Ro(t);
                            return os(e) && (e = K), In(Vi(t, 1, os, !0), K, e)
                        }),
                        Wc = Wa(function(t, e) {
                            return os(t) ? Ii(t, e) : []
                        }),
                        Xc = Wa(function(t) {
                            return Un(c(t, os))
                        }),
                        qc = Wa(function(t) {
                            var e = Ro(t);
                            return os(e) && (e = K), Un(c(t, os), Br(e))
                        }),
                        Yc = Wa(function(t) {
                            var e = Ro(t);
                            return os(e) && (e = K), Un(c(t, os), K, e)
                        }),
                        Zc = Wa(ia),
                        Kc = Wa(function(t) {
                            var e = t.length,
                                i = e > 1 ? t[e - 1] : K;
                            return i = "function" == typeof i ? (t.pop(), i) : K, na(t, i)
                        }),
                        Jc = Wa(function(t) {
                            t = Vi(t, 1);
                            var e = t.length,
                                i = e ? t[0] : 0,
                                n = this.__wrapped__,
                                r = function(e) {
                                    return yi(e, t)
                                };
                            return !(e > 1 || this.__actions__.length) && n instanceof Ie && Kr(i) ? (n = n.slice(i, +i + (e ? 1 : 0)), n.__actions__.push({
                                func: ha,
                                args: [r],
                                thisArg: K
                            }), new I(n, this.__chain__).thru(function(t) {
                                return e && !t.length && t.push(K), t
                            })) : this.thru(r)
                        }),
                        Qc = or(function(t, e, i) {
                            Pu.call(t, i) ? ++t[i] : t[i] = 1
                        }),
                        $c = fr(xo),
                        tl = fr(wo),
                        el = or(function(t, e, i) {
                            Pu.call(t, i) ? t[i].push(e) : t[i] = [e]
                        }),
                        il = Wa(function(t, e, i) {
                            var n = -1,
                                r = "function" == typeof e,
                                a = Qr(e),
                                s = rs(t) ? Array(t.length) : [];
                            return wc(t, function(t) {
                                var h = r ? e : a && null != t ? t[e] : K;
                                s[++n] = h ? o(h, t, i) : $i(t, e, i)
                            }), s
                        }),
                        nl = or(function(t, e, i) {
                            t[i] = e
                        }),
                        rl = or(function(t, e, i) {
                            t[i ? 0 : 1].push(e)
                        }, function() {
                            return [
                                [],
                                []
                            ]
                        }),
                        ol = Wa(function(t, e) {
                            if (null == t) return [];
                            var i = e.length;
                            return i > 1 && Jr(t, e[0], e[1]) ? e = [] : i > 2 && Jr(e[0], e[1], e[2]) && (e = [e[0]]), e = 1 == e.length && gl(e[0]) ? e[0] : Vi(e, 1, Zr), mn(t, e, [])
                        }),
                        al = Wa(function(t, e, i) {
                            var n = it;
                            if (i.length) {
                                var r = z(i, Dr(al));
                                n |= st
                            }
                            return Er(t, n, e, i, r)
                        }),
                        sl = Wa(function(t, e, i) {
                            var n = it | nt;
                            if (i.length) {
                                var r = z(i, Dr(sl));
                                n |= st
                            }
                            return Er(e, n, t, i, r)
                        }),
                        hl = Wa(function(t, e) {
                            return ki(t, 1, e)
                        }),
                        ul = Wa(function(t, e, i) {
                            return ki(t, Vs(e) || 0, i)
                        });
                    Ga.Cache = Ze;
                    var cl = Wa(function(t, e) {
                            e = 1 == e.length && gl(e[0]) ? d(e[0], C(Br())) : d(Vi(e, 1, Zr), C(Br()));
                            var i = e.length;
                            return Wa(function(n) {
                                for (var r = -1, a = $u(n.length, i); ++r < a;) n[r] = e[r].call(this, n[r]);
                                return o(t, this, n)
                            })
                        }),
                        ll = Wa(function(t, e) {
                            var i = z(e, Dr(ll));
                            return Er(t, st, K, e, i)
                        }),
                        pl = Wa(function(t, e) {
                            var i = z(e, Dr(pl));
                            return Er(t, ht, K, e, i)
                        }),
                        dl = Wa(function(t, e) {
                            return Er(t, ct, K, K, K, Vi(e, 1))
                        }),
                        fl = Mr(qi),
                        ml = Mr(function(t, e) {
                            return t >= e
                        }),
                        gl = Array.isArray,
                        vl = Bu ? function(t) {
                            return t instanceof Bu
                        } : nu,
                        yl = Mr(hn),
                        _l = Mr(function(t, e) {
                            return e >= t
                        }),
                        bl = ar(function(t, e) {
                            if (pc || io(e) || rs(e)) return void nr(e, nh(e), t);
                            for (var i in e) Pu.call(e, i) && pi(t, i, e[i])
                        }),
                        xl = ar(function(t, e) {
                            if (pc || io(e) || rs(e)) return void nr(e, rh(e), t);
                            for (var i in e) pi(t, i, e[i])
                        }),
                        wl = ar(function(t, e, i, n) {
                            nr(e, rh(e), t, n)
                        }),
                        Ml = ar(function(t, e, i, n) {
                            nr(e, nh(e), t, n)
                        }),
                        Sl = Wa(function(t, e) {
                            return yi(t, Vi(e, 1))
                        }),
                        Tl = Wa(function(t) {
                            return t.push(K, ci), o(wl, K, t)
                        }),
                        Al = Wa(function(t) {
                            return t.push(K, ao), o(Rl, K, t)
                        }),
                        El = vr(function(t, e, i) {
                            t[e] = i
                        }, Wh(Xh)),
                        Cl = vr(function(t, e, i) {
                            Pu.call(t, e) ? t[e].push(i) : t[e] = [i]
                        }, Br),
                        Pl = Wa($i),
                        Ll = ar(function(t, e, i) {
                            pn(t, e, i)
                        }),
                        Rl = ar(function(t, e, i, n) {
                            pn(t, e, i, n)
                        }),
                        kl = Wa(function(t, e) {
                            return null == t ? {} : (e = d(Vi(e, 1), uo), gn(t, Ii(kr(t), e)))
                        }),
                        Il = Wa(function(t, e) {
                            return null == t ? {} : gn(t, d(Vi(e, 1), uo))
                        }),
                        Dl = Ar(nh),
                        Bl = Ar(rh),
                        Ol = lr(function(t, e, i) {
                            return e = e.toLowerCase(), t + (i ? xh(e) : e)
                        }),
                        jl = lr(function(t, e, i) {
                            return t + (i ? "-" : "") + e.toLowerCase()
                        }),
                        Ul = lr(function(t, e, i) {
                            return t + (i ? " " : "") + e.toLowerCase()
                        }),
                        Nl = cr("toLowerCase"),
                        Fl = lr(function(t, e, i) {
                            return t + (i ? "_" : "") + e.toLowerCase()
                        }),
                        Vl = lr(function(t, e, i) {
                            return t + (i ? " " : "") + zl(e)
                        }),
                        Gl = lr(function(t, e, i) {
                            return t + (i ? " " : "") + e.toUpperCase()
                        }),
                        zl = cr("toUpperCase"),
                        Hl = Wa(function(t, e) {
                            try {
                                return o(t, K, e)
                            } catch (i) {
                                return ps(i) ? i : new _u(i)
                            }
                        }),
                        Wl = Wa(function(t, e) {
                            return s(Vi(e, 1), function(e) {
                                e = uo(e), t[e] = al(t[e], t)
                            }), t
                        }),
                        Xl = mr(),
                        ql = mr(!0),
                        Yl = Wa(function(t, e) {
                            return function(i) {
                                return $i(i, t, e)
                            }
                        }),
                        Zl = Wa(function(t, e) {
                            return function(i) {
                                return $i(t, i, e)
                            }
                        }),
                        Kl = _r(d),
                        Jl = _r(u),
                        Ql = _r(v),
                        $l = wr(),
                        tp = wr(!0),
                        ep = yr(function(t, e) {
                            return t + e
                        }),
                        ip = Tr("ceil"),
                        np = yr(function(t, e) {
                            return t / e
                        }),
                        rp = Tr("floor"),
                        op = yr(function(t, e) {
                            return t * e
                        }),
                        ap = Tr("round"),
                        sp = yr(function(t, e) {
                            return t - e
                        });
                    return e.after = Ba, e.ary = Oa, e.assign = bl, e.assignIn = xl, e.assignInWith = wl, e.assignWith = Ml, e.at = Sl, e.before = ja, e.bind = al, e.bindAll = Wl, e.bindKey = sl, e.castArray = Ka, e.chain = aa, e.chunk = po, e.compact = fo, e.concat = mo, e.cond = zh, e.conforms = Hh, e.constant = Wh, e.countBy = Qc, e.create = Ws, e.curry = Ua, e.curryRight = Na, e.debounce = Fa, e.defaults = Tl, e.defaultsDeep = Al, e.defer = hl, e.delay = ul, e.difference = Dc, e.differenceBy = Bc, e.differenceWith = Oc, e.drop = go, e.dropRight = vo, e.dropRightWhile = yo, e.dropWhile = _o, e.fill = bo, e.filter = va, e.flatMap = ya, e.flatMapDeep = _a, e.flatMapDepth = ba, e.flatten = Mo, e.flattenDeep = So, e.flattenDepth = To, e.flip = Va, e.flow = Xl, e.flowRight = ql, e.fromPairs = Ao, e.functions = Qs, e.functionsIn = $s, e.groupBy = el, e.initial = Po, e.intersection = jc, e.intersectionBy = Uc, e.intersectionWith = Nc, e.invert = El, e.invertBy = Cl, e.invokeMap = il, e.iteratee = qh, e.keyBy = nl, e.keys = nh, e.keysIn = rh, e.map = Sa, e.mapKeys = oh, e.mapValues = ah, e.matches = Yh, e.matchesProperty = Zh, e.memoize = Ga, e.merge = Ll, e.mergeWith = Rl, e.method = Yl, e.methodOf = Zl, e.mixin = Kh, e.negate = za, e.nthArg = $h, e.omit = kl, e.omitBy = sh, e.once = Ha, e.orderBy = Ta, e.over = Kl, e.overArgs = cl, e.overEvery = Jl, e.overSome = Ql, e.partial = ll, e.partialRight = pl, e.partition = rl, e.pick = Il, e.pickBy = hh, e.property = tu, e.propertyOf = eu, e.pull = Fc, e.pullAll = Do, e.pullAllBy = Bo, e.pullAllWith = Oo, e.pullAt = Vc, e.range = $l, e.rangeRight = tp, e.rearg = dl, e.reject = Ca, e.remove = jo, e.rest = Wa, e.reverse = Uo, e.sampleSize = La, e.set = ch, e.setWith = lh, e.shuffle = Ra, e.slice = No, e.sortBy = ol, e.sortedUniq = Xo, e.sortedUniqBy = qo, e.split = kh, e.spread = Xa, e.tail = Yo, e.take = Zo, e.takeRight = Ko, e.takeRightWhile = Jo, e.takeWhile = Qo, e.tap = sa, e.throttle = qa, e.thru = ha, e.toArray = js, e.toPairs = Dl, e.toPairsIn = Bl, e.toPath = hu, e.toPlainObject = Gs, e.transform = ph, e.unary = Ya, e.union = Gc, e.unionBy = zc, e.unionWith = Hc, e.uniq = $o, e.uniqBy = ta, e.uniqWith = ea, e.unset = dh, e.unzip = ia, e.unzipWith = na, e.update = fh, e.updateWith = mh, e.values = gh, e.valuesIn = vh, e.without = Wc, e.words = Gh, e.wrap = Za, e.xor = Xc, e.xorBy = qc, e.xorWith = Yc, e.zip = Zc, e.zipObject = ra, e.zipObjectDeep = oa, e.zipWith = Kc, e.entries = Dl, e.entriesIn = Bl, e.extend = xl, e.extendWith = wl, Kh(e, e), e.add = ep, e.attempt = Hl, e.camelCase = Ol, e.capitalize = xh, e.ceil = ip, e.clamp = yh, e.clone = Ja, e.cloneDeep = $a, e.cloneDeepWith = ts, e.cloneWith = Qa, e.deburr = wh, e.divide = np, e.endsWith = Mh, e.eq = es, e.escape = Sh, e.escapeRegExp = Th, e.every = ga, e.find = $c, e.findIndex = xo, e.findKey = Xs, e.findLast = tl, e.findLastIndex = wo, e.findLastKey = qs, e.floor = rp, e.forEach = xa, e.forEachRight = wa, e.forIn = Ys, e.forInRight = Zs, e.forOwn = Ks, e.forOwnRight = Js, e.get = th, e.gt = fl, e.gte = ml, e.has = eh, e.hasIn = ih, e.head = Eo, e.identity = Xh, e.includes = Ma, e.indexOf = Co, e.inRange = _h, e.invoke = Pl, e.isArguments = is, e.isArray = gl, e.isArrayBuffer = ns, e.isArrayLike = rs, e.isArrayLikeObject = os, e.isBoolean = as, e.isBuffer = vl, e.isDate = ss, e.isElement = hs, e.isEmpty = us, e.isEqual = cs, e.isEqualWith = ls, e.isError = ps, e.isFinite = ds, e.isFunction = fs, e.isInteger = ms, e.isLength = gs, e.isMap = _s, e.isMatch = bs, e.isMatchWith = xs, e.isNaN = ws, e.isNative = Ms, e.isNil = Ts, e.isNull = Ss, e.isNumber = As, e.isObject = vs, e.isObjectLike = ys, e.isPlainObject = Es, e.isRegExp = Cs, e.isSafeInteger = Ps, e.isSet = Ls, e.isString = Rs, e.isSymbol = ks, e.isTypedArray = Is, e.isUndefined = Ds, e.isWeakMap = Bs, e.isWeakSet = Os, e.join = Lo, e.kebabCase = jl, e.last = Ro, e.lastIndexOf = ko, e.lowerCase = Ul, e.lowerFirst = Nl, e.lt = yl, e.lte = _l, e.max = cu, e.maxBy = lu, e.mean = pu, e.meanBy = du, e.min = fu, e.minBy = mu, e.stubArray = iu, e.stubFalse = nu, e.stubObject = ru, e.stubString = ou, e.stubTrue = au, e.multiply = op, e.nth = Io, e.noConflict = Jh, e.noop = Qh, e.now = Da, e.pad = Ah, e.padEnd = Eh, e.padStart = Ch, e.parseInt = Ph, e.random = bh, e.reduce = Aa, e.reduceRight = Ea, e.repeat = Lh, e.replace = Rh, e.result = uh, e.round = ap, e.runInContext = Z, e.sample = Pa, e.size = ka, e.snakeCase = Fl, e.some = Ia, e.sortedIndex = Fo, e.sortedIndexBy = Vo, e.sortedIndexOf = Go, e.sortedLastIndex = zo, e.sortedLastIndexBy = Ho, e.sortedLastIndexOf = Wo, e.startCase = Vl, e.startsWith = Ih, e.subtract = sp, e.sum = gu, e.sumBy = vu, e.template = Dh, e.times = su, e.toFinite = Us, e.toInteger = Ns, e.toLength = Fs, e.toLower = Bh, e.toNumber = Vs, e.toSafeInteger = zs, e.toString = Hs, e.toUpper = Oh, e.trim = jh, e.trimEnd = Uh, e.trimStart = Nh, e.truncate = Fh, e.unescape = Vh, e.uniqueId = uu, e.upperCase = Gl, e.upperFirst = zl, e.each = xa, e.eachRight = wa, e.first = Eo, Kh(e, function() {
                        var t = {};
                        return Gi(e, function(i, n) {
                            Pu.call(e.prototype, n) || (t[n] = i)
                        }), t
                    }(), {
                        chain: !1
                    }), e.VERSION = J, s(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(t) {
                        e[t].placeholder = e
                    }), s(["drop", "take"], function(t, e) {
                        Ie.prototype[t] = function(i) {
                            var n = this.__filtered__;
                            if (n && !e) return new Ie(this);
                            i = i === K ? 1 : Qu(Ns(i), 0);
                            var r = this.clone();
                            return n ? r.__takeCount__ = $u(i, r.__takeCount__) : r.__views__.push({
                                size: $u(i, Tt),
                                type: t + (r.__dir__ < 0 ? "Right" : "")
                            }), r
                        }, Ie.prototype[t + "Right"] = function(e) {
                            return this.reverse()[t](e).reverse()
                        }
                    }), s(["filter", "map", "takeWhile"], function(t, e) {
                        var i = e + 1,
                            n = i == yt || i == bt;
                        Ie.prototype[t] = function(t) {
                            var e = this.clone();
                            return e.__iteratees__.push({
                                iteratee: Br(t, 3),
                                type: i
                            }), e.__filtered__ = e.__filtered__ || n, e
                        }
                    }), s(["head", "last"], function(t, e) {
                        var i = "take" + (e ? "Right" : "");
                        Ie.prototype[t] = function() {
                            return this[i](1).value()[0]
                        }
                    }), s(["initial", "tail"], function(t, e) {
                        var i = "drop" + (e ? "" : "Right");
                        Ie.prototype[t] = function() {
                            return this.__filtered__ ? new Ie(this) : this[i](1)
                        }
                    }), Ie.prototype.compact = function() {
                        return this.filter(Xh)
                    }, Ie.prototype.find = function(t) {
                        return this.filter(t).head()
                    }, Ie.prototype.findLast = function(t) {
                        return this.reverse().find(t)
                    }, Ie.prototype.invokeMap = Wa(function(t, e) {
                        return "function" == typeof t ? new Ie(this) : this.map(function(i) {
                            return $i(i, t, e)
                        })
                    }), Ie.prototype.reject = function(t) {
                        return t = Br(t, 3), this.filter(function(e) {
                            return !t(e)
                        })
                    }, Ie.prototype.slice = function(t, e) {
                        t = Ns(t);
                        var i = this;
                        return i.__filtered__ && (t > 0 || 0 > e) ? new Ie(i) : (0 > t ? i = i.takeRight(-t) : t && (i = i.drop(t)), e !== K && (e = Ns(e), i = 0 > e ? i.dropRight(-e) : i.take(e - t)), i)
                    }, Ie.prototype.takeRightWhile = function(t) {
                        return this.reverse().takeWhile(t).reverse()
                    }, Ie.prototype.toArray = function() {
                        return this.take(Tt)
                    }, Gi(Ie.prototype, function(t, i) {
                        var n = /^(?:filter|find|map|reject)|While$/.test(i),
                            r = /^(?:head|last)$/.test(i),
                            o = e[r ? "take" + ("last" == i ? "Right" : "") : i],
                            a = r || /^find/.test(i);
                        o && (e.prototype[i] = function() {
                            var i = this.__wrapped__,
                                s = r ? [1] : arguments,
                                h = i instanceof Ie,
                                u = s[0],
                                c = h || gl(i),
                                l = function(t) {
                                    var i = o.apply(e, f([t], s));
                                    return r && p ? i[0] : i
                                };
                            c && n && "function" == typeof u && 1 != u.length && (h = c = !1);
                            var p = this.__chain__,
                                d = !!this.__actions__.length,
                                m = a && !p,
                                g = h && !d;
                            if (!a && c) {
                                i = g ? i : new Ie(this);
                                var v = t.apply(i, s);
                                return v.__actions__.push({
                                    func: ha,
                                    args: [l],
                                    thisArg: K
                                }), new I(v, p)
                            }
                            return m && g ? t.apply(this, s) : (v = this.thru(l), m ? r ? v.value()[0] : v.value() : v)
                        })
                    }), s(["pop", "push", "shift", "sort", "splice", "unshift"], function(t) {
                        var i = Mu[t],
                            n = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru",
                            r = /^(?:pop|shift)$/.test(t);
                        e.prototype[t] = function() {
                            var t = arguments;
                            if (r && !this.__chain__) {
                                var e = this.value();
                                return i.apply(gl(e) ? e : [], t)
                            }
                            return this[n](function(e) {
                                return i.apply(gl(e) ? e : [], t)
                            })
                        }
                    }), Gi(Ie.prototype, function(t, i) {
                        var n = e[i];
                        if (n) {
                            var r = n.name + "",
                                o = dc[r] || (dc[r] = []);
                            o.push({
                                name: i,
                                func: n
                            })
                        }
                    }), dc[gr(K, nt).name] = [{
                        name: "wrapper",
                        func: K
                    }], Ie.prototype.clone = De, Ie.prototype.reverse = Be, Ie.prototype.value = Oe, e.prototype.at = Jc, e.prototype.chain = ua, e.prototype.commit = ca, e.prototype.next = la, e.prototype.plant = da, e.prototype.reverse = fa, e.prototype.toJSON = e.prototype.valueOf = e.prototype.value = ma, Vu && (e.prototype[Vu] = pa), e
                }
                var K, J = "4.13.1",
                    Q = 200,
                    $ = "Expected a function",
                    tt = "__lodash_hash_undefined__",
                    et = "__lodash_placeholder__",
                    it = 1,
                    nt = 2,
                    rt = 4,
                    ot = 8,
                    at = 16,
                    st = 32,
                    ht = 64,
                    ut = 128,
                    ct = 256,
                    lt = 512,
                    pt = 1,
                    dt = 2,
                    ft = 30,
                    mt = "...",
                    gt = 150,
                    vt = 16,
                    yt = 1,
                    _t = 2,
                    bt = 3,
                    xt = 1 / 0,
                    wt = 9007199254740991,
                    Mt = 1.7976931348623157e308,
                    St = NaN,
                    Tt = 4294967295,
                    At = Tt - 1,
                    Et = Tt >>> 1,
                    Ct = "[object Arguments]",
                    Pt = "[object Array]",
                    Lt = "[object Boolean]",
                    Rt = "[object Date]",
                    kt = "[object Error]",
                    It = "[object Function]",
                    Dt = "[object GeneratorFunction]",
                    Bt = "[object Map]",
                    Ot = "[object Number]",
                    jt = "[object Object]",
                    Ut = "[object Promise]",
                    Nt = "[object RegExp]",
                    Ft = "[object Set]",
                    Vt = "[object String]",
                    Gt = "[object Symbol]",
                    zt = "[object WeakMap]",
                    Ht = "[object WeakSet]",
                    Wt = "[object ArrayBuffer]",
                    Xt = "[object DataView]",
                    qt = "[object Float32Array]",
                    Yt = "[object Float64Array]",
                    Zt = "[object Int8Array]",
                    Kt = "[object Int16Array]",
                    Jt = "[object Int32Array]",
                    Qt = "[object Uint8Array]",
                    $t = "[object Uint8ClampedArray]",
                    te = "[object Uint16Array]",
                    ee = "[object Uint32Array]",
                    ie = /\b__p \+= '';/g,
                    ne = /\b(__p \+=) '' \+/g,
                    re = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                    oe = /&(?:amp|lt|gt|quot|#39|#96);/g,
                    ae = /[&<>"'`]/g,
                    se = RegExp(oe.source),
                    he = RegExp(ae.source),
                    ue = /<%-([\s\S]+?)%>/g,
                    ce = /<%([\s\S]+?)%>/g,
                    le = /<%=([\s\S]+?)%>/g,
                    pe = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                    de = /^\w*$/,
                    fe = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g,
                    me = /[\\^$.*+?()[\]{}|]/g,
                    ge = RegExp(me.source),
                    ve = /^\s+|\s+$/g,
                    ye = /^\s+/,
                    _e = /\s+$/,
                    be = /[a-zA-Z0-9]+/g,
                    xe = /\\(\\)?/g,
                    we = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                    Me = /\w*$/,
                    Se = /^0x/i,
                    Te = /^[-+]0x[0-9a-f]+$/i,
                    Ae = /^0b[01]+$/i,
                    Ee = /^\[object .+?Constructor\]$/,
                    Ce = /^0o[0-7]+$/i,
                    Pe = /^(?:0|[1-9]\d*)$/,
                    Le = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,
                    Re = /($^)/,
                    ke = /['\n\r\u2028\u2029\\]/g,
                    Ie = "\\ud800-\\udfff",
                    De = "\\u0300-\\u036f\\ufe20-\\ufe23",
                    Be = "\\u20d0-\\u20f0",
                    Oe = "\\u2700-\\u27bf",
                    je = "a-z\\xdf-\\xf6\\xf8-\\xff",
                    Ue = "\\xac\\xb1\\xd7\\xf7",
                    Ne = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",
                    Fe = "\\u2000-\\u206f",
                    Ve = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                    Ge = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                    ze = "\\ufe0e\\ufe0f",
                    He = Ue + Ne + Fe + Ve,
                    We = "['�]",
                    Xe = "[" + Ie + "]",
                    qe = "[" + He + "]",
                    Ye = "[" + De + Be + "]",
                    Ze = "\\d+",
                    Ke = "[" + Oe + "]",
                    Je = "[" + je + "]",
                    Qe = "[^" + Ie + He + Ze + Oe + je + Ge + "]",
                    $e = "\\ud83c[\\udffb-\\udfff]",
                    ti = "(?:" + Ye + "|" + $e + ")",
                    ei = "[^" + Ie + "]",
                    ii = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                    ni = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                    ri = "[" + Ge + "]",
                    oi = "\\u200d",
                    ai = "(?:" + Je + "|" + Qe + ")",
                    si = "(?:" + ri + "|" + Qe + ")",
                    hi = "(?:" + We + "(?:d|ll|m|re|s|t|ve))?",
                    ui = "(?:" + We + "(?:D|LL|M|RE|S|T|VE))?",
                    ci = ti + "?",
                    li = "[" + ze + "]?",
                    pi = "(?:" + oi + "(?:" + [ei, ii, ni].join("|") + ")" + li + ci + ")*",
                    di = li + ci + pi,
                    fi = "(?:" + [Ke, ii, ni].join("|") + ")" + di,
                    mi = "(?:" + [ei + Ye + "?", Ye, ii, ni, Xe].join("|") + ")",
                    gi = RegExp(We, "g"),
                    vi = RegExp(Ye, "g"),
                    yi = RegExp($e + "(?=" + $e + ")|" + mi + di, "g"),
                    _i = RegExp([ri + "?" + Je + "+" + hi + "(?=" + [qe, ri, "$"].join("|") + ")", si + "+" + ui + "(?=" + [qe, ri + ai, "$"].join("|") + ")", ri + "?" + ai + "+" + hi, ri + "+" + ui, Ze, fi].join("|"), "g"),
                    bi = RegExp("[" + oi + Ie + De + Be + ze + "]"),
                    xi = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                    wi = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "Reflect", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "isFinite", "parseInt", "setTimeout"],
                    Mi = -1,
                    Si = {};
                Si[qt] = Si[Yt] = Si[Zt] = Si[Kt] = Si[Jt] = Si[Qt] = Si[$t] = Si[te] = Si[ee] = !0, Si[Ct] = Si[Pt] = Si[Wt] = Si[Lt] = Si[Xt] = Si[Rt] = Si[kt] = Si[It] = Si[Bt] = Si[Ot] = Si[jt] = Si[Nt] = Si[Ft] = Si[Vt] = Si[zt] = !1;
                var Ti = {};
                Ti[Ct] = Ti[Pt] = Ti[Wt] = Ti[Xt] = Ti[Lt] = Ti[Rt] = Ti[qt] = Ti[Yt] = Ti[Zt] = Ti[Kt] = Ti[Jt] = Ti[Bt] = Ti[Ot] = Ti[jt] = Ti[Nt] = Ti[Ft] = Ti[Vt] = Ti[Gt] = Ti[Qt] = Ti[$t] = Ti[te] = Ti[ee] = !0, Ti[kt] = Ti[It] = Ti[zt] = !1;
                var Ai = {
                        "�": "A",
                        "�": "A",
                        "�": "A",
                        "�": "A",
                        "�": "A",
                        "�": "A",
                        "�": "a",
                        "�": "a",
                        "�": "a",
                        "�": "a",
                        "�": "a",
                        "�": "a",
                        "�": "C",
                        "�": "c",
                        "�": "D",
                        "�": "d",
                        "�": "E",
                        "�": "E",
                        "�": "E",
                        "�": "E",
                        "�": "e",
                        "�": "e",
                        "�": "e",
                        "�": "e",
                        "�": "I",
                        "�": "I",
                        "�": "I",
                        "�": "I",
                        "�": "i",
                        "�": "i",
                        "�": "i",
                        "�": "i",
                        "�": "N",
                        "�": "n",
                        "�": "O",
                        "�": "O",
                        "�": "O",
                        "�": "O",
                        "�": "O",
                        "�": "O",
                        "�": "o",
                        "�": "o",
                        "�": "o",
                        "�": "o",
                        "�": "o",
                        "�": "o",
                        "�": "U",
                        "�": "U",
                        "�": "U",
                        "�": "U",
                        "�": "u",
                        "�": "u",
                        "�": "u",
                        "�": "u",
                        "�": "Y",
                        "�": "y",
                        "�": "y",
                        "�": "Ae",
                        "�": "ae",
                        "�": "Th",
                        "�": "th",
                        "�": "ss"
                    },
                    Ei = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#39;",
                        "`": "&#96;"
                    },
                    Ci = {
                        "&amp;": "&",
                        "&lt;": "<",
                        "&gt;": ">",
                        "&quot;": '"',
                        "&#39;": "'",
                        "&#96;": "`"
                    },
                    Pi = {
                        "\\": "\\",
                        "'": "'",
                        "\n": "n",
                        "\r": "r",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    },
                    Li = parseFloat,
                    Ri = parseInt,
                    ki = "object" == typeof i && i,
                    Ii = ki && "object" == typeof e && e,
                    Di = Ii && Ii.exports === ki,
                    Bi = I("object" == typeof t && t),
                    Oi = I("object" == typeof self && self),
                    ji = I("object" == typeof this && this),
                    Ui = Bi || Oi || ji || Function("return this")(),
                    Ni = Z();
                (Oi || {})._ = Ni, "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function() {
                    return Ni
                }) : Ii ? ((Ii.exports = Ni)._ = Ni, ki._ = Ni) : Ui._ = Ni
            }).call(this)
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    63: [function(t, e, i) {
        function n() {
            p && c && (p = !1, c.length ? l = c.concat(l) : d = -1, l.length && r())
        }

        function r() {
            if (!p) {
                var t = s(n);
                p = !0;
                for (var e = l.length; e;) {
                    for (c = l, l = []; ++d < e;) c && c[d].run();
                    d = -1, e = l.length
                }
                c = null, p = !1, h(t)
            }
        }

        function o(t, e) {
            this.fun = t, this.array = e
        }

        function a() {}
        var s, h, u = e.exports = {};
        ! function() {
            try {
                s = setTimeout
            } catch (t) {
                s = function() {
                    throw new Error("setTimeout is not defined")
                }
            }
            try {
                h = clearTimeout
            } catch (t) {
                h = function() {
                    throw new Error("clearTimeout is not defined")
                }
            }
        }();
        var c, l = [],
            p = !1,
            d = -1;
        u.nextTick = function(t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
            l.push(new o(t, e)), 1 !== l.length || p || s(r, 0)
        }, o.prototype.run = function() {
            this.fun.apply(null, this.array)
        }, u.title = "browser", u.browser = !0, u.env = {}, u.argv = [], u.version = "", u.versions = {}, u.on = a, u.addListener = a, u.once = a, u.off = a, u.removeListener = a, u.removeAllListeners = a, u.emit = a, u.binding = function(t) {
            throw new Error("process.binding is not supported")
        }, u.cwd = function() {
            return "/"
        }, u.chdir = function(t) {
            throw new Error("process.chdir is not supported")
        }, u.umask = function() {
            return 0
        }
    }, {}],
    64: [function(t, e, i) {
        var n = {
            REVISION: "78"
        };
        "function" == typeof define && define.amd ? define("three", n) : "undefined" != typeof i && "undefined" != typeof e && (e.exports = n), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Math.sign && (Math.sign = function(t) {
                return 0 > t ? -1 : t > 0 ? 1 : +t
            }), void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
                get: function() {
                    return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
                }
            }), void 0 === Object.assign && ! function() {
                Object.assign = function(t) {
                    "use strict";
                    if (void 0 === t || null === t) throw new TypeError("Cannot convert undefined or null to object");
                    for (var e = Object(t), i = 1; i < arguments.length; i++) {
                        var n = arguments[i];
                        if (void 0 !== n && null !== n)
                            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }
            }(), Object.assign(n, {
                MOUSE: {
                    LEFT: 0,
                    MIDDLE: 1,
                    RIGHT: 2
                },
                CullFaceNone: 0,
                CullFaceBack: 1,
                CullFaceFront: 2,
                CullFaceFrontBack: 3,
                FrontFaceDirectionCW: 0,
                FrontFaceDirectionCCW: 1,
                BasicShadowMap: 0,
                PCFShadowMap: 1,
                PCFSoftShadowMap: 2,
                FrontSide: 0,
                BackSide: 1,
                DoubleSide: 2,
                FlatShading: 1,
                SmoothShading: 2,
                NoColors: 0,
                FaceColors: 1,
                VertexColors: 2,
                NoBlending: 0,
                NormalBlending: 1,
                AdditiveBlending: 2,
                SubtractiveBlending: 3,
                MultiplyBlending: 4,
                CustomBlending: 5,
                AddEquation: 100,
                SubtractEquation: 101,
                ReverseSubtractEquation: 102,
                MinEquation: 103,
                MaxEquation: 104,
                ZeroFactor: 200,
                OneFactor: 201,
                SrcColorFactor: 202,
                OneMinusSrcColorFactor: 203,
                SrcAlphaFactor: 204,
                OneMinusSrcAlphaFactor: 205,
                DstAlphaFactor: 206,
                OneMinusDstAlphaFactor: 207,
                DstColorFactor: 208,
                OneMinusDstColorFactor: 209,
                SrcAlphaSaturateFactor: 210,
                NeverDepth: 0,
                AlwaysDepth: 1,
                LessDepth: 2,
                LessEqualDepth: 3,
                EqualDepth: 4,
                GreaterEqualDepth: 5,
                GreaterDepth: 6,
                NotEqualDepth: 7,
                MultiplyOperation: 0,
                MixOperation: 1,
                AddOperation: 2,
                NoToneMapping: 0,
                LinearToneMapping: 1,
                ReinhardToneMapping: 2,
                Uncharted2ToneMapping: 3,
                CineonToneMapping: 4,
                UVMapping: 300,
                CubeReflectionMapping: 301,
                CubeRefractionMapping: 302,
                EquirectangularReflectionMapping: 303,
                EquirectangularRefractionMapping: 304,
                SphericalReflectionMapping: 305,
                CubeUVReflectionMapping: 306,
                CubeUVRefractionMapping: 307,
                RepeatWrapping: 1e3,
                ClampToEdgeWrapping: 1001,
                MirroredRepeatWrapping: 1002,
                NearestFilter: 1003,
                NearestMipMapNearestFilter: 1004,
                NearestMipMapLinearFilter: 1005,
                LinearFilter: 1006,
                LinearMipMapNearestFilter: 1007,
                LinearMipMapLinearFilter: 1008,
                UnsignedByteType: 1009,
                ByteType: 1010,
                ShortType: 1011,
                UnsignedShortType: 1012,
                IntType: 1013,
                UnsignedIntType: 1014,
                FloatType: 1015,
                HalfFloatType: 1025,
                UnsignedShort4444Type: 1016,
                UnsignedShort5551Type: 1017,
                UnsignedShort565Type: 1018,
                AlphaFormat: 1019,
                RGBFormat: 1020,
                RGBAFormat: 1021,
                LuminanceFormat: 1022,
                LuminanceAlphaFormat: 1023,
                RGBEFormat: n.RGBAFormat,
                DepthFormat: 1026,
                RGB_S3TC_DXT1_Format: 2001,
                RGBA_S3TC_DXT1_Format: 2002,
                RGBA_S3TC_DXT3_Format: 2003,
                RGBA_S3TC_DXT5_Format: 2004,
                RGB_PVRTC_4BPPV1_Format: 2100,
                RGB_PVRTC_2BPPV1_Format: 2101,
                RGBA_PVRTC_4BPPV1_Format: 2102,
                RGBA_PVRTC_2BPPV1_Format: 2103,
                RGB_ETC1_Format: 2151,
                LoopOnce: 2200,
                LoopRepeat: 2201,
                LoopPingPong: 2202,
                InterpolateDiscrete: 2300,
                InterpolateLinear: 2301,
                InterpolateSmooth: 2302,
                ZeroCurvatureEnding: 2400,
                ZeroSlopeEnding: 2401,
                WrapAroundEnding: 2402,
                TrianglesDrawMode: 0,
                TriangleStripDrawMode: 1,
                TriangleFanDrawMode: 2,
                LinearEncoding: 3e3,
                sRGBEncoding: 3001,
                GammaEncoding: 3007,
                RGBEEncoding: 3002,
                LogLuvEncoding: 3003,
                RGBM7Encoding: 3004,
                RGBM16Encoding: 3005,
                RGBDEncoding: 3006,
                BasicDepthPacking: 3200,
                RGBADepthPacking: 3201
            }), n.Color = function(t, e, i) {
                return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i)
            }, n.Color.prototype = {
                constructor: n.Color,
                r: 1,
                g: 1,
                b: 1,
                set: function(t) {
                    return t instanceof n.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t), this
                },
                setScalar: function(t) {
                    this.r = t, this.g = t, this.b = t
                },
                setHex: function(t) {
                    return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (255 & t) / 255, this
                },
                setRGB: function(t, e, i) {
                    return this.r = t, this.g = e, this.b = i, this
                },
                setHSL: function() {
                    function t(t, e, i) {
                        return 0 > i && (i += 1), i > 1 && (i -= 1), 1 / 6 > i ? t + 6 * (e - t) * i : .5 > i ? e : 2 / 3 > i ? t + 6 * (e - t) * (2 / 3 - i) : t
                    }
                    return function(e, i, r) {
                        if (e = n.Math.euclideanModulo(e, 1), i = n.Math.clamp(i, 0, 1), r = n.Math.clamp(r, 0, 1), 0 === i) this.r = this.g = this.b = r;
                        else {
                            var o = .5 >= r ? r * (1 + i) : r + i - r * i,
                                a = 2 * r - o;
                            this.r = t(a, o, e + 1 / 3), this.g = t(a, o, e), this.b = t(a, o, e - 1 / 3)
                        }
                        return this
                    }
                }(),
                setStyle: function(t) {
                    function e(t) {
                        void 0 !== t && parseFloat(t) < 1
                    }
                    var i;
                    if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                        var r, o = i[1],
                            a = i[2];
                        switch (o) {
                            case "rgb":
                            case "rgba":
                                if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, e(r[5]), this;
                                if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, e(r[5]), this;
                                break;
                            case "hsl":
                            case "hsla":
                                if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                                    var s = parseFloat(r[1]) / 360,
                                        h = parseInt(r[2], 10) / 100,
                                        u = parseInt(r[3], 10) / 100;
                                    return e(r[5]), this.setHSL(s, h, u)
                                }
                        }
                    } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                        var c = i[1],
                            l = c.length;
                        if (3 === l) return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255, this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255, this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255, this;
                        if (6 === l) return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255, this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255, this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255, this
                    }
                    if (t && t.length > 0) {
                        var c = n.ColorKeywords[t];
                        void 0 !== c && this.setHex(c)
                    }
                    return this
                },
                clone: function() {
                    return new this.constructor(this.r, this.g, this.b)
                },
                copy: function(t) {
                    return this.r = t.r, this.g = t.g, this.b = t.b, this
                },
                copyGammaToLinear: function(t, e) {
                    return void 0 === e && (e = 2), this.r = Math.pow(t.r, e), this.g = Math.pow(t.g, e), this.b = Math.pow(t.b, e), this
                },
                copyLinearToGamma: function(t, e) {
                    void 0 === e && (e = 2);
                    var i = e > 0 ? 1 / e : 1;
                    return this.r = Math.pow(t.r, i), this.g = Math.pow(t.g, i), this.b = Math.pow(t.b, i), this
                },
                convertGammaToLinear: function() {
                    var t = this.r,
                        e = this.g,
                        i = this.b;
                    return this.r = t * t, this.g = e * e, this.b = i * i, this
                },
                convertLinearToGamma: function() {
                    return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
                },
                getHex: function() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function(t) {
                    var e, i, n = t || {
                            h: 0,
                            s: 0,
                            l: 0
                        },
                        r = this.r,
                        o = this.g,
                        a = this.b,
                        s = Math.max(r, o, a),
                        h = Math.min(r, o, a),
                        u = (h + s) / 2;
                    if (h === s) e = 0, i = 0;
                    else {
                        var c = s - h;
                        switch (i = .5 >= u ? c / (s + h) : c / (2 - s - h), s) {
                            case r:
                                e = (o - a) / c + (a > o ? 6 : 0);
                                break;
                            case o:
                                e = (a - r) / c + 2;
                                break;
                            case a:
                                e = (r - o) / c + 4
                        }
                        e /= 6
                    }
                    return n.h = e, n.s = i, n.l = u, n
                },
                getStyle: function() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function(t, e, i) {
                    var n = this.getHSL();
                    return n.h += t, n.s += e, n.l += i, this.setHSL(n.h, n.s, n.l), this
                },
                add: function(t) {
                    return this.r += t.r, this.g += t.g, this.b += t.b, this
                },
                addColors: function(t, e) {
                    return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this
                },
                addScalar: function(t) {
                    return this.r += t, this.g += t, this.b += t, this
                },
                multiply: function(t) {
                    return this.r *= t.r, this.g *= t.g, this.b *= t.b, this
                },
                multiplyScalar: function(t) {
                    return this.r *= t, this.g *= t, this.b *= t, this
                },
                lerp: function(t, e) {
                    return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this
                },
                equals: function(t) {
                    return t.r === this.r && t.g === this.g && t.b === this.b
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0), this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t
                }
            }, n.ColorKeywords = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            }, n.Quaternion = function(t, e, i, n) {
                this._x = t || 0, this._y = e || 0, this._z = i || 0, this._w = void 0 !== n ? n : 1
            }, n.Quaternion.prototype = {
                constructor: n.Quaternion,
                get x() {
                    return this._x
                },
                set x(t) {
                    this._x = t, this.onChangeCallback()
                },
                get y() {
                    return this._y
                },
                set y(t) {
                    this._y = t, this.onChangeCallback()
                },
                get z() {
                    return this._z
                },
                set z(t) {
                    this._z = t, this.onChangeCallback()
                },
                get w() {
                    return this._w
                },
                set w(t) {
                    this._w = t, this.onChangeCallback()
                },
                set: function(t, e, i, n) {
                    return this._x = t, this._y = e, this._z = i, this._w = n, this.onChangeCallback(), this
                },
                clone: function() {
                    return new this.constructor(this._x, this._y, this._z, this._w)
                },
                copy: function(t) {
                    return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this.onChangeCallback(), this
                },
                setFromEuler: function(t, e) {
                    if (t instanceof n.Euler == !1) throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                    var i = Math.cos(t._x / 2),
                        r = Math.cos(t._y / 2),
                        o = Math.cos(t._z / 2),
                        a = Math.sin(t._x / 2),
                        s = Math.sin(t._y / 2),
                        h = Math.sin(t._z / 2),
                        u = t.order;
                    return "XYZ" === u ? (this._x = a * r * o + i * s * h, this._y = i * s * o - a * r * h, this._z = i * r * h + a * s * o, this._w = i * r * o - a * s * h) : "YXZ" === u ? (this._x = a * r * o + i * s * h, this._y = i * s * o - a * r * h, this._z = i * r * h - a * s * o, this._w = i * r * o + a * s * h) : "ZXY" === u ? (this._x = a * r * o - i * s * h, this._y = i * s * o + a * r * h, this._z = i * r * h + a * s * o, this._w = i * r * o - a * s * h) : "ZYX" === u ? (this._x = a * r * o - i * s * h, this._y = i * s * o + a * r * h, this._z = i * r * h - a * s * o, this._w = i * r * o + a * s * h) : "YZX" === u ? (this._x = a * r * o + i * s * h, this._y = i * s * o + a * r * h, this._z = i * r * h - a * s * o, this._w = i * r * o - a * s * h) : "XZY" === u && (this._x = a * r * o - i * s * h, this._y = i * s * o - a * r * h, this._z = i * r * h + a * s * o, this._w = i * r * o + a * s * h), e !== !1 && this.onChangeCallback(), this
                },
                setFromAxisAngle: function(t, e) {
                    var i = e / 2,
                        n = Math.sin(i);
                    return this._x = t.x * n, this._y = t.y * n, this._z = t.z * n, this._w = Math.cos(i), this.onChangeCallback(), this
                },
                setFromRotationMatrix: function(t) {
                    var e, i = t.elements,
                        n = i[0],
                        r = i[4],
                        o = i[8],
                        a = i[1],
                        s = i[5],
                        h = i[9],
                        u = i[2],
                        c = i[6],
                        l = i[10],
                        p = n + s + l;
                    return p > 0 ? (e = .5 / Math.sqrt(p + 1), this._w = .25 / e, this._x = (c - h) * e, this._y = (o - u) * e, this._z = (a - r) * e) : n > s && n > l ? (e = 2 * Math.sqrt(1 + n - s - l), this._w = (c - h) / e, this._x = .25 * e, this._y = (r + a) / e, this._z = (o + u) / e) : s > l ? (e = 2 * Math.sqrt(1 + s - n - l), this._w = (o - u) / e, this._x = (r + a) / e, this._y = .25 * e, this._z = (h + c) / e) : (e = 2 * Math.sqrt(1 + l - n - s), this._w = (a - r) / e, this._x = (o + u) / e, this._y = (h + c) / e, this._z = .25 * e), this.onChangeCallback(), this
                },
                setFromUnitVectors: function() {
                    var t, e, i = 1e-6;
                    return function(r, o) {
                        return void 0 === t && (t = new n.Vector3), e = r.dot(o) + 1, i > e ? (e = 0, Math.abs(r.x) > Math.abs(r.z) ? t.set(-r.y, r.x, 0) : t.set(0, -r.z, r.y)) : t.crossVectors(r, o), this._x = t.x, this._y = t.y, this._z = t.z, this._w = e, this.normalize()
                    }
                }(),
                inverse: function() {
                    return this.conjugate().normalize()
                },
                conjugate: function() {
                    return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
                },
                dot: function(t) {
                    return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
                },
                lengthSq: function() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                },
                length: function() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                },
                normalize: function() {
                    var t = this.length();
                    return 0 === t ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this.onChangeCallback(), this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? this.multiplyQuaternions(t, e) : this.multiplyQuaternions(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyQuaternions(t, this)
                },
                multiplyQuaternions: function(t, e) {
                    var i = t._x,
                        n = t._y,
                        r = t._z,
                        o = t._w,
                        a = e._x,
                        s = e._y,
                        h = e._z,
                        u = e._w;
                    return this._x = i * u + o * a + n * h - r * s, this._y = n * u + o * s + r * a - i * h, this._z = r * u + o * h + i * s - n * a, this._w = o * u - i * a - n * s - r * h, this.onChangeCallback(), this
                },
                slerp: function(t, e) {
                    if (0 === e) return this;
                    if (1 === e) return this.copy(t);
                    var i = this._x,
                        n = this._y,
                        r = this._z,
                        o = this._w,
                        a = o * t._w + i * t._x + n * t._y + r * t._z;
                    if (0 > a ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, a = -a) : this.copy(t), a >= 1) return this._w = o, this._x = i, this._y = n, this._z = r, this;
                    var s = Math.sqrt(1 - a * a);
                    if (Math.abs(s) < .001) return this._w = .5 * (o + this._w), this._x = .5 * (i + this._x), this._y = .5 * (n + this._y), this._z = .5 * (r + this._z), this;
                    var h = Math.atan2(s, a),
                        u = Math.sin((1 - e) * h) / s,
                        c = Math.sin(e * h) / s;
                    return this._w = o * u + this._w * c, this._x = i * u + this._x * c, this._y = n * u + this._y * c, this._z = r * u + this._z * c, this.onChangeCallback(), this
                },
                equals: function(t) {
                    return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0), this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this.onChangeCallback(), this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t
                },
                onChange: function(t) {
                    return this.onChangeCallback = t, this
                },
                onChangeCallback: function() {}
            }, Object.assign(n.Quaternion, {
                slerp: function(t, e, i, n) {
                    return i.copy(t).slerp(e, n)
                },
                slerpFlat: function(t, e, i, n, r, o, a) {
                    var s = i[n + 0],
                        h = i[n + 1],
                        u = i[n + 2],
                        c = i[n + 3],
                        l = r[o + 0],
                        p = r[o + 1],
                        d = r[o + 2],
                        f = r[o + 3];
                    if (c !== f || s !== l || h !== p || u !== d) {
                        var m = 1 - a,
                            g = s * l + h * p + u * d + c * f,
                            v = g >= 0 ? 1 : -1,
                            y = 1 - g * g;
                        if (y > Number.EPSILON) {
                            var _ = Math.sqrt(y),
                                b = Math.atan2(_, g * v);
                            m = Math.sin(m * b) / _, a = Math.sin(a * b) / _
                        }
                        var x = a * v;
                        if (s = s * m + l * x, h = h * m + p * x, u = u * m + d * x, c = c * m + f * x, m === 1 - a) {
                            var w = 1 / Math.sqrt(s * s + h * h + u * u + c * c);
                            s *= w, h *= w, u *= w, c *= w
                        }
                    }
                    t[e] = s, t[e + 1] = h, t[e + 2] = u, t[e + 3] = c
                }
            }), n.Vector2 = function(t, e) {
                this.x = t || 0, this.y = e || 0
            }, n.Vector2.prototype = {
                constructor: n.Vector2,
                get width() {
                    return this.x
                },
                set width(t) {
                    this.x = t
                },
                get height() {
                    return this.y
                },
                set height(t) {
                    this.y = t
                },
                set: function(t, e) {
                    return this.x = t, this.y = e, this
                },
                setScalar: function(t) {
                    return this.x = t, this.y = t, this
                },
                setX: function(t) {
                    return this.x = t, this
                },
                setY: function(t) {
                    return this.y = t, this
                },
                setComponent: function(t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                getComponent: function(t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x, this.y)
                },
                copy: function(t) {
                    return this.x = t.x, this.y = t.y, this
                },
                add: function(t, e) {
                    return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this)
                },
                addScalar: function(t) {
                    return this.x += t, this.y += t, this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x, this.y = t.y + e.y, this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e, this.y += t.y * e, this
                },
                sub: function(t, e) {
                    return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this)
                },
                subScalar: function(t) {
                    return this.x -= t, this.y -= t, this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x, this.y = t.y - e.y, this
                },
                multiply: function(t) {
                    return this.x *= t.x, this.y *= t.y, this
                },
                multiplyScalar: function(t) {
                    return isFinite(t) ? (this.x *= t, this.y *= t) : (this.x = 0, this.y = 0), this
                },
                divide: function(t) {
                    return this.x /= t.x, this.y /= t.y, this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this
                },
                clampScalar: function() {
                    var t, e;
                    return function(i, r) {
                        return void 0 === t && (t = new n.Vector2, e = new n.Vector2), t.set(i, i), e.set(r, r), this.clamp(t, e)
                    }
                }(),
                clampLength: function(t, e) {
                    var i = this.length();
                    return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
                },
                floor: function() {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
                },
                round: function() {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
                },
                negate: function() {
                    return this.x = -this.x, this.y = -this.y, this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                angle: function() {
                    var t = Math.atan2(this.y, this.x);
                    return 0 > t && (t += 2 * Math.PI), t
                },
                distanceTo: function(t) {
                    return Math.sqrt(this.distanceToSquared(t))
                },
                distanceToSquared: function(t) {
                    var e = this.x - t.x,
                        i = this.y - t.y;
                    return e * e + i * i
                },
                setLength: function(t) {
                    return this.multiplyScalar(t / this.length())
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this
                },
                lerpVectors: function(t, e, i) {
                    return this.subVectors(e, t).multiplyScalar(i).add(t)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t
                },
                fromAttribute: function(t, e, i) {
                    return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this
                },
                rotateAround: function(t, e) {
                    var i = Math.cos(e),
                        n = Math.sin(e),
                        r = this.x - t.x,
                        o = this.y - t.y;
                    return this.x = r * i - o * n + t.x, this.y = r * n + o * i + t.y, this
                }
            }, n.Vector3 = function(t, e, i) {
                this.x = t || 0, this.y = e || 0, this.z = i || 0
            }, n.Vector3.prototype = {
                constructor: n.Vector3,
                set: function(t, e, i) {
                    return this.x = t, this.y = e, this.z = i, this
                },
                setScalar: function(t) {
                    return this.x = t, this.y = t, this.z = t, this
                },
                setX: function(t) {
                    return this.x = t, this
                },
                setY: function(t) {
                    return this.y = t, this
                },
                setZ: function(t) {
                    return this.z = t, this
                },
                setComponent: function(t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        case 2:
                            this.z = e;
                            break;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                getComponent: function(t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x, this.y, this.z)
                },
                copy: function(t) {
                    return this.x = t.x, this.y = t.y, this.z = t.z, this
                },
                add: function(t, e) {
                    return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this.z += t.z, this)
                },
                addScalar: function(t) {
                    return this.x += t, this.y += t, this.z += t, this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this
                },
                sub: function(t, e) {
                    return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this)
                },
                subScalar: function(t) {
                    return this.x -= t, this.y -= t, this.z -= t, this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this
                },
                multiply: function(t, e) {
                    return void 0 !== e ? this.multiplyVectors(t, e) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this)
                },
                multiplyScalar: function(t) {
                    return isFinite(t) ? (this.x *= t, this.y *= t, this.z *= t) : (this.x = 0, this.y = 0, this.z = 0), this
                },
                multiplyVectors: function(t, e) {
                    return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this
                },
                applyEuler: function() {
                    var t;
                    return function(e) {
                        return e instanceof n.Euler == !1, void 0 === t && (t = new n.Quaternion), this.applyQuaternion(t.setFromEuler(e))
                    }
                }(),
                applyAxisAngle: function() {
                    var t;
                    return function(e, i) {
                        return void 0 === t && (t = new n.Quaternion), this.applyQuaternion(t.setFromAxisAngle(e, i))
                    }
                }(),
                applyMatrix3: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = t.elements;
                    return this.x = r[0] * e + r[3] * i + r[6] * n, this.y = r[1] * e + r[4] * i + r[7] * n, this.z = r[2] * e + r[5] * i + r[8] * n, this
                },
                applyMatrix4: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = t.elements;
                    return this.x = r[0] * e + r[4] * i + r[8] * n + r[12], this.y = r[1] * e + r[5] * i + r[9] * n + r[13], this.z = r[2] * e + r[6] * i + r[10] * n + r[14], this
                },
                applyProjection: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = t.elements,
                        o = 1 / (r[3] * e + r[7] * i + r[11] * n + r[15]);
                    return this.x = (r[0] * e + r[4] * i + r[8] * n + r[12]) * o, this.y = (r[1] * e + r[5] * i + r[9] * n + r[13]) * o, this.z = (r[2] * e + r[6] * i + r[10] * n + r[14]) * o, this
                },
                applyQuaternion: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = t.x,
                        o = t.y,
                        a = t.z,
                        s = t.w,
                        h = s * e + o * n - a * i,
                        u = s * i + a * e - r * n,
                        c = s * n + r * i - o * e,
                        l = -r * e - o * i - a * n;
                    return this.x = h * s + l * -r + u * -a - c * -o, this.y = u * s + l * -o + c * -r - h * -a, this.z = c * s + l * -a + h * -o - u * -r, this
                },
                project: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)), this.applyProjection(t)
                    }
                }(),
                unproject: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)), this.applyProjection(t)
                    }
                }(),
                transformDirection: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = t.elements;
                    return this.x = r[0] * e + r[4] * i + r[8] * n, this.y = r[1] * e + r[5] * i + r[9] * n, this.z = r[2] * e + r[6] * i + r[10] * n, this.normalize()
                },
                divide: function(t) {
                    return this.x /= t.x, this.y /= t.y, this.z /= t.z, this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this
                },
                clampScalar: function() {
                    var t, e;
                    return function(i, r) {
                        return void 0 === t && (t = new n.Vector3, e = new n.Vector3), t.set(i, i, i), e.set(r, r, r), this.clamp(t, e)
                    }
                }(),
                clampLength: function(t, e) {
                    var i = this.length();
                    return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
                },
                floor: function() {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
                },
                round: function() {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
                },
                negate: function() {
                    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                setLength: function(t) {
                    return this.multiplyScalar(t / this.length())
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this
                },
                lerpVectors: function(t, e, i) {
                    return this.subVectors(e, t).multiplyScalar(i).add(t)
                },
                cross: function(t, e) {
                    if (void 0 !== e) return this.crossVectors(t, e);
                    var i = this.x,
                        n = this.y,
                        r = this.z;
                    return this.x = n * t.z - r * t.y, this.y = r * t.x - i * t.z, this.z = i * t.y - n * t.x, this
                },
                crossVectors: function(t, e) {
                    var i = t.x,
                        n = t.y,
                        r = t.z,
                        o = e.x,
                        a = e.y,
                        s = e.z;
                    return this.x = n * s - r * a, this.y = r * o - i * s, this.z = i * a - n * o, this
                },
                projectOnVector: function(t) {
                    var e = t.dot(this) / t.lengthSq();
                    return this.copy(t).multiplyScalar(e)
                },
                projectOnPlane: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Vector3), t.copy(this).projectOnVector(e), this.sub(t)
                    }
                }(),
                reflect: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Vector3), this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
                    }
                }(),
                angleTo: function(t) {
                    var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                    return Math.acos(n.Math.clamp(e, -1, 1))
                },
                distanceTo: function(t) {
                    return Math.sqrt(this.distanceToSquared(t))
                },
                distanceToSquared: function(t) {
                    var e = this.x - t.x,
                        i = this.y - t.y,
                        n = this.z - t.z;
                    return e * e + i * i + n * n
                },
                setFromSpherical: function(t) {
                    var e = Math.sin(t.phi) * t.radius;
                    return this.x = e * Math.sin(t.theta), this.y = Math.cos(t.phi) * t.radius, this.z = e * Math.cos(t.theta), this
                },
                setFromMatrixPosition: function(t) {
                    return this.setFromMatrixColumn(t, 3)
                },
                setFromMatrixScale: function(t) {
                    var e = this.setFromMatrixColumn(t, 0).length(),
                        i = this.setFromMatrixColumn(t, 1).length(),
                        n = this.setFromMatrixColumn(t, 2).length();
                    return this.x = e, this.y = i, this.z = n, this
                },
                setFromMatrixColumn: function(t, e) {
                    if ("number" == typeof t) {
                        var i = t;
                        t = e, e = i
                    }
                    return this.fromArray(t.elements, 4 * e)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t
                },
                fromAttribute: function(t, e, i) {
                    return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this.z = t.array[e + 2], this
                }
            }, n.Vector4 = function(t, e, i, n) {
                this.x = t || 0, this.y = e || 0, this.z = i || 0, this.w = void 0 !== n ? n : 1
            }, n.Vector4.prototype = {
                constructor: n.Vector4,
                set: function(t, e, i, n) {
                    return this.x = t, this.y = e, this.z = i, this.w = n, this
                },
                setScalar: function(t) {
                    return this.x = t, this.y = t, this.z = t, this.w = t, this
                },
                setX: function(t) {
                    return this.x = t, this
                },
                setY: function(t) {
                    return this.y = t, this
                },
                setZ: function(t) {
                    return this.z = t, this
                },
                setW: function(t) {
                    return this.w = t, this
                },
                setComponent: function(t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        case 2:
                            this.z = e;
                            break;
                        case 3:
                            this.w = e;
                            break;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                getComponent: function(t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        case 3:
                            return this.w;
                        default:
                            throw new Error("index is out of range: " + t)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x, this.y, this.z, this.w)
                },
                copy: function(t) {
                    return this.x = t.x, this.y = t.y, this.z = t.z, this.w = void 0 !== t.w ? t.w : 1, this
                },
                add: function(t, e) {
                    return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this)
                },
                addScalar: function(t) {
                    return this.x += t, this.y += t, this.z += t, this.w += t, this
                },
                addVectors: function(t, e) {
                    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this
                },
                addScaledVector: function(t, e) {
                    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this
                },
                sub: function(t, e) {
                    return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this)
                },
                subScalar: function(t) {
                    return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this
                },
                subVectors: function(t, e) {
                    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this
                },
                multiplyScalar: function(t) {
                    return isFinite(t) ? (this.x *= t, this.y *= t, this.z *= t, this.w *= t) : (this.x = 0, this.y = 0, this.z = 0, this.w = 0), this
                },
                applyMatrix4: function(t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = this.w,
                        o = t.elements;
                    return this.x = o[0] * e + o[4] * i + o[8] * n + o[12] * r, this.y = o[1] * e + o[5] * i + o[9] * n + o[13] * r, this.z = o[2] * e + o[6] * i + o[10] * n + o[14] * r, this.w = o[3] * e + o[7] * i + o[11] * n + o[15] * r, this
                },
                divideScalar: function(t) {
                    return this.multiplyScalar(1 / t)
                },
                setAxisAngleFromQuaternion: function(t) {
                    this.w = 2 * Math.acos(t.w);
                    var e = Math.sqrt(1 - t.w * t.w);
                    return 1e-4 > e ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this
                },
                setAxisAngleFromRotationMatrix: function(t) {
                    var e, i, n, r, o = .01,
                        a = .1,
                        s = t.elements,
                        h = s[0],
                        u = s[4],
                        c = s[8],
                        l = s[1],
                        p = s[5],
                        d = s[9],
                        f = s[2],
                        m = s[6],
                        g = s[10];
                    if (Math.abs(u - l) < o && Math.abs(c - f) < o && Math.abs(d - m) < o) {
                        if (Math.abs(u + l) < a && Math.abs(c + f) < a && Math.abs(d + m) < a && Math.abs(h + p + g - 3) < a) return this.set(1, 0, 0, 0), this;
                        e = Math.PI;
                        var v = (h + 1) / 2,
                            y = (p + 1) / 2,
                            _ = (g + 1) / 2,
                            b = (u + l) / 4,
                            x = (c + f) / 4,
                            w = (d + m) / 4;
                        return v > y && v > _ ? o > v ? (i = 0, n = .707106781, r = .707106781) : (i = Math.sqrt(v), n = b / i, r = x / i) : y > _ ? o > y ? (i = .707106781, n = 0, r = .707106781) : (n = Math.sqrt(y), i = b / n, r = w / n) : o > _ ? (i = .707106781, n = .707106781, r = 0) : (r = Math.sqrt(_), i = x / r, n = w / r), this.set(i, n, r, e), this
                    }
                    var M = Math.sqrt((m - d) * (m - d) + (c - f) * (c - f) + (l - u) * (l - u));
                    return Math.abs(M) < .001 && (M = 1), this.x = (m - d) / M, this.y = (c - f) / M, this.z = (l - u) / M, this.w = Math.acos((h + p + g - 1) / 2), this
                },
                min: function(t) {
                    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this
                },
                max: function(t) {
                    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this
                },
                clamp: function(t, e) {
                    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this
                },
                clampScalar: function() {
                    var t, e;
                    return function(i, r) {
                        return void 0 === t && (t = new n.Vector4, e = new n.Vector4), t.set(i, i, i, i), e.set(r, r, r, r), this.clamp(t, e)
                    }
                }(),
                floor: function() {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
                },
                round: function() {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
                },
                negate: function() {
                    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
                },
                dot: function(t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                setLength: function(t) {
                    return this.multiplyScalar(t / this.length())
                },
                lerp: function(t, e) {
                    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this
                },
                lerpVectors: function(t, e, i) {
                    return this.subVectors(e, t).multiplyScalar(i).add(t)
                },
                equals: function(t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
                },
                fromArray: function(t, e) {
                    return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t
                },
                fromAttribute: function(t, e, i) {
                    return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this.z = t.array[e + 2], this.w = t.array[e + 3], this
                }
            }, n.Euler = function(t, e, i, r) {
                this._x = t || 0, this._y = e || 0, this._z = i || 0, this._order = r || n.Euler.DefaultOrder
            }, n.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], n.Euler.DefaultOrder = "XYZ", n.Euler.prototype = {
                constructor: n.Euler,
                get x() {
                    return this._x
                },
                set x(t) {
                    this._x = t, this.onChangeCallback()
                },
                get y() {
                    return this._y
                },
                set y(t) {
                    this._y = t, this.onChangeCallback()
                },
                get z() {
                    return this._z
                },
                set z(t) {
                    this._z = t, this.onChangeCallback()
                },
                get order() {
                    return this._order
                },
                set order(t) {
                    this._order = t, this.onChangeCallback()
                },
                set: function(t, e, i, n) {
                    return this._x = t, this._y = e, this._z = i, this._order = n || this._order, this.onChangeCallback(), this
                },
                clone: function() {
                    return new this.constructor(this._x, this._y, this._z, this._order)
                },
                copy: function(t) {
                    return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this.onChangeCallback(), this
                },
                setFromRotationMatrix: function(t, e, i) {
                    var r = n.Math.clamp,
                        o = t.elements,
                        a = o[0],
                        s = o[4],
                        h = o[8],
                        u = o[1],
                        c = o[5],
                        l = o[9],
                        p = o[2],
                        d = o[6],
                        f = o[10];
                    return e = e || this._order, "XYZ" === e ? (this._y = Math.asin(r(h, -1, 1)), Math.abs(h) < .99999 ? (this._x = Math.atan2(-l, f), this._z = Math.atan2(-s, a)) : (this._x = Math.atan2(d, c), this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-r(l, -1, 1)), Math.abs(l) < .99999 ? (this._y = Math.atan2(h, f), this._z = Math.atan2(u, c)) : (this._y = Math.atan2(-p, a), this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(r(d, -1, 1)), Math.abs(d) < .99999 ? (this._y = Math.atan2(-p, f), this._z = Math.atan2(-s, c)) : (this._y = 0, this._z = Math.atan2(u, a))) : "ZYX" === e ? (this._y = Math.asin(-r(p, -1, 1)), Math.abs(p) < .99999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(u, a)) : (this._x = 0, this._z = Math.atan2(-s, c))) : "YZX" === e ? (this._z = Math.asin(r(u, -1, 1)), Math.abs(u) < .99999 ? (this._x = Math.atan2(-l, c), this._y = Math.atan2(-p, a)) : (this._x = 0, this._y = Math.atan2(h, f))) : "XZY" === e && (this._z = Math.asin(-r(s, -1, 1)), Math.abs(s) < .99999 ? (this._x = Math.atan2(d, c),
                        this._y = Math.atan2(h, a)) : (this._x = Math.atan2(-l, f), this._y = 0)), this._order = e, i !== !1 && this.onChangeCallback(), this
                },
                setFromQuaternion: function() {
                    var t;
                    return function(e, i, r) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationFromQuaternion(e), this.setFromRotationMatrix(t, i, r)
                    }
                }(),
                setFromVector3: function(t, e) {
                    return this.set(t.x, t.y, t.z, e || this._order)
                },
                reorder: function() {
                    var t = new n.Quaternion;
                    return function(e) {
                        return t.setFromEuler(this), this.setFromQuaternion(t, e)
                    }
                }(),
                equals: function(t) {
                    return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
                },
                fromArray: function(t) {
                    return this._x = t[0], this._y = t[1], this._z = t[2], void 0 !== t[3] && (this._order = t[3]), this.onChangeCallback(), this
                },
                toArray: function(t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t
                },
                toVector3: function(t) {
                    return t ? t.set(this._x, this._y, this._z) : new n.Vector3(this._x, this._y, this._z)
                },
                onChange: function(t) {
                    return this.onChangeCallback = t, this
                },
                onChangeCallback: function() {}
            }, n.Line3 = function(t, e) {
                this.start = void 0 !== t ? t : new n.Vector3, this.end = void 0 !== e ? e : new n.Vector3
            }, n.Line3.prototype = {
                constructor: n.Line3,
                set: function(t, e) {
                    return this.start.copy(t), this.end.copy(e), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.start.copy(t.start), this.end.copy(t.end), this
                },
                center: function(t) {
                    var e = t || new n.Vector3;
                    return e.addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function(t) {
                    var e = t || new n.Vector3;
                    return e.subVectors(this.end, this.start)
                },
                distanceSq: function() {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function() {
                    return this.start.distanceTo(this.end)
                },
                at: function(t, e) {
                    var i = e || new n.Vector3;
                    return this.delta(i).multiplyScalar(t).add(this.start)
                },
                closestPointToPointParameter: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function(i, r) {
                        t.subVectors(i, this.start), e.subVectors(this.end, this.start);
                        var o = e.dot(e),
                            a = e.dot(t),
                            s = a / o;
                        return r && (s = n.Math.clamp(s, 0, 1)), s
                    }
                }(),
                closestPointToPoint: function(t, e, i) {
                    var r = this.closestPointToPointParameter(t, e),
                        o = i || new n.Vector3;
                    return this.delta(o).multiplyScalar(r).add(this.start)
                },
                applyMatrix4: function(t) {
                    return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this
                },
                equals: function(t) {
                    return t.start.equals(this.start) && t.end.equals(this.end)
                }
            }, n.Box2 = function(t, e) {
                this.min = void 0 !== t ? t : new n.Vector2(+(1 / 0), +(1 / 0)), this.max = void 0 !== e ? e : new n.Vector2(-(1 / 0), -(1 / 0))
            }, n.Box2.prototype = {
                constructor: n.Box2,
                set: function(t, e) {
                    return this.min.copy(t), this.max.copy(e), this
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, i = t.length; i > e; e++) this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var t = new n.Vector2;
                    return function(e, i) {
                        var n = t.copy(i).multiplyScalar(.5);
                        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min), this.max.copy(t.max), this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = +(1 / 0), this.max.x = this.max.y = -(1 / 0), this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                center: function(t) {
                    var e = t || new n.Vector2;
                    return e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                size: function(t) {
                    var e = t || new n.Vector2;
                    return e.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t), this.max.max(t), this
                },
                expandByVector: function(t) {
                    return this.min.sub(t), this.max.add(t), this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t), this.max.addScalar(t), this
                },
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
                },
                getParameter: function(t, e) {
                    var i = e || new n.Vector2;
                    return i.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
                },
                clampPoint: function(t, e) {
                    var i = e || new n.Vector2;
                    return i.copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var t = new n.Vector2;
                    return function(e) {
                        var i = t.copy(e).clamp(this.min, this.max);
                        return i.sub(e).length()
                    }
                }(),
                intersect: function(t) {
                    return this.min.max(t.min), this.max.min(t.max), this
                },
                union: function(t) {
                    return this.min.min(t.min), this.max.max(t.max), this
                },
                translate: function(t) {
                    return this.min.add(t), this.max.add(t), this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            }, n.Box3 = function(t, e) {
                this.min = void 0 !== t ? t : new n.Vector3(+(1 / 0), +(1 / 0), +(1 / 0)), this.max = void 0 !== e ? e : new n.Vector3(-(1 / 0), -(1 / 0), -(1 / 0))
            }, n.Box3.prototype = {
                constructor: n.Box3,
                set: function(t, e) {
                    return this.min.copy(t), this.max.copy(e), this
                },
                setFromArray: function(t) {
                    for (var e = +(1 / 0), i = +(1 / 0), n = +(1 / 0), r = -(1 / 0), o = -(1 / 0), a = -(1 / 0), s = 0, h = t.length; h > s; s += 3) {
                        var u = t[s],
                            c = t[s + 1],
                            l = t[s + 2];
                        e > u && (e = u), i > c && (i = c), n > l && (n = l), u > r && (r = u), c > o && (o = c), l > a && (a = l)
                    }
                    this.min.set(e, i, n), this.max.set(r, o, a)
                },
                setFromPoints: function(t) {
                    this.makeEmpty();
                    for (var e = 0, i = t.length; i > e; e++) this.expandByPoint(t[e]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        var n = t.copy(i).multiplyScalar(.5);
                        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                    }
                }(),
                setFromObject: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        var i = this;
                        return e.updateMatrixWorld(!0), this.makeEmpty(), e.traverse(function(e) {
                            var r = e.geometry;
                            if (void 0 !== r)
                                if (r instanceof n.Geometry)
                                    for (var o = r.vertices, a = 0, s = o.length; s > a; a++) t.copy(o[a]), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t);
                                else if (r instanceof n.BufferGeometry && void 0 !== r.attributes.position)
                                for (var h = r.attributes.position.array, a = 0, s = h.length; s > a; a += 3) t.fromArray(h, a), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t)
                        }), this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.min.copy(t.min), this.max.copy(t.max), this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = this.min.z = +(1 / 0), this.max.x = this.max.y = this.max.z = -(1 / 0), this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                center: function(t) {
                    var e = t || new n.Vector3;
                    return e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                size: function(t) {
                    var e = t || new n.Vector3;
                    return e.subVectors(this.max, this.min)
                },
                expandByPoint: function(t) {
                    return this.min.min(t), this.max.max(t), this
                },
                expandByVector: function(t) {
                    return this.min.sub(t), this.max.add(t), this
                },
                expandByScalar: function(t) {
                    return this.min.addScalar(-t), this.max.addScalar(t), this
                },
                containsPoint: function(t) {
                    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
                },
                containsBox: function(t) {
                    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
                },
                getParameter: function(t, e) {
                    var i = e || new n.Vector3;
                    return i.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function(t) {
                    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
                },
                intersectsSphere: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Vector3), this.clampPoint(e.center, t), t.distanceToSquared(e.center) <= e.radius * e.radius
                    }
                }(),
                intersectsPlane: function(t) {
                    var e, i;
                    return t.normal.x > 0 ? (e = t.normal.x * this.min.x, i = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, i = t.normal.x * this.min.x), t.normal.y > 0 ? (e += t.normal.y * this.min.y, i += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, i += t.normal.y * this.min.y), t.normal.z > 0 ? (e += t.normal.z * this.min.z, i += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, i += t.normal.z * this.min.z), e <= t.constant && i >= t.constant
                },
                clampPoint: function(t, e) {
                    var i = e || new n.Vector3;
                    return i.copy(t).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        var i = t.copy(e).clamp(this.min, this.max);
                        return i.sub(e).length()
                    }
                }(),
                getBoundingSphere: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        var i = e || new n.Sphere;
                        return i.center = this.center(), i.radius = .5 * this.size(t).length(), i
                    }
                }(),
                intersect: function(t) {
                    return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this
                },
                union: function(t) {
                    return this.min.min(t.min), this.max.max(t.max), this
                },
                applyMatrix4: function() {
                    var t = [new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3, new n.Vector3];
                    return function(e) {
                        return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(t), this)
                    }
                }(),
                translate: function(t) {
                    return this.min.add(t), this.max.add(t), this
                },
                equals: function(t) {
                    return t.min.equals(this.min) && t.max.equals(this.max)
                }
            }, n.Matrix3 = function() {
                this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]), arguments.length > 0
            }, n.Matrix3.prototype = {
                constructor: n.Matrix3,
                set: function(t, e, i, n, r, o, a, s, h) {
                    var u = this.elements;
                    return u[0] = t, u[1] = n, u[2] = a, u[3] = e, u[4] = r, u[5] = s, u[6] = i, u[7] = o, u[8] = h, this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
                },
                clone: function() {
                    return (new this.constructor).fromArray(this.elements)
                },
                copy: function(t) {
                    var e = t.elements;
                    return this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]), this
                },
                setFromMatrix4: function(t) {
                    var e = t.elements;
                    return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]), this
                },
                applyToVector3Array: function() {
                    var t;
                    return function(e, i, r) {
                        void 0 === t && (t = new n.Vector3), void 0 === i && (i = 0), void 0 === r && (r = e.length);
                        for (var o = 0, a = i; r > o; o += 3, a += 3) t.fromArray(e, a), t.applyMatrix3(this), t.toArray(e, a);
                        return e
                    }
                }(),
                applyToBuffer: function() {
                    var t;
                    return function(e, i, r) {
                        void 0 === t && (t = new n.Vector3), void 0 === i && (i = 0), void 0 === r && (r = e.length / e.itemSize);
                        for (var o = 0, a = i; r > o; o++, a++) t.x = e.getX(a), t.y = e.getY(a), t.z = e.getZ(a), t.applyMatrix3(this), e.setXYZ(t.x, t.y, t.z);
                        return e
                    }
                }(),
                multiplyScalar: function(t) {
                    var e = this.elements;
                    return e[0] *= t, e[3] *= t, e[6] *= t, e[1] *= t, e[4] *= t, e[7] *= t, e[2] *= t, e[5] *= t, e[8] *= t, this
                },
                determinant: function() {
                    var t = this.elements,
                        e = t[0],
                        i = t[1],
                        n = t[2],
                        r = t[3],
                        o = t[4],
                        a = t[5],
                        s = t[6],
                        h = t[7],
                        u = t[8];
                    return e * o * u - e * a * h - i * r * u + i * a * s + n * r * h - n * o * s
                },
                getInverse: function(t, e) {
                    t instanceof n.Matrix4;
                    var i = t.elements,
                        r = this.elements,
                        o = i[0],
                        a = i[1],
                        s = i[2],
                        h = i[3],
                        u = i[4],
                        c = i[5],
                        l = i[6],
                        p = i[7],
                        d = i[8],
                        f = d * u - c * p,
                        m = c * l - d * h,
                        g = p * h - u * l,
                        v = o * f + a * m + s * g;
                    if (0 === v) {
                        var y = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                        if (e) throw new Error(y);
                        return this.identity()
                    }
                    var _ = 1 / v;
                    return r[0] = f * _, r[1] = (s * p - d * a) * _, r[2] = (c * a - s * u) * _, r[3] = m * _, r[4] = (d * o - s * l) * _, r[5] = (s * h - c * o) * _, r[6] = g * _, r[7] = (a * l - p * o) * _, r[8] = (u * o - a * h) * _, this
                },
                transpose: function() {
                    var t, e = this.elements;
                    return t = e[1], e[1] = e[3], e[3] = t, t = e[2], e[2] = e[6], e[6] = t, t = e[5], e[5] = e[7], e[7] = t, this
                },
                flattenToArrayOffset: function(t, e) {
                    return this.toArray(t, e)
                },
                getNormalMatrix: function(t) {
                    return this.setFromMatrix4(t).getInverse(this).transpose()
                },
                transposeIntoArray: function(t) {
                    var e = this.elements;
                    return t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8], this
                },
                fromArray: function(t) {
                    return this.elements.set(t), this
                },
                toArray: function(t, e) {
                    void 0 === t && (t = []), void 0 === e && (e = 0);
                    var i = this.elements;
                    return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t
                }
            }, n.Matrix4 = function() {
                this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), arguments.length > 0
            }, n.Matrix4.prototype = {
                constructor: n.Matrix4,
                set: function(t, e, i, n, r, o, a, s, h, u, c, l, p, d, f, m) {
                    var g = this.elements;
                    return g[0] = t, g[4] = e, g[8] = i, g[12] = n, g[1] = r, g[5] = o, g[9] = a, g[13] = s, g[2] = h, g[6] = u, g[10] = c, g[14] = l, g[3] = p, g[7] = d, g[11] = f, g[15] = m, this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                },
                clone: function() {
                    return (new n.Matrix4).fromArray(this.elements)
                },
                copy: function(t) {
                    return this.elements.set(t.elements), this
                },
                copyPosition: function(t) {
                    var e = this.elements,
                        i = t.elements;
                    return e[12] = i[12], e[13] = i[13], e[14] = i[14], this
                },
                extractBasis: function(t, e, i) {
                    return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), i.setFromMatrixColumn(this, 2), this
                },
                makeBasis: function(t, e, i) {
                    return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1), this
                },
                extractRotation: function() {
                    var t;
                    return function(e) {
                        void 0 === t && (t = new n.Vector3);
                        var i = this.elements,
                            r = e.elements,
                            o = 1 / t.setFromMatrixColumn(e, 0).length(),
                            a = 1 / t.setFromMatrixColumn(e, 1).length(),
                            s = 1 / t.setFromMatrixColumn(e, 2).length();
                        return i[0] = r[0] * o, i[1] = r[1] * o, i[2] = r[2] * o, i[4] = r[4] * a, i[5] = r[5] * a, i[6] = r[6] * a, i[8] = r[8] * s, i[9] = r[9] * s, i[10] = r[10] * s, this
                    }
                }(),
                makeRotationFromEuler: function(t) {
                    t instanceof n.Euler == !1;
                    var e = this.elements,
                        i = t.x,
                        r = t.y,
                        o = t.z,
                        a = Math.cos(i),
                        s = Math.sin(i),
                        h = Math.cos(r),
                        u = Math.sin(r),
                        c = Math.cos(o),
                        l = Math.sin(o);
                    if ("XYZ" === t.order) {
                        var p = a * c,
                            d = a * l,
                            f = s * c,
                            m = s * l;
                        e[0] = h * c, e[4] = -h * l, e[8] = u, e[1] = d + f * u, e[5] = p - m * u, e[9] = -s * h, e[2] = m - p * u, e[6] = f + d * u, e[10] = a * h
                    } else if ("YXZ" === t.order) {
                        var g = h * c,
                            v = h * l,
                            y = u * c,
                            _ = u * l;
                        e[0] = g + _ * s, e[4] = y * s - v, e[8] = a * u, e[1] = a * l, e[5] = a * c, e[9] = -s, e[2] = v * s - y, e[6] = _ + g * s, e[10] = a * h
                    } else if ("ZXY" === t.order) {
                        var g = h * c,
                            v = h * l,
                            y = u * c,
                            _ = u * l;
                        e[0] = g - _ * s, e[4] = -a * l, e[8] = y + v * s, e[1] = v + y * s, e[5] = a * c, e[9] = _ - g * s, e[2] = -a * u, e[6] = s, e[10] = a * h
                    } else if ("ZYX" === t.order) {
                        var p = a * c,
                            d = a * l,
                            f = s * c,
                            m = s * l;
                        e[0] = h * c, e[4] = f * u - d, e[8] = p * u + m, e[1] = h * l, e[5] = m * u + p, e[9] = d * u - f, e[2] = -u, e[6] = s * h, e[10] = a * h
                    } else if ("YZX" === t.order) {
                        var b = a * h,
                            x = a * u,
                            w = s * h,
                            M = s * u;
                        e[0] = h * c, e[4] = M - b * l, e[8] = w * l + x, e[1] = l, e[5] = a * c, e[9] = -s * c, e[2] = -u * c, e[6] = x * l + w, e[10] = b - M * l
                    } else if ("XZY" === t.order) {
                        var b = a * h,
                            x = a * u,
                            w = s * h,
                            M = s * u;
                        e[0] = h * c, e[4] = -l, e[8] = u * c, e[1] = b * l + M, e[5] = a * c, e[9] = x * l - w, e[2] = w * l - x, e[6] = s * c, e[10] = M * l + b
                    }
                    return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
                },
                makeRotationFromQuaternion: function(t) {
                    var e = this.elements,
                        i = t.x,
                        n = t.y,
                        r = t.z,
                        o = t.w,
                        a = i + i,
                        s = n + n,
                        h = r + r,
                        u = i * a,
                        c = i * s,
                        l = i * h,
                        p = n * s,
                        d = n * h,
                        f = r * h,
                        m = o * a,
                        g = o * s,
                        v = o * h;
                    return e[0] = 1 - (p + f), e[4] = c - v, e[8] = l + g, e[1] = c + v, e[5] = 1 - (u + f), e[9] = d - m, e[2] = l - g, e[6] = d + m, e[10] = 1 - (u + p), e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
                },
                lookAt: function() {
                    var t, e, i;
                    return function(r, o, a) {
                        void 0 === t && (t = new n.Vector3, e = new n.Vector3, i = new n.Vector3);
                        var s = this.elements;
                        return i.subVectors(r, o).normalize(), 0 === i.lengthSq() && (i.z = 1), t.crossVectors(a, i).normalize(), 0 === t.lengthSq() && (i.z += 1e-4, t.crossVectors(a, i).normalize()), e.crossVectors(i, t), s[0] = t.x, s[4] = e.x, s[8] = i.x, s[1] = t.y, s[5] = e.y, s[9] = i.y, s[2] = t.z, s[6] = e.z, s[10] = i.z, this
                    }
                }(),
                multiply: function(t, e) {
                    return void 0 !== e ? this.multiplyMatrices(t, e) : this.multiplyMatrices(this, t)
                },
                premultiply: function(t) {
                    return this.multiplyMatrices(t, this)
                },
                multiplyMatrices: function(t, e) {
                    var i = t.elements,
                        n = e.elements,
                        r = this.elements,
                        o = i[0],
                        a = i[4],
                        s = i[8],
                        h = i[12],
                        u = i[1],
                        c = i[5],
                        l = i[9],
                        p = i[13],
                        d = i[2],
                        f = i[6],
                        m = i[10],
                        g = i[14],
                        v = i[3],
                        y = i[7],
                        _ = i[11],
                        b = i[15],
                        x = n[0],
                        w = n[4],
                        M = n[8],
                        S = n[12],
                        T = n[1],
                        A = n[5],
                        E = n[9],
                        C = n[13],
                        P = n[2],
                        L = n[6],
                        R = n[10],
                        k = n[14],
                        I = n[3],
                        D = n[7],
                        B = n[11],
                        O = n[15];
                    return r[0] = o * x + a * T + s * P + h * I, r[4] = o * w + a * A + s * L + h * D, r[8] = o * M + a * E + s * R + h * B, r[12] = o * S + a * C + s * k + h * O, r[1] = u * x + c * T + l * P + p * I, r[5] = u * w + c * A + l * L + p * D, r[9] = u * M + c * E + l * R + p * B, r[13] = u * S + c * C + l * k + p * O, r[2] = d * x + f * T + m * P + g * I, r[6] = d * w + f * A + m * L + g * D, r[10] = d * M + f * E + m * R + g * B, r[14] = d * S + f * C + m * k + g * O, r[3] = v * x + y * T + _ * P + b * I, r[7] = v * w + y * A + _ * L + b * D, r[11] = v * M + y * E + _ * R + b * B, r[15] = v * S + y * C + _ * k + b * O, this
                },
                multiplyToArray: function(t, e, i) {
                    var n = this.elements;
                    return this.multiplyMatrices(t, e), i[0] = n[0], i[1] = n[1], i[2] = n[2], i[3] = n[3], i[4] = n[4], i[5] = n[5], i[6] = n[6], i[7] = n[7], i[8] = n[8], i[9] = n[9], i[10] = n[10], i[11] = n[11], i[12] = n[12], i[13] = n[13], i[14] = n[14], i[15] = n[15], this
                },
                multiplyScalar: function(t) {
                    var e = this.elements;
                    return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this
                },
                applyToVector3Array: function() {
                    var t;
                    return function(e, i, r) {
                        void 0 === t && (t = new n.Vector3), void 0 === i && (i = 0), void 0 === r && (r = e.length);
                        for (var o = 0, a = i; r > o; o += 3, a += 3) t.fromArray(e, a), t.applyMatrix4(this), t.toArray(e, a);
                        return e
                    }
                }(),
                applyToBuffer: function() {
                    var t;
                    return function(e, i, r) {
                        void 0 === t && (t = new n.Vector3), void 0 === i && (i = 0), void 0 === r && (r = e.length / e.itemSize);
                        for (var o = 0, a = i; r > o; o++, a++) t.x = e.getX(a), t.y = e.getY(a), t.z = e.getZ(a), t.applyMatrix4(this), e.setXYZ(t.x, t.y, t.z);
                        return e
                    }
                }(),
                determinant: function() {
                    var t = this.elements,
                        e = t[0],
                        i = t[4],
                        n = t[8],
                        r = t[12],
                        o = t[1],
                        a = t[5],
                        s = t[9],
                        h = t[13],
                        u = t[2],
                        c = t[6],
                        l = t[10],
                        p = t[14],
                        d = t[3],
                        f = t[7],
                        m = t[11],
                        g = t[15];
                    return d * (+r * s * c - n * h * c - r * a * l + i * h * l + n * a * p - i * s * p) + f * (+e * s * p - e * h * l + r * o * l - n * o * p + n * h * u - r * s * u) + m * (+e * h * c - e * a * p - r * o * c + i * o * p + r * a * u - i * h * u) + g * (-n * a * u - e * s * c + e * a * l + n * o * c - i * o * l + i * s * u)
                },
                transpose: function() {
                    var t, e = this.elements;
                    return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this
                },
                flattenToArrayOffset: function(t, e) {
                    return this.toArray(t, e)
                },
                getPosition: function() {
                    var t;
                    return function() {
                        return void 0 === t && (t = new n.Vector3), t.setFromMatrixColumn(this, 3)
                    }
                }(),
                setPosition: function(t) {
                    var e = this.elements;
                    return e[12] = t.x, e[13] = t.y, e[14] = t.z, this
                },
                getInverse: function(t, e) {
                    var i = this.elements,
                        n = t.elements,
                        r = n[0],
                        o = n[1],
                        a = n[2],
                        s = n[3],
                        h = n[4],
                        u = n[5],
                        c = n[6],
                        l = n[7],
                        p = n[8],
                        d = n[9],
                        f = n[10],
                        m = n[11],
                        g = n[12],
                        v = n[13],
                        y = n[14],
                        _ = n[15],
                        b = d * y * l - v * f * l + v * c * m - u * y * m - d * c * _ + u * f * _,
                        x = g * f * l - p * y * l - g * c * m + h * y * m + p * c * _ - h * f * _,
                        w = p * v * l - g * d * l + g * u * m - h * v * m - p * u * _ + h * d * _,
                        M = g * d * c - p * v * c - g * u * f + h * v * f + p * u * y - h * d * y,
                        S = r * b + o * x + a * w + s * M;
                    if (0 === S) {
                        var T = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                        if (e) throw new Error(T);
                        return this.identity()
                    }
                    var A = 1 / S;
                    return i[0] = b * A, i[1] = (v * f * s - d * y * s - v * a * m + o * y * m + d * a * _ - o * f * _) * A, i[2] = (u * y * s - v * c * s + v * a * l - o * y * l - u * a * _ + o * c * _) * A, i[3] = (d * c * s - u * f * s - d * a * l + o * f * l + u * a * m - o * c * m) * A, i[4] = x * A, i[5] = (p * y * s - g * f * s + g * a * m - r * y * m - p * a * _ + r * f * _) * A, i[6] = (g * c * s - h * y * s - g * a * l + r * y * l + h * a * _ - r * c * _) * A, i[7] = (h * f * s - p * c * s + p * a * l - r * f * l - h * a * m + r * c * m) * A, i[8] = w * A, i[9] = (g * d * s - p * v * s - g * o * m + r * v * m + p * o * _ - r * d * _) * A, i[10] = (h * v * s - g * u * s + g * o * l - r * v * l - h * o * _ + r * u * _) * A, i[11] = (p * u * s - h * d * s - p * o * l + r * d * l + h * o * m - r * u * m) * A, i[12] = M * A, i[13] = (p * v * a - g * d * a + g * o * f - r * v * f - p * o * y + r * d * y) * A, i[14] = (g * u * a - h * v * a - g * o * c + r * v * c + h * o * y - r * u * y) * A, i[15] = (h * d * a - p * u * a + p * o * c - r * d * c - h * o * f + r * u * f) * A, this
                },
                scale: function(t) {
                    var e = this.elements,
                        i = t.x,
                        n = t.y,
                        r = t.z;
                    return e[0] *= i, e[4] *= n, e[8] *= r, e[1] *= i, e[5] *= n, e[9] *= r, e[2] *= i, e[6] *= n, e[10] *= r, e[3] *= i, e[7] *= n, e[11] *= r, this
                },
                getMaxScaleOnAxis: function() {
                    var t = this.elements,
                        e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
                        i = t[4] * t[4] + t[5] * t[5] + t[6] * t[6],
                        n = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                    return Math.sqrt(Math.max(e, i, n))
                },
                makeTranslation: function(t, e, i) {
                    return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1), this
                },
                makeRotationX: function(t) {
                    var e = Math.cos(t),
                        i = Math.sin(t);
                    return this.set(1, 0, 0, 0, 0, e, -i, 0, 0, i, e, 0, 0, 0, 0, 1), this
                },
                makeRotationY: function(t) {
                    var e = Math.cos(t),
                        i = Math.sin(t);
                    return this.set(e, 0, i, 0, 0, 1, 0, 0, -i, 0, e, 0, 0, 0, 0, 1), this
                },
                makeRotationZ: function(t) {
                    var e = Math.cos(t),
                        i = Math.sin(t);
                    return this.set(e, -i, 0, 0, i, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                },
                makeRotationAxis: function(t, e) {
                    var i = Math.cos(e),
                        n = Math.sin(e),
                        r = 1 - i,
                        o = t.x,
                        a = t.y,
                        s = t.z,
                        h = r * o,
                        u = r * a;
                    return this.set(h * o + i, h * a - n * s, h * s + n * a, 0, h * a + n * s, u * a + i, u * s - n * o, 0, h * s - n * a, u * s + n * o, r * s * s + i, 0, 0, 0, 0, 1), this
                },
                makeScale: function(t, e, i) {
                    return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this
                },
                compose: function(t, e, i) {
                    return this.makeRotationFromQuaternion(e), this.scale(i), this.setPosition(t), this
                },
                decompose: function() {
                    var t, e;
                    return function(i, r, o) {
                        void 0 === t && (t = new n.Vector3, e = new n.Matrix4);
                        var a = this.elements,
                            s = t.set(a[0], a[1], a[2]).length(),
                            h = t.set(a[4], a[5], a[6]).length(),
                            u = t.set(a[8], a[9], a[10]).length(),
                            c = this.determinant();
                        0 > c && (s = -s), i.x = a[12], i.y = a[13], i.z = a[14], e.elements.set(this.elements);
                        var l = 1 / s,
                            p = 1 / h,
                            d = 1 / u;
                        return e.elements[0] *= l, e.elements[1] *= l, e.elements[2] *= l, e.elements[4] *= p, e.elements[5] *= p, e.elements[6] *= p, e.elements[8] *= d, e.elements[9] *= d, e.elements[10] *= d, r.setFromRotationMatrix(e), o.x = s, o.y = h, o.z = u, this
                    }
                }(),
                makeFrustum: function(t, e, i, n, r, o) {
                    var a = this.elements,
                        s = 2 * r / (e - t),
                        h = 2 * r / (n - i),
                        u = (e + t) / (e - t),
                        c = (n + i) / (n - i),
                        l = -(o + r) / (o - r),
                        p = -2 * o * r / (o - r);
                    return a[0] = s, a[4] = 0, a[8] = u, a[12] = 0, a[1] = 0, a[5] = h, a[9] = c, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = l, a[14] = p, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
                },
                makePerspective: function(t, e, i, r) {
                    var o = i * Math.tan(n.Math.DEG2RAD * t * .5),
                        a = -o,
                        s = a * e,
                        h = o * e;
                    return this.makeFrustum(s, h, a, o, i, r)
                },
                makeOrthographic: function(t, e, i, n, r, o) {
                    var a = this.elements,
                        s = 1 / (e - t),
                        h = 1 / (i - n),
                        u = 1 / (o - r),
                        c = (e + t) * s,
                        l = (i + n) * h,
                        p = (o + r) * u;
                    return a[0] = 2 * s, a[4] = 0, a[8] = 0, a[12] = -c, a[1] = 0, a[5] = 2 * h, a[9] = 0, a[13] = -l, a[2] = 0, a[6] = 0, a[10] = -2 * u, a[14] = -p, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
                },
                equals: function(t) {
                    for (var e = this.elements, i = t.elements, n = 0; 16 > n; n++)
                        if (e[n] !== i[n]) return !1;
                    return !0
                },
                fromArray: function(t) {
                    return this.elements.set(t), this
                },
                toArray: function(t, e) {
                    void 0 === t && (t = []), void 0 === e && (e = 0);
                    var i = this.elements;
                    return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t[e + 9] = i[9], t[e + 10] = i[10], t[e + 11] = i[11], t[e + 12] = i[12], t[e + 13] = i[13], t[e + 14] = i[14], t[e + 15] = i[15], t
                }
            }, n.Ray = function(t, e) {
                this.origin = void 0 !== t ? t : new n.Vector3, this.direction = void 0 !== e ? e : new n.Vector3
            }, n.Ray.prototype = {
                constructor: n.Ray,
                set: function(t, e) {
                    return this.origin.copy(t), this.direction.copy(e), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.origin.copy(t.origin), this.direction.copy(t.direction), this
                },
                at: function(t, e) {
                    var i = e || new n.Vector3;
                    return i.copy(this.direction).multiplyScalar(t).add(this.origin)
                },
                lookAt: function(t) {
                    return this.direction.copy(t).sub(this.origin).normalize(), this
                },
                recast: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        return this.origin.copy(this.at(e, t)), this
                    }
                }(),
                closestPointToPoint: function(t, e) {
                    var i = e || new n.Vector3;
                    i.subVectors(t, this.origin);
                    var r = i.dot(this.direction);
                    return 0 > r ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(r).add(this.origin)
                },
                distanceToPoint: function(t) {
                    return Math.sqrt(this.distanceSqToPoint(t))
                },
                distanceSqToPoint: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        var i = t.subVectors(e, this.origin).dot(this.direction);
                        return 0 > i ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin), t.distanceToSquared(e))
                    }
                }(),
                distanceSqToSegment: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3,
                        i = new n.Vector3;
                    return function(n, r, o, a) {
                        t.copy(n).add(r).multiplyScalar(.5), e.copy(r).sub(n).normalize(), i.copy(this.origin).sub(t);
                        var s, h, u, c, l = .5 * n.distanceTo(r),
                            p = -this.direction.dot(e),
                            d = i.dot(this.direction),
                            f = -i.dot(e),
                            m = i.lengthSq(),
                            g = Math.abs(1 - p * p);
                        if (g > 0)
                            if (s = p * f - d, h = p * d - f, c = l * g, s >= 0)
                                if (h >= -c)
                                    if (c >= h) {
                                        var v = 1 / g;
                                        s *= v, h *= v, u = s * (s + p * h + 2 * d) + h * (p * s + h + 2 * f) + m
                                    } else h = l, s = Math.max(0, -(p * h + d)), u = -s * s + h * (h + 2 * f) + m;
                        else h = -l, s = Math.max(0, -(p * h + d)), u = -s * s + h * (h + 2 * f) + m;
                        else -c >= h ? (s = Math.max(0, -(-p * l + d)), h = s > 0 ? -l : Math.min(Math.max(-l, -f), l), u = -s * s + h * (h + 2 * f) + m) : c >= h ? (s = 0, h = Math.min(Math.max(-l, -f), l), u = h * (h + 2 * f) + m) : (s = Math.max(0, -(p * l + d)), h = s > 0 ? l : Math.min(Math.max(-l, -f), l), u = -s * s + h * (h + 2 * f) + m);
                        else h = p > 0 ? -l : l, s = Math.max(0, -(p * h + d)), u = -s * s + h * (h + 2 * f) + m;
                        return o && o.copy(this.direction).multiplyScalar(s).add(this.origin), a && a.copy(e).multiplyScalar(h).add(t), u
                    }
                }(),
                intersectSphere: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        t.subVectors(e.center, this.origin);
                        var n = t.dot(this.direction),
                            r = t.dot(t) - n * n,
                            o = e.radius * e.radius;
                        if (r > o) return null;
                        var a = Math.sqrt(o - r),
                            s = n - a,
                            h = n + a;
                        return 0 > s && 0 > h ? null : 0 > s ? this.at(h, i) : this.at(s, i)
                    }
                }(),
                intersectsSphere: function(t) {
                    return this.distanceToPoint(t.center) <= t.radius
                },
                distanceToPlane: function(t) {
                    var e = t.normal.dot(this.direction);
                    if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;
                    var i = -(this.origin.dot(t.normal) + t.constant) / e;
                    return i >= 0 ? i : null
                },
                intersectPlane: function(t, e) {
                    var i = this.distanceToPlane(t);
                    return null === i ? null : this.at(i, e)
                },
                intersectsPlane: function(t) {
                    var e = t.distanceToPoint(this.origin);
                    if (0 === e) return !0;
                    var i = t.normal.dot(this.direction);
                    return 0 > i * e
                },
                intersectBox: function(t, e) {
                    var i, n, r, o, a, s, h = 1 / this.direction.x,
                        u = 1 / this.direction.y,
                        c = 1 / this.direction.z,
                        l = this.origin;
                    return h >= 0 ? (i = (t.min.x - l.x) * h, n = (t.max.x - l.x) * h) : (i = (t.max.x - l.x) * h, n = (t.min.x - l.x) * h), u >= 0 ? (r = (t.min.y - l.y) * u, o = (t.max.y - l.y) * u) : (r = (t.max.y - l.y) * u, o = (t.min.y - l.y) * u), i > o || r > n ? null : ((r > i || i !== i) && (i = r), (n > o || n !== n) && (n = o), c >= 0 ? (a = (t.min.z - l.z) * c, s = (t.max.z - l.z) * c) : (a = (t.max.z - l.z) * c, s = (t.min.z - l.z) * c), i > s || a > n ? null : ((a > i || i !== i) && (i = a), (n > s || n !== n) && (n = s), 0 > n ? null : this.at(i >= 0 ? i : n, e)))
                },
                intersectsBox: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        return null !== this.intersectBox(e, t)
                    }
                }(),
                intersectTriangle: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3,
                        i = new n.Vector3,
                        r = new n.Vector3;
                    return function(n, o, a, s, h) {
                        e.subVectors(o, n), i.subVectors(a, n), r.crossVectors(e, i);
                        var u, c = this.direction.dot(r);
                        if (c > 0) {
                            if (s) return null;
                            u = 1
                        } else {
                            if (!(0 > c)) return null;
                            u = -1, c = -c
                        }
                        t.subVectors(this.origin, n);
                        var l = u * this.direction.dot(i.crossVectors(t, i));
                        if (0 > l) return null;
                        var p = u * this.direction.dot(e.cross(t));
                        if (0 > p) return null;
                        if (l + p > c) return null;
                        var d = -u * t.dot(r);
                        return 0 > d ? null : this.at(d / c, h)
                    }
                }(),
                applyMatrix4: function(t) {
                    return this.direction.add(this.origin).applyMatrix4(t), this.origin.applyMatrix4(t), this.direction.sub(this.origin), this.direction.normalize(), this
                },
                equals: function(t) {
                    return t.origin.equals(this.origin) && t.direction.equals(this.direction)
                }
            }, n.Sphere = function(t, e) {
                this.center = void 0 !== t ? t : new n.Vector3, this.radius = void 0 !== e ? e : 0
            }, n.Sphere.prototype = {
                constructor: n.Sphere,
                set: function(t, e) {
                    return this.center.copy(t), this.radius = e, this
                },
                setFromPoints: function() {
                    var t = new n.Box3;
                    return function(e, i) {
                        var n = this.center;
                        void 0 !== i ? n.copy(i) : t.setFromPoints(e).center(n);
                        for (var r = 0, o = 0, a = e.length; a > o; o++) r = Math.max(r, n.distanceToSquared(e[o]));
                        return this.radius = Math.sqrt(r), this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.center.copy(t.center), this.radius = t.radius, this
                },
                empty: function() {
                    return this.radius <= 0
                },
                containsPoint: function(t) {
                    return t.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function(t) {
                    return t.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function(t) {
                    var e = this.radius + t.radius;
                    return t.center.distanceToSquared(this.center) <= e * e
                },
                intersectsBox: function(t) {
                    return t.intersectsSphere(this)
                },
                intersectsPlane: function(t) {
                    return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius
                },
                clampPoint: function(t, e) {
                    var i = this.center.distanceToSquared(t),
                        r = e || new n.Vector3;
                    return r.copy(t), i > this.radius * this.radius && (r.sub(this.center).normalize(), r.multiplyScalar(this.radius).add(this.center)), r
                },
                getBoundingBox: function(t) {
                    var e = t || new n.Box3;
                    return e.set(this.center, this.center), e.expandByScalar(this.radius), e
                },
                applyMatrix4: function(t) {
                    return this.center.applyMatrix4(t), this.radius = this.radius * t.getMaxScaleOnAxis(), this
                },
                translate: function(t) {
                    return this.center.add(t), this
                },
                equals: function(t) {
                    return t.center.equals(this.center) && t.radius === this.radius
                }
            }, n.Frustum = function(t, e, i, r, o, a) {
                this.planes = [void 0 !== t ? t : new n.Plane, void 0 !== e ? e : new n.Plane, void 0 !== i ? i : new n.Plane, void 0 !== r ? r : new n.Plane, void 0 !== o ? o : new n.Plane, void 0 !== a ? a : new n.Plane]
            }, n.Frustum.prototype = {
                constructor: n.Frustum,
                set: function(t, e, i, n, r, o) {
                    var a = this.planes;
                    return a[0].copy(t), a[1].copy(e), a[2].copy(i), a[3].copy(n), a[4].copy(r), a[5].copy(o), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    for (var e = this.planes, i = 0; 6 > i; i++) e[i].copy(t.planes[i]);
                    return this
                },
                setFromMatrix: function(t) {
                    var e = this.planes,
                        i = t.elements,
                        n = i[0],
                        r = i[1],
                        o = i[2],
                        a = i[3],
                        s = i[4],
                        h = i[5],
                        u = i[6],
                        c = i[7],
                        l = i[8],
                        p = i[9],
                        d = i[10],
                        f = i[11],
                        m = i[12],
                        g = i[13],
                        v = i[14],
                        y = i[15];
                    return e[0].setComponents(a - n, c - s, f - l, y - m).normalize(), e[1].setComponents(a + n, c + s, f + l, y + m).normalize(), e[2].setComponents(a + r, c + h, f + p, y + g).normalize(), e[3].setComponents(a - r, c - h, f - p, y - g).normalize(), e[4].setComponents(a - o, c - u, f - d, y - v).normalize(), e[5].setComponents(a + o, c + u, f + d, y + v).normalize(), this
                },
                intersectsObject: function() {
                    var t = new n.Sphere;
                    return function(e) {
                        var i = e.geometry;
                        return null === i.boundingSphere && i.computeBoundingSphere(), t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
                    }
                }(),
                intersectsSprite: function() {
                    var t = new n.Sphere;
                    return function(e) {
                        return t.center.set(0, 0, 0), t.radius = .7071067811865476, t.applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
                    }
                }(),
                intersectsSphere: function(t) {
                    for (var e = this.planes, i = t.center, n = -t.radius, r = 0; 6 > r; r++) {
                        var o = e[r].distanceToPoint(i);
                        if (n > o) return !1
                    }
                    return !0
                },
                intersectsBox: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function(i) {
                        for (var n = this.planes, r = 0; 6 > r; r++) {
                            var o = n[r];
                            t.x = o.normal.x > 0 ? i.min.x : i.max.x, e.x = o.normal.x > 0 ? i.max.x : i.min.x, t.y = o.normal.y > 0 ? i.min.y : i.max.y, e.y = o.normal.y > 0 ? i.max.y : i.min.y, t.z = o.normal.z > 0 ? i.min.z : i.max.z, e.z = o.normal.z > 0 ? i.max.z : i.min.z;
                            var a = o.distanceToPoint(t),
                                s = o.distanceToPoint(e);
                            if (0 > a && 0 > s) return !1
                        }
                        return !0
                    }
                }(),
                containsPoint: function(t) {
                    for (var e = this.planes, i = 0; 6 > i; i++)
                        if (e[i].distanceToPoint(t) < 0) return !1;
                    return !0
                }
            }, n.Plane = function(t, e) {
                this.normal = void 0 !== t ? t : new n.Vector3(1, 0, 0), this.constant = void 0 !== e ? e : 0
            }, n.Plane.prototype = {
                constructor: n.Plane,
                set: function(t, e) {
                    return this.normal.copy(t), this.constant = e, this
                },
                setComponents: function(t, e, i, n) {
                    return this.normal.set(t, e, i), this.constant = n, this
                },
                setFromNormalAndCoplanarPoint: function(t, e) {
                    return this.normal.copy(t), this.constant = -e.dot(this.normal), this
                },
                setFromCoplanarPoints: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function(i, n, r) {
                        var o = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize();
                        return this.setFromNormalAndCoplanarPoint(o, i), this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.normal.copy(t.normal), this.constant = t.constant, this
                },
                normalize: function() {
                    var t = 1 / this.normal.length();
                    return this.normal.multiplyScalar(t), this.constant *= t, this
                },
                negate: function() {
                    return this.constant *= -1, this.normal.negate(), this
                },
                distanceToPoint: function(t) {
                    return this.normal.dot(t) + this.constant
                },
                distanceToSphere: function(t) {
                    return this.distanceToPoint(t.center) - t.radius
                },
                projectPoint: function(t, e) {
                    return this.orthoPoint(t, e).sub(t).negate()
                },
                orthoPoint: function(t, e) {
                    var i = this.distanceToPoint(t),
                        r = e || new n.Vector3;
                    return r.copy(this.normal).multiplyScalar(i)
                },
                intersectLine: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        var r = i || new n.Vector3,
                            o = e.delta(t),
                            a = this.normal.dot(o);
                        if (0 !== a) {
                            var s = -(e.start.dot(this.normal) + this.constant) / a;
                            if (!(0 > s || s > 1)) return r.copy(o).multiplyScalar(s).add(e.start)
                        } else if (0 === this.distanceToPoint(e.start)) return r.copy(e.start)
                    }
                }(),
                intersectsLine: function(t) {
                    var e = this.distanceToPoint(t.start),
                        i = this.distanceToPoint(t.end);
                    return 0 > e && i > 0 || 0 > i && e > 0
                },
                intersectsBox: function(t) {
                    return t.intersectsPlane(this)
                },
                intersectsSphere: function(t) {
                    return t.intersectsPlane(this)
                },
                coplanarPoint: function(t) {
                    var e = t || new n.Vector3;
                    return e.copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function() {
                    var t = new n.Vector3,
                        e = new n.Matrix3;
                    return function(i, n) {
                        var r = this.coplanarPoint(t).applyMatrix4(i),
                            o = n || e.getNormalMatrix(i),
                            a = this.normal.applyMatrix3(o).normalize();
                        return this.constant = -r.dot(a), this
                    }
                }(),
                translate: function(t) {
                    return this.constant = this.constant - t.dot(this.normal), this
                },
                equals: function(t) {
                    return t.normal.equals(this.normal) && t.constant === this.constant
                }
            }, n.Spherical = function(t, e, i) {
                return this.radius = void 0 !== t ? t : 1, this.phi = void 0 !== e ? e : 0, this.theta = void 0 !== i ? i : 0, this
            }, n.Spherical.prototype = {
                constructor: n.Spherical,
                set: function(t, e, i) {
                    return this.radius = t, this.phi = e, this.theta = i, this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.radius.copy(t.radius), this.phi.copy(t.phi), this.theta.copy(t.theta), this
                },
                makeSafe: function() {
                    var t = 1e-6;
                    return this.phi = Math.max(t, Math.min(Math.PI - t, this.phi)),
                        this
                },
                setFromVector3: function(t) {
                    return this.radius = t.length(), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t.x, t.z), this.phi = Math.acos(n.Math.clamp(t.y / this.radius, -1, 1))), this
                }
            }, n.Math = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function() {
                    var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                        i = new Array(36),
                        n = 0;
                    return function() {
                        for (var r = 0; 36 > r; r++) 8 === r || 13 === r || 18 === r || 23 === r ? i[r] = "-" : 14 === r ? i[r] = "4" : (2 >= n && (n = 33554432 + 16777216 * Math.random() | 0), t = 15 & n, n >>= 4, i[r] = e[19 === r ? 3 & t | 8 : t]);
                        return i.join("")
                    }
                }(),
                clamp: function(t, e, i) {
                    return Math.max(e, Math.min(i, t))
                },
                euclideanModulo: function(t, e) {
                    return (t % e + e) % e
                },
                mapLinear: function(t, e, i, n, r) {
                    return n + (t - e) * (r - n) / (i - e)
                },
                smoothstep: function(t, e, i) {
                    return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e), t * t * (3 - 2 * t))
                },
                smootherstep: function(t, e, i) {
                    return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e), t * t * t * (t * (6 * t - 15) + 10))
                },
                random16: function() {
                    return Math.random()
                },
                randInt: function(t, e) {
                    return t + Math.floor(Math.random() * (e - t + 1))
                },
                randFloat: function(t, e) {
                    return t + Math.random() * (e - t)
                },
                randFloatSpread: function(t) {
                    return t * (.5 - Math.random())
                },
                degToRad: function(t) {
                    return t * n.Math.DEG2RAD
                },
                radToDeg: function(t) {
                    return t * n.Math.RAD2DEG
                },
                isPowerOfTwo: function(t) {
                    return 0 === (t & t - 1) && 0 !== t
                },
                nearestPowerOfTwo: function(t) {
                    return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
                },
                nextPowerOfTwo: function(t) {
                    return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, t++, t
                }
            }, n.Spline = function(t) {
                function e(t, e, i, n, r, o, a) {
                    var s = .5 * (i - t),
                        h = .5 * (n - e);
                    return (2 * (e - i) + s + h) * a + (-3 * (e - i) - 2 * s - h) * o + s * r + e
                }
                this.points = t;
                var i, r, o, a, s, h, u, c, l, p = [],
                    d = {
                        x: 0,
                        y: 0,
                        z: 0
                    };
                this.initFromArray = function(t) {
                    this.points = [];
                    for (var e = 0; e < t.length; e++) this.points[e] = {
                        x: t[e][0],
                        y: t[e][1],
                        z: t[e][2]
                    }
                }, this.getPoint = function(t) {
                    return i = (this.points.length - 1) * t, r = Math.floor(i), o = i - r, p[0] = 0 === r ? r : r - 1, p[1] = r, p[2] = r > this.points.length - 2 ? this.points.length - 1 : r + 1, p[3] = r > this.points.length - 3 ? this.points.length - 1 : r + 2, h = this.points[p[0]], u = this.points[p[1]], c = this.points[p[2]], l = this.points[p[3]], a = o * o, s = o * a, d.x = e(h.x, u.x, c.x, l.x, o, a, s), d.y = e(h.y, u.y, c.y, l.y, o, a, s), d.z = e(h.z, u.z, c.z, l.z, o, a, s), d
                }, this.getControlPointsArray = function() {
                    var t, e, i = this.points.length,
                        n = [];
                    for (t = 0; i > t; t++) e = this.points[t], n[t] = [e.x, e.y, e.z];
                    return n
                }, this.getLength = function(t) {
                    var e, i, r, o, a = 0,
                        s = 0,
                        h = 0,
                        u = new n.Vector3,
                        c = new n.Vector3,
                        l = [],
                        p = 0;
                    for (l[0] = 0, t || (t = 100), r = this.points.length * t, u.copy(this.points[0]), e = 1; r > e; e++) i = e / r, o = this.getPoint(i), c.copy(o), p += c.distanceTo(u), u.copy(o), a = (this.points.length - 1) * i, s = Math.floor(a), s !== h && (l[s] = p, h = s);
                    return l[l.length] = p, {
                        chunks: l,
                        total: p
                    }
                }, this.reparametrizeByArcLength = function(t) {
                    var e, i, r, o, a, s, h, u, c = [],
                        l = new n.Vector3,
                        p = this.getLength();
                    for (c.push(l.copy(this.points[0]).clone()), e = 1; e < this.points.length; e++) {
                        for (s = p.chunks[e] - p.chunks[e - 1], h = Math.ceil(t * s / p.total), o = (e - 1) / (this.points.length - 1), a = e / (this.points.length - 1), i = 1; h - 1 > i; i++) r = o + i * (1 / h) * (a - o), u = this.getPoint(r), c.push(l.copy(u).clone());
                        c.push(l.copy(this.points[e]).clone())
                    }
                    this.points = c
                }
            }, n.Triangle = function(t, e, i) {
                this.a = void 0 !== t ? t : new n.Vector3, this.b = void 0 !== e ? e : new n.Vector3, this.c = void 0 !== i ? i : new n.Vector3
            }, n.Triangle.normal = function() {
                var t = new n.Vector3;
                return function(e, i, r, o) {
                    var a = o || new n.Vector3;
                    a.subVectors(r, i), t.subVectors(e, i), a.cross(t);
                    var s = a.lengthSq();
                    return s > 0 ? a.multiplyScalar(1 / Math.sqrt(s)) : a.set(0, 0, 0)
                }
            }(), n.Triangle.barycoordFromPoint = function() {
                var t = new n.Vector3,
                    e = new n.Vector3,
                    i = new n.Vector3;
                return function(r, o, a, s, h) {
                    t.subVectors(s, o), e.subVectors(a, o), i.subVectors(r, o);
                    var u = t.dot(t),
                        c = t.dot(e),
                        l = t.dot(i),
                        p = e.dot(e),
                        d = e.dot(i),
                        f = u * p - c * c,
                        m = h || new n.Vector3;
                    if (0 === f) return m.set(-2, -1, -1);
                    var g = 1 / f,
                        v = (p * l - c * d) * g,
                        y = (u * d - c * l) * g;
                    return m.set(1 - v - y, y, v)
                }
            }(), n.Triangle.containsPoint = function() {
                var t = new n.Vector3;
                return function(e, i, r, o) {
                    var a = n.Triangle.barycoordFromPoint(e, i, r, o, t);
                    return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
                }
            }(), n.Triangle.prototype = {
                constructor: n.Triangle,
                set: function(t, e, i) {
                    return this.a.copy(t), this.b.copy(e), this.c.copy(i), this
                },
                setFromPointsAndIndices: function(t, e, i, n) {
                    return this.a.copy(t[e]), this.b.copy(t[i]), this.c.copy(t[n]), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this
                },
                area: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function() {
                        return t.subVectors(this.c, this.b), e.subVectors(this.a, this.b), .5 * t.cross(e).length()
                    }
                }(),
                midpoint: function(t) {
                    var e = t || new n.Vector3;
                    return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                },
                normal: function(t) {
                    return n.Triangle.normal(this.a, this.b, this.c, t)
                },
                plane: function(t) {
                    var e = t || new n.Plane;
                    return e.setFromCoplanarPoints(this.a, this.b, this.c)
                },
                barycoordFromPoint: function(t, e) {
                    return n.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, e)
                },
                containsPoint: function(t) {
                    return n.Triangle.containsPoint(t, this.a, this.b, this.c)
                },
                closestPointToPoint: function() {
                    var t, e, i, r;
                    return function(o, a) {
                        void 0 === t && (t = new n.Plane, e = [new n.Line3, new n.Line3, new n.Line3], i = new n.Vector3, r = new n.Vector3);
                        var s = a || new n.Vector3,
                            h = 1 / 0;
                        if (t.setFromCoplanarPoints(this.a, this.b, this.c), t.projectPoint(o, i), this.containsPoint(i) === !0) s.copy(i);
                        else {
                            e[0].set(this.a, this.b), e[1].set(this.b, this.c), e[2].set(this.c, this.a);
                            for (var u = 0; u < e.length; u++) {
                                e[u].closestPointToPoint(i, !0, r);
                                var c = i.distanceToSquared(r);
                                h > c && (h = c, s.copy(r))
                            }
                        }
                        return s
                    }
                }(),
                equals: function(t) {
                    return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
                }
            }, n.Interpolant = function(t, e, i, n) {
                this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== n ? n : new e.constructor(i), this.sampleValues = e, this.valueSize = i
            }, n.Interpolant.prototype = {
                constructor: n.Interpolant,
                evaluate: function(t) {
                    var e = this.parameterPositions,
                        i = this._cachedIndex,
                        n = e[i],
                        r = e[i - 1];
                    t: {
                        e: {
                            var o;i: {
                                n: if (!(n > t)) {
                                    for (var a = i + 2;;) {
                                        if (void 0 === n) {
                                            if (r > t) break n;
                                            return i = e.length, this._cachedIndex = i, this.afterEnd_(i - 1, t, r)
                                        }
                                        if (i === a) break;
                                        if (r = n, n = e[++i], n > t) break e
                                    }
                                    o = e.length;
                                    break i
                                } {
                                    if (t >= r) break t;
                                    var s = e[1];
                                    s > t && (i = 2, r = s);
                                    for (var a = i - 2;;) {
                                        if (void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, n);
                                        if (i === a) break;
                                        if (n = r, r = e[--i - 1], t >= r) break e
                                    }
                                    o = i, i = 0
                                }
                            }
                            for (; o > i;) {
                                var h = i + o >>> 1;
                                t < e[h] ? o = h : i = h + 1
                            }
                            if (n = e[i], r = e[i - 1], void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, n);
                            if (void 0 === n) return i = e.length, this._cachedIndex = i, this.afterEnd_(i - 1, r, t)
                        }
                        this._cachedIndex = i,
                        this.intervalChanged_(i, r, n)
                    }
                    return this.interpolate_(i, r, t, n)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function() {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function(t) {
                    for (var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = t * n, o = 0; o !== n; ++o) e[o] = i[r + o];
                    return e
                },
                interpolate_: function(t, e, i, n) {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function(t, e, i) {}
            }, Object.assign(n.Interpolant.prototype, {
                beforeStart_: n.Interpolant.prototype.copySampleValue_,
                afterEnd_: n.Interpolant.prototype.copySampleValue_
            }), n.CubicInterpolant = function(t, e, i, r) {
                n.Interpolant.call(this, t, e, i, r), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0
            }, n.CubicInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
                constructor: n.CubicInterpolant,
                DefaultSettings_: {
                    endingStart: n.ZeroCurvatureEnding,
                    endingEnd: n.ZeroCurvatureEnding
                },
                intervalChanged_: function(t, e, i) {
                    var r = this.parameterPositions,
                        o = t - 2,
                        a = t + 1,
                        s = r[o],
                        h = r[a];
                    if (void 0 === s) switch (this.getSettings_().endingStart) {
                        case n.ZeroSlopeEnding:
                            o = t, s = 2 * e - i;
                            break;
                        case n.WrapAroundEnding:
                            o = r.length - 2, s = e + r[o] - r[o + 1];
                            break;
                        default:
                            o = t, s = i
                    }
                    if (void 0 === h) switch (this.getSettings_().endingEnd) {
                        case n.ZeroSlopeEnding:
                            a = t, h = 2 * i - e;
                            break;
                        case n.WrapAroundEnding:
                            a = 1, h = i + r[1] - r[0];
                            break;
                        default:
                            a = t - 1, h = e
                    }
                    var u = .5 * (i - e),
                        c = this.valueSize;
                    this._weightPrev = u / (e - s), this._weightNext = u / (h - i), this._offsetPrev = o * c, this._offsetNext = a * c
                },
                interpolate_: function(t, e, i, n) {
                    for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, h = s - a, u = this._offsetPrev, c = this._offsetNext, l = this._weightPrev, p = this._weightNext, d = (i - e) / (n - e), f = d * d, m = f * d, g = -l * m + 2 * l * f - l * d, v = (1 + l) * m + (-1.5 - 2 * l) * f + (-.5 + l) * d + 1, y = (-1 - p) * m + (1.5 + p) * f + .5 * d, _ = p * m - p * f, b = 0; b !== a; ++b) r[b] = g * o[u + b] + v * o[h + b] + y * o[s + b] + _ * o[c + b];
                    return r
                }
            }), n.DiscreteInterpolant = function(t, e, i, r) {
                n.Interpolant.call(this, t, e, i, r)
            }, n.DiscreteInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
                constructor: n.DiscreteInterpolant,
                interpolate_: function(t, e, i, n) {
                    return this.copySampleValue_(t - 1)
                }
            }), n.LinearInterpolant = function(t, e, i, r) {
                n.Interpolant.call(this, t, e, i, r)
            }, n.LinearInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
                constructor: n.LinearInterpolant,
                interpolate_: function(t, e, i, n) {
                    for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, h = s - a, u = (i - e) / (n - e), c = 1 - u, l = 0; l !== a; ++l) r[l] = o[h + l] * c + o[s + l] * u;
                    return r
                }
            }), n.QuaternionLinearInterpolant = function(t, e, i, r) {
                n.Interpolant.call(this, t, e, i, r)
            }, n.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(n.Interpolant.prototype), {
                constructor: n.QuaternionLinearInterpolant,
                interpolate_: function(t, e, i, r) {
                    for (var o = this.resultBuffer, a = this.sampleValues, s = this.valueSize, h = t * s, u = (i - e) / (r - e), c = h + s; h !== c; h += 4) n.Quaternion.slerpFlat(o, 0, a, h - s, a, h, u);
                    return o
                }
            }), n.Clock = function(t) {
                this.autoStart = void 0 !== t ? t : !0, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
            }, n.Clock.prototype = {
                constructor: n.Clock,
                start: function() {
                    this.startTime = (performance || Date).now(), this.oldTime = this.startTime, this.running = !0
                },
                stop: function() {
                    this.getElapsedTime(), this.running = !1
                },
                getElapsedTime: function() {
                    return this.getDelta(), this.elapsedTime
                },
                getDelta: function() {
                    var t = 0;
                    if (this.autoStart && !this.running && this.start(), this.running) {
                        var e = (performance || Date).now();
                        t = (e - this.oldTime) / 1e3, this.oldTime = e, this.elapsedTime += t
                    }
                    return t
                }
            }, n.EventDispatcher = function() {}, Object.assign(n.EventDispatcher.prototype, {
                addEventListener: function(t, e) {
                    void 0 === this._listeners && (this._listeners = {});
                    var i = this._listeners;
                    void 0 === i[t] && (i[t] = []), -1 === i[t].indexOf(e) && i[t].push(e)
                },
                hasEventListener: function(t, e) {
                    if (void 0 === this._listeners) return !1;
                    var i = this._listeners;
                    return void 0 !== i[t] && -1 !== i[t].indexOf(e)
                },
                removeEventListener: function(t, e) {
                    if (void 0 !== this._listeners) {
                        var i = this._listeners,
                            n = i[t];
                        if (void 0 !== n) {
                            var r = n.indexOf(e); - 1 !== r && n.splice(r, 1)
                        }
                    }
                },
                dispatchEvent: function(t) {
                    if (void 0 !== this._listeners) {
                        var e = this._listeners,
                            i = e[t.type];
                        if (void 0 !== i) {
                            t.target = this;
                            var n = [],
                                r = 0,
                                o = i.length;
                            for (r = 0; o > r; r++) n[r] = i[r];
                            for (r = 0; o > r; r++) n[r].call(this, t)
                        }
                    }
                }
            }), n.Layers = function() {
                this.mask = 1
            }, n.Layers.prototype = {
                constructor: n.Layers,
                set: function(t) {
                    this.mask = 1 << t
                },
                enable: function(t) {
                    this.mask |= 1 << t
                },
                toggle: function(t) {
                    this.mask ^= 1 << t
                },
                disable: function(t) {
                    this.mask &= ~(1 << t)
                },
                test: function(t) {
                    return 0 !== (this.mask & t.mask)
                }
            },
            function(t) {
                function e(t, e) {
                    return t.distance - e.distance
                }

                function i(t, e, n, r) {
                    if (t.visible !== !1 && (t.raycast(e, n), r === !0))
                        for (var o = t.children, a = 0, s = o.length; s > a; a++) i(o[a], e, n, !0)
                }
                t.Raycaster = function(e, i, n, r) {
                    this.ray = new t.Ray(e, i), this.near = n || 0, this.far = r || 1 / 0, this.params = {
                        Mesh: {},
                        Line: {},
                        LOD: {},
                        Points: {
                            threshold: 1
                        },
                        Sprite: {}
                    }, Object.defineProperties(this.params, {
                        PointCloud: {
                            get: function() {
                                return this.Points
                            }
                        }
                    })
                }, t.Raycaster.prototype = {
                    constructor: t.Raycaster,
                    linePrecision: 1,
                    set: function(t, e) {
                        this.ray.set(t, e)
                    },
                    setFromCamera: function(e, i) {
                        i instanceof t.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(i.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(i).sub(this.ray.origin).normalize()) : i instanceof t.OrthographicCamera && (this.ray.origin.set(e.x, e.y, (i.near + i.far) / (i.near - i.far)).unproject(i), this.ray.direction.set(0, 0, -1).transformDirection(i.matrixWorld))
                    },
                    intersectObject: function(t, n) {
                        var r = [];
                        return i(t, this, r, n), r.sort(e), r
                    },
                    intersectObjects: function(t, n) {
                        var r = [];
                        if (Array.isArray(t) === !1) return r;
                        for (var o = 0, a = t.length; a > o; o++) i(t[o], this, r, n);
                        return r.sort(e), r
                    }
                }
            }(n), n.Object3D = function() {
                function t() {
                    o.setFromEuler(r, !1)
                }

                function e() {
                    r.setFromQuaternion(o, void 0, !1)
                }
                Object.defineProperty(this, "id", {
                    value: n.Object3DIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = n.Object3D.DefaultUp.clone();
                var i = new n.Vector3,
                    r = new n.Euler,
                    o = new n.Quaternion,
                    a = new n.Vector3(1, 1, 1);
                r.onChange(t), o.onChange(e), Object.defineProperties(this, {
                    position: {
                        enumerable: !0,
                        value: i
                    },
                    rotation: {
                        enumerable: !0,
                        value: r
                    },
                    quaternion: {
                        enumerable: !0,
                        value: o
                    },
                    scale: {
                        enumerable: !0,
                        value: a
                    },
                    modelViewMatrix: {
                        value: new n.Matrix4
                    },
                    normalMatrix: {
                        value: new n.Matrix3
                    }
                }), this.matrix = new n.Matrix4, this.matrixWorld = new n.Matrix4, this.matrixAutoUpdate = n.Object3D.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new n.Layers, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
            }, n.Object3D.DefaultUp = new n.Vector3(0, 1, 0), n.Object3D.DefaultMatrixAutoUpdate = !0, Object.assign(n.Object3D.prototype, n.EventDispatcher.prototype, {
                applyMatrix: function(t) {
                    this.matrix.multiplyMatrices(t, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                setRotationFromAxisAngle: function(t, e) {
                    this.quaternion.setFromAxisAngle(t, e)
                },
                setRotationFromEuler: function(t) {
                    this.quaternion.setFromEuler(t, !0)
                },
                setRotationFromMatrix: function(t) {
                    this.quaternion.setFromRotationMatrix(t)
                },
                setRotationFromQuaternion: function(t) {
                    this.quaternion.copy(t)
                },
                rotateOnAxis: function() {
                    var t = new n.Quaternion;
                    return function(e, i) {
                        return t.setFromAxisAngle(e, i), this.quaternion.multiply(t), this
                    }
                }(),
                rotateX: function() {
                    var t = new n.Vector3(1, 0, 0);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                rotateY: function() {
                    var t = new n.Vector3(0, 1, 0);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                rotateZ: function() {
                    var t = new n.Vector3(0, 0, 1);
                    return function(e) {
                        return this.rotateOnAxis(t, e)
                    }
                }(),
                translateOnAxis: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        return t.copy(e).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(i)), this
                    }
                }(),
                translateX: function() {
                    var t = new n.Vector3(1, 0, 0);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                translateY: function() {
                    var t = new n.Vector3(0, 1, 0);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                translateZ: function() {
                    var t = new n.Vector3(0, 0, 1);
                    return function(e) {
                        return this.translateOnAxis(t, e)
                    }
                }(),
                localToWorld: function(t) {
                    return t.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function() {
                    var t = new n.Matrix4;
                    return function(e) {
                        return e.applyMatrix4(t.getInverse(this.matrixWorld))
                    }
                }(),
                lookAt: function() {
                    var t = new n.Matrix4;
                    return function(e) {
                        t.lookAt(e, this.position, this.up), this.quaternion.setFromRotationMatrix(t)
                    }
                }(),
                add: function(t) {
                    if (arguments.length > 1) {
                        for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
                        return this
                    }
                    return t === this ? this : (t instanceof n.Object3D && (null !== t.parent && t.parent.remove(t), t.parent = this, t.dispatchEvent({
                        type: "added"
                    }), this.children.push(t)), this)
                },
                remove: function(t) {
                    if (arguments.length > 1)
                        for (var e = 0; e < arguments.length; e++) this.remove(arguments[e]);
                    var i = this.children.indexOf(t); - 1 !== i && (t.parent = null, t.dispatchEvent({
                        type: "removed"
                    }), this.children.splice(i, 1))
                },
                getObjectById: function(t) {
                    return this.getObjectByProperty("id", t)
                },
                getObjectByName: function(t) {
                    return this.getObjectByProperty("name", t)
                },
                getObjectByProperty: function(t, e) {
                    if (this[t] === e) return this;
                    for (var i = 0, n = this.children.length; n > i; i++) {
                        var r = this.children[i],
                            o = r.getObjectByProperty(t, e);
                        if (void 0 !== o) return o
                    }
                },
                getWorldPosition: function(t) {
                    var e = t || new n.Vector3;
                    return this.updateMatrixWorld(!0), e.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function(i) {
                        var r = i || new n.Quaternion;
                        return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, r, e), r
                    }
                }(),
                getWorldRotation: function() {
                    var t = new n.Quaternion;
                    return function(e) {
                        var i = e || new n.Euler;
                        return this.getWorldQuaternion(t), i.setFromQuaternion(t, this.rotation.order, !1)
                    }
                }(),
                getWorldScale: function() {
                    var t = new n.Vector3,
                        e = new n.Quaternion;
                    return function(i) {
                        var r = i || new n.Vector3;
                        return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, e, r), r
                    }
                }(),
                getWorldDirection: function() {
                    var t = new n.Quaternion;
                    return function(e) {
                        var i = e || new n.Vector3;
                        return this.getWorldQuaternion(t), i.set(0, 0, 1).applyQuaternion(t)
                    }
                }(),
                raycast: function() {},
                traverse: function(t) {
                    t(this);
                    for (var e = this.children, i = 0, n = e.length; n > i; i++) e[i].traverse(t)
                },
                traverseVisible: function(t) {
                    if (this.visible !== !1) {
                        t(this);
                        for (var e = this.children, i = 0, n = e.length; n > i; i++) e[i].traverseVisible(t)
                    }
                },
                traverseAncestors: function(t) {
                    var e = this.parent;
                    null !== e && (t(e), e.traverseAncestors(t))
                },
                updateMatrix: function() {
                    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function(t) {
                    this.matrixAutoUpdate === !0 && this.updateMatrix(), this.matrixWorldNeedsUpdate !== !0 && t !== !0 || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0);
                    for (var e = 0, i = this.children.length; i > e; e++) this.children[e].updateMatrixWorld(t)
                },
                toJSON: function(t) {
                    function e(t) {
                        var e = [];
                        for (var i in t) {
                            var n = t[i];
                            delete n.metadata, e.push(n)
                        }
                        return e
                    }
                    var i = void 0 === t || "" === t,
                        n = {};
                    i && (t = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {}
                    }, n.metadata = {
                        version: 4.4,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var r = {};
                    if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), this.castShadow === !0 && (r.castShadow = !0), this.receiveShadow === !0 && (r.receiveShadow = !0), this.visible === !1 && (r.visible = !1), r.matrix = this.matrix.toArray(), void 0 !== this.geometry && (void 0 === t.geometries[this.geometry.uuid] && (t.geometries[this.geometry.uuid] = this.geometry.toJSON(t)), r.geometry = this.geometry.uuid), void 0 !== this.material && (void 0 === t.materials[this.material.uuid] && (t.materials[this.material.uuid] = this.material.toJSON(t)), r.material = this.material.uuid), this.children.length > 0) {
                        r.children = [];
                        for (var o = 0; o < this.children.length; o++) r.children.push(this.children[o].toJSON(t).object)
                    }
                    if (i) {
                        var a = e(t.geometries),
                            s = e(t.materials),
                            h = e(t.textures),
                            u = e(t.images);
                        a.length > 0 && (n.geometries = a), s.length > 0 && (n.materials = s), h.length > 0 && (n.textures = h), u.length > 0 && (n.images = u)
                    }
                    return n.object = r, n
                },
                clone: function(t) {
                    return (new this.constructor).copy(this, t)
                },
                copy: function(t, e) {
                    if (void 0 === e && (e = !0), this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), e === !0)
                        for (var i = 0; i < t.children.length; i++) {
                            var n = t.children[i];
                            this.add(n.clone())
                        }
                    return this
                }
            }), n.Object3DIdCount = 0, n.Face3 = function(t, e, i, r, o, a) {
                this.a = t, this.b = e, this.c = i, this.normal = r instanceof n.Vector3 ? r : new n.Vector3, this.vertexNormals = Array.isArray(r) ? r : [], this.color = o instanceof n.Color ? o : new n.Color, this.vertexColors = Array.isArray(o) ? o : [], this.materialIndex = void 0 !== a ? a : 0
            }, n.Face3.prototype = {
                constructor: n.Face3,
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    this.a = t.a, this.b = t.b, this.c = t.c, this.normal.copy(t.normal), this.color.copy(t.color), this.materialIndex = t.materialIndex;
                    for (var e = 0, i = t.vertexNormals.length; i > e; e++) this.vertexNormals[e] = t.vertexNormals[e].clone();
                    for (var e = 0, i = t.vertexColors.length; i > e; e++) this.vertexColors[e] = t.vertexColors[e].clone();
                    return this
                }
            }, n.BufferAttribute = function(t, e, i) {
                this.uuid = n.Math.generateUUID(), this.array = t, this.itemSize = e, this.dynamic = !1, this.updateRange = {
                    offset: 0,
                    count: -1
                }, this.version = 0, this.normalized = i === !0
            }, n.BufferAttribute.prototype = {
                constructor: n.BufferAttribute,
                get count() {
                    return this.array.length / this.itemSize
                },
                set needsUpdate(t) {
                    t === !0 && this.version++
                },
                setDynamic: function(t) {
                    return this.dynamic = t, this
                },
                copy: function(t) {
                    return this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.dynamic = t.dynamic, this
                },
                copyAt: function(t, e, i) {
                    t *= this.itemSize, i *= e.itemSize;
                    for (var n = 0, r = this.itemSize; r > n; n++) this.array[t + n] = e.array[i + n];
                    return this
                },
                copyArray: function(t) {
                    return this.array.set(t), this
                },
                copyColorsArray: function(t) {
                    for (var e = this.array, i = 0, r = 0, o = t.length; o > r; r++) {
                        var a = t[r];
                        void 0 === a && (a = new n.Color), e[i++] = a.r, e[i++] = a.g, e[i++] = a.b
                    }
                    return this
                },
                copyIndicesArray: function(t) {
                    for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
                        var o = t[n];
                        e[i++] = o.a, e[i++] = o.b, e[i++] = o.c
                    }
                    return this
                },
                copyVector2sArray: function(t) {
                    for (var e = this.array, i = 0, r = 0, o = t.length; o > r; r++) {
                        var a = t[r];
                        void 0 === a && (a = new n.Vector2), e[i++] = a.x, e[i++] = a.y
                    }
                    return this
                },
                copyVector3sArray: function(t) {
                    for (var e = this.array, i = 0, r = 0, o = t.length; o > r; r++) {
                        var a = t[r];
                        void 0 === a && (a = new n.Vector3), e[i++] = a.x, e[i++] = a.y, e[i++] = a.z
                    }
                    return this
                },
                copyVector4sArray: function(t) {
                    for (var e = this.array, i = 0, r = 0, o = t.length; o > r; r++) {
                        var a = t[r];
                        void 0 === a && (a = new n.Vector4), e[i++] = a.x, e[i++] = a.y, e[i++] = a.z, e[i++] = a.w
                    }
                    return this
                },
                set: function(t, e) {
                    return void 0 === e && (e = 0), this.array.set(t, e), this
                },
                getX: function(t) {
                    return this.array[t * this.itemSize]
                },
                setX: function(t, e) {
                    return this.array[t * this.itemSize] = e, this
                },
                getY: function(t) {
                    return this.array[t * this.itemSize + 1]
                },
                setY: function(t, e) {
                    return this.array[t * this.itemSize + 1] = e, this
                },
                getZ: function(t) {
                    return this.array[t * this.itemSize + 2]
                },
                setZ: function(t, e) {
                    return this.array[t * this.itemSize + 2] = e, this
                },
                getW: function(t) {
                    return this.array[t * this.itemSize + 3]
                },
                setW: function(t, e) {
                    return this.array[t * this.itemSize + 3] = e, this
                },
                setXY: function(t, e, i) {
                    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this
                },
                setXYZ: function(t, e, i, n) {
                    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this
                },
                setXYZW: function(t, e, i, n, r) {
                    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this.array[t + 3] = r, this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }, n.Int8Attribute = function(t, e) {
                return new n.BufferAttribute(new Int8Array(t), e)
            }, n.Uint8Attribute = function(t, e) {
                return new n.BufferAttribute(new Uint8Array(t), e)
            }, n.Uint8ClampedAttribute = function(t, e) {
                return new n.BufferAttribute(new Uint8ClampedArray(t), e)
            }, n.Int16Attribute = function(t, e) {
                return new n.BufferAttribute(new Int16Array(t), e)
            }, n.Uint16Attribute = function(t, e) {
                return new n.BufferAttribute(new Uint16Array(t), e)
            }, n.Int32Attribute = function(t, e) {
                return new n.BufferAttribute(new Int32Array(t), e)
            }, n.Uint32Attribute = function(t, e) {
                return new n.BufferAttribute(new Uint32Array(t), e)
            }, n.Float32Attribute = function(t, e) {
                return new n.BufferAttribute(new Float32Array(t), e)
            }, n.Float64Attribute = function(t, e) {
                return new n.BufferAttribute(new Float64Array(t), e)
            }, n.DynamicBufferAttribute = function(t, e) {
                return new n.BufferAttribute(t, e).setDynamic(!0)
            }, n.InstancedBufferAttribute = function(t, e, i) {
                n.BufferAttribute.call(this, t, e), this.meshPerAttribute = i || 1
            }, n.InstancedBufferAttribute.prototype = Object.create(n.BufferAttribute.prototype), n.InstancedBufferAttribute.prototype.constructor = n.InstancedBufferAttribute, n.InstancedBufferAttribute.prototype.copy = function(t) {
                return n.BufferAttribute.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
            }, n.InterleavedBuffer = function(t, e) {
                this.uuid = n.Math.generateUUID(), this.array = t, this.stride = e, this.dynamic = !1, this.updateRange = {
                    offset: 0,
                    count: -1
                }, this.version = 0
            }, n.InterleavedBuffer.prototype = {
                constructor: n.InterleavedBuffer,
                get length() {
                    return this.array.length
                },
                get count() {
                    return this.array.length / this.stride
                },
                set needsUpdate(t) {
                    t === !0 && this.version++
                },
                setDynamic: function(t) {
                    return this.dynamic = t, this
                },
                copy: function(t) {
                    return this.array = new t.array.constructor(t.array), this.stride = t.stride, this.dynamic = t.dynamic, this
                },
                copyAt: function(t, e, i) {
                    t *= this.stride, i *= e.stride;
                    for (var n = 0, r = this.stride; r > n; n++) this.array[t + n] = e.array[i + n];
                    return this
                },
                set: function(t, e) {
                    return void 0 === e && (e = 0), this.array.set(t, e), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }, n.InstancedInterleavedBuffer = function(t, e, i) {
                n.InterleavedBuffer.call(this, t, e), this.meshPerAttribute = i || 1
            }, n.InstancedInterleavedBuffer.prototype = Object.create(n.InterleavedBuffer.prototype), n.InstancedInterleavedBuffer.prototype.constructor = n.InstancedInterleavedBuffer, n.InstancedInterleavedBuffer.prototype.copy = function(t) {
                return n.InterleavedBuffer.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
            }, n.InterleavedBufferAttribute = function(t, e, i) {
                this.uuid = n.Math.generateUUID(), this.data = t, this.itemSize = e, this.offset = i
            }, n.InterleavedBufferAttribute.prototype = {
                constructor: n.InterleavedBufferAttribute,
                get length() {
                    return this.array.length
                },
                get count() {
                    return this.data.count
                },
                setX: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset] = e, this
                },
                setY: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 1] = e, this
                },
                setZ: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 2] = e, this
                },
                setW: function(t, e) {
                    return this.data.array[t * this.data.stride + this.offset + 3] = e, this
                },
                getX: function(t) {
                    return this.data.array[t * this.data.stride + this.offset]
                },
                getY: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 1]
                },
                getZ: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 2]
                },
                getW: function(t) {
                    return this.data.array[t * this.data.stride + this.offset + 3]
                },
                setXY: function(t, e, i) {
                    return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this
                },
                setXYZ: function(t, e, i, n) {
                    return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this
                },
                setXYZW: function(t, e, i, n, r) {
                    return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this.data.array[t + 3] = r, this
                }
            }, n.Geometry = function() {
                Object.defineProperty(this, "id", {
                    value: n.GeometryIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
                    []
                ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.elementsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
            }, Object.assign(n.Geometry.prototype, n.EventDispatcher.prototype, {
                applyMatrix: function(t) {
                    for (var e = (new n.Matrix3).getNormalMatrix(t), i = 0, r = this.vertices.length; r > i; i++) {
                        var o = this.vertices[i];
                        o.applyMatrix4(t)
                    }
                    for (var i = 0, r = this.faces.length; r > i; i++) {
                        var a = this.faces[i];
                        a.normal.applyMatrix3(e).normalize();
                        for (var s = 0, h = a.vertexNormals.length; h > s; s++) a.vertexNormals[s].applyMatrix3(e).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this
                },
                rotateX: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationX(e), this.applyMatrix(t), this
                    }
                }(),
                rotateY: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationY(e), this.applyMatrix(t), this
                    }
                }(),
                rotateZ: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationZ(e), this.applyMatrix(t), this
                    }
                }(),
                translate: function() {
                    var t;
                    return function(e, i, r) {
                        return void 0 === t && (t = new n.Matrix4), t.makeTranslation(e, i, r), this.applyMatrix(t), this
                    }
                }(),
                scale: function() {
                    var t;
                    return function(e, i, r) {
                        return void 0 === t && (t = new n.Matrix4), t.makeScale(e, i, r), this.applyMatrix(t), this
                    }
                }(),
                lookAt: function() {
                    var t;
                    return function(e) {
                        void 0 === t && (t = new n.Object3D), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix)
                    }
                }(),
                fromBufferGeometry: function(t) {
                    function e(t, e, r, o) {
                        var a = void 0 !== s ? [l[t].clone(), l[e].clone(), l[r].clone()] : [],
                            f = void 0 !== h ? [i.colors[t].clone(), i.colors[e].clone(), i.colors[r].clone()] : [],
                            m = new n.Face3(t, e, r, a, f, o);
                        i.faces.push(m), void 0 !== u && i.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[r].clone()]), void 0 !== c && i.faceVertexUvs[1].push([d[t].clone(), d[e].clone(), d[r].clone()])
                    }
                    var i = this,
                        r = null !== t.index ? t.index.array : void 0,
                        o = t.attributes,
                        a = o.position.array,
                        s = void 0 !== o.normal ? o.normal.array : void 0,
                        h = void 0 !== o.color ? o.color.array : void 0,
                        u = void 0 !== o.uv ? o.uv.array : void 0,
                        c = void 0 !== o.uv2 ? o.uv2.array : void 0;
                    void 0 !== c && (this.faceVertexUvs[1] = []);
                    for (var l = [], p = [], d = [], f = 0, m = 0; f < a.length; f += 3, m += 2) i.vertices.push(new n.Vector3(a[f], a[f + 1], a[f + 2])), void 0 !== s && l.push(new n.Vector3(s[f], s[f + 1], s[f + 2])), void 0 !== h && i.colors.push(new n.Color(h[f], h[f + 1], h[f + 2])), void 0 !== u && p.push(new n.Vector2(u[m], u[m + 1])), void 0 !== c && d.push(new n.Vector2(c[m], c[m + 1]));
                    if (void 0 !== r) {
                        var g = t.groups;
                        if (g.length > 0)
                            for (var f = 0; f < g.length; f++)
                                for (var v = g[f], y = v.start, _ = v.count, m = y, b = y + _; b > m; m += 3) e(r[m], r[m + 1], r[m + 2], v.materialIndex);
                        else
                            for (var f = 0; f < r.length; f += 3) e(r[f], r[f + 1], r[f + 2])
                    } else
                        for (var f = 0; f < a.length / 3; f += 3) e(f, f + 1, f + 2);
                    return this.computeFaceNormals(), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), this
                },
                center: function() {
                    this.computeBoundingBox();
                    var t = this.boundingBox.center().negate();
                    return this.translate(t.x, t.y, t.z), t
                },
                normalize: function() {
                    this.computeBoundingSphere();
                    var t = this.boundingSphere.center,
                        e = this.boundingSphere.radius,
                        i = 0 === e ? 1 : 1 / e,
                        r = new n.Matrix4;
                    return r.set(i, 0, 0, -i * t.x, 0, i, 0, -i * t.y, 0, 0, i, -i * t.z, 0, 0, 0, 1), this.applyMatrix(r), this
                },
                computeFaceNormals: function() {
                    for (var t = new n.Vector3, e = new n.Vector3, i = 0, r = this.faces.length; r > i; i++) {
                        var o = this.faces[i],
                            a = this.vertices[o.a],
                            s = this.vertices[o.b],
                            h = this.vertices[o.c];
                        t.subVectors(h, s), e.subVectors(a, s), t.cross(e), t.normalize(), o.normal.copy(t)
                    }
                },
                computeVertexNormals: function(t) {
                    void 0 === t && (t = !0);
                    var e, i, r, o, a, s;
                    for (s = new Array(this.vertices.length), e = 0, i = this.vertices.length; i > e; e++) s[e] = new n.Vector3;
                    if (t) {
                        var h, u, c, l = new n.Vector3,
                            p = new n.Vector3;
                        for (r = 0, o = this.faces.length; o > r; r++) a = this.faces[r], h = this.vertices[a.a], u = this.vertices[a.b], c = this.vertices[a.c], l.subVectors(c, u), p.subVectors(h, u), l.cross(p), s[a.a].add(l), s[a.b].add(l), s[a.c].add(l)
                    } else
                        for (r = 0, o = this.faces.length; o > r; r++) a = this.faces[r], s[a.a].add(a.normal), s[a.b].add(a.normal), s[a.c].add(a.normal);
                    for (e = 0, i = this.vertices.length; i > e; e++) s[e].normalize();
                    for (r = 0, o = this.faces.length; o > r; r++) {
                        a = this.faces[r];
                        var d = a.vertexNormals;
                        3 === d.length ? (d[0].copy(s[a.a]), d[1].copy(s[a.b]), d[2].copy(s[a.c])) : (d[0] = s[a.a].clone(), d[1] = s[a.b].clone(), d[2] = s[a.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function() {
                    var t, e, i, r, o;
                    for (i = 0, r = this.faces.length; r > i; i++)
                        for (o = this.faces[i], o.__originalFaceNormal ? o.__originalFaceNormal.copy(o.normal) : o.__originalFaceNormal = o.normal.clone(), o.__originalVertexNormals || (o.__originalVertexNormals = []), t = 0, e = o.vertexNormals.length; e > t; t++) o.__originalVertexNormals[t] ? o.__originalVertexNormals[t].copy(o.vertexNormals[t]) : o.__originalVertexNormals[t] = o.vertexNormals[t].clone();
                    var a = new n.Geometry;
                    for (a.faces = this.faces, t = 0, e = this.morphTargets.length; e > t; t++) {
                        if (!this.morphNormals[t]) {
                            this.morphNormals[t] = {}, this.morphNormals[t].faceNormals = [], this.morphNormals[t].vertexNormals = [];
                            var s, h, u = this.morphNormals[t].faceNormals,
                                c = this.morphNormals[t].vertexNormals;
                            for (i = 0, r = this.faces.length; r > i; i++) s = new n.Vector3, h = {
                                a: new n.Vector3,
                                b: new n.Vector3,
                                c: new n.Vector3
                            }, u.push(s), c.push(h)
                        }
                        var l = this.morphNormals[t];
                        a.vertices = this.morphTargets[t].vertices, a.computeFaceNormals(), a.computeVertexNormals();
                        var s, h;
                        for (i = 0, r = this.faces.length; r > i; i++) o = this.faces[i], s = l.faceNormals[i], h = l.vertexNormals[i], s.copy(o.normal), h.a.copy(o.vertexNormals[0]), h.b.copy(o.vertexNormals[1]), h.c.copy(o.vertexNormals[2])
                    }
                    for (i = 0, r = this.faces.length; r > i; i++) o = this.faces[i], o.normal = o.__originalFaceNormal, o.vertexNormals = o.__originalVertexNormals;
                },
                computeTangents: function() {},
                computeLineDistances: function() {
                    for (var t = 0, e = this.vertices, i = 0, n = e.length; n > i; i++) i > 0 && (t += e[i].distanceTo(e[i - 1])), this.lineDistances[i] = t
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new n.Box3), this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new n.Sphere), this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function(t, e, i) {
                    if (t instanceof n.Geometry != !1) {
                        var r, o = this.vertices.length,
                            a = this.vertices,
                            s = t.vertices,
                            h = this.faces,
                            u = t.faces,
                            c = this.faceVertexUvs[0],
                            l = t.faceVertexUvs[0];
                        void 0 === i && (i = 0), void 0 !== e && (r = (new n.Matrix3).getNormalMatrix(e));
                        for (var p = 0, d = s.length; d > p; p++) {
                            var f = s[p],
                                m = f.clone();
                            void 0 !== e && m.applyMatrix4(e), a.push(m)
                        }
                        for (p = 0, d = u.length; d > p; p++) {
                            var g, v, y, _ = u[p],
                                b = _.vertexNormals,
                                x = _.vertexColors;
                            g = new n.Face3(_.a + o, _.b + o, _.c + o), g.normal.copy(_.normal), void 0 !== r && g.normal.applyMatrix3(r).normalize();
                            for (var w = 0, M = b.length; M > w; w++) v = b[w].clone(), void 0 !== r && v.applyMatrix3(r).normalize(), g.vertexNormals.push(v);
                            g.color.copy(_.color);
                            for (var w = 0, M = x.length; M > w; w++) y = x[w], g.vertexColors.push(y.clone());
                            g.materialIndex = _.materialIndex + i, h.push(g)
                        }
                        for (p = 0, d = l.length; d > p; p++) {
                            var S = l[p],
                                T = [];
                            if (void 0 !== S) {
                                for (var w = 0, M = S.length; M > w; w++) T.push(S[w].clone());
                                c.push(T)
                            }
                        }
                    }
                },
                mergeMesh: function(t) {
                    t instanceof n.Mesh != !1 && (t.matrixAutoUpdate && t.updateMatrix(), this.merge(t.geometry, t.matrix))
                },
                mergeVertices: function() {
                    var t, e, i, n, r, o, a, s, h = {},
                        u = [],
                        c = [],
                        l = 4,
                        p = Math.pow(10, l);
                    for (i = 0, n = this.vertices.length; n > i; i++) t = this.vertices[i], e = Math.round(t.x * p) + "_" + Math.round(t.y * p) + "_" + Math.round(t.z * p), void 0 === h[e] ? (h[e] = i, u.push(this.vertices[i]), c[i] = u.length - 1) : c[i] = c[h[e]];
                    var d = [];
                    for (i = 0, n = this.faces.length; n > i; i++) {
                        r = this.faces[i], r.a = c[r.a], r.b = c[r.b], r.c = c[r.c], o = [r.a, r.b, r.c];
                        for (var f = -1, m = 0; 3 > m; m++)
                            if (o[m] === o[(m + 1) % 3]) {
                                f = m, d.push(i);
                                break
                            }
                    }
                    for (i = d.length - 1; i >= 0; i--) {
                        var g = d[i];
                        for (this.faces.splice(g, 1), a = 0, s = this.faceVertexUvs.length; s > a; a++) this.faceVertexUvs[a].splice(g, 1)
                    }
                    var v = this.vertices.length - u.length;
                    return this.vertices = u, v
                },
                sortFacesByMaterialIndex: function() {
                    function t(t, e) {
                        return t.materialIndex - e.materialIndex
                    }
                    for (var e = this.faces, i = e.length, n = 0; i > n; n++) e[n]._id = n;
                    e.sort(t);
                    var r, o, a = this.faceVertexUvs[0],
                        s = this.faceVertexUvs[1];
                    a && a.length === i && (r = []), s && s.length === i && (o = []);
                    for (var n = 0; i > n; n++) {
                        var h = e[n]._id;
                        r && r.push(a[h]), o && o.push(s[h])
                    }
                    r && (this.faceVertexUvs[0] = r), o && (this.faceVertexUvs[1] = o)
                },
                toJSON: function() {
                    function t(t, e, i) {
                        return i ? t | 1 << e : t & ~(1 << e)
                    }

                    function e(t) {
                        var e = t.x.toString() + t.y.toString() + t.z.toString();
                        return void 0 !== p[e] ? p[e] : (p[e] = l.length / 3, l.push(t.x, t.y, t.z), p[e])
                    }

                    function i(t) {
                        var e = t.r.toString() + t.g.toString() + t.b.toString();
                        return void 0 !== f[e] ? f[e] : (f[e] = d.length, d.push(t.getHex()), f[e])
                    }

                    function n(t) {
                        var e = t.x.toString() + t.y.toString();
                        return void 0 !== g[e] ? g[e] : (g[e] = m.length / 2, m.push(t.x, t.y), g[e])
                    }
                    var r = {
                        metadata: {
                            version: 4.4,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), void 0 !== this.parameters) {
                        var o = this.parameters;
                        for (var a in o) void 0 !== o[a] && (r[a] = o[a]);
                        return r
                    }
                    for (var s = [], h = 0; h < this.vertices.length; h++) {
                        var u = this.vertices[h];
                        s.push(u.x, u.y, u.z)
                    }
                    for (var c = [], l = [], p = {}, d = [], f = {}, m = [], g = {}, h = 0; h < this.faces.length; h++) {
                        var v = this.faces[h],
                            y = !0,
                            _ = !1,
                            b = void 0 !== this.faceVertexUvs[0][h],
                            x = v.normal.length() > 0,
                            w = v.vertexNormals.length > 0,
                            M = 1 !== v.color.r || 1 !== v.color.g || 1 !== v.color.b,
                            S = v.vertexColors.length > 0,
                            T = 0;
                        if (T = t(T, 0, 0), T = t(T, 1, y), T = t(T, 2, _), T = t(T, 3, b), T = t(T, 4, x), T = t(T, 5, w), T = t(T, 6, M), T = t(T, 7, S), c.push(T), c.push(v.a, v.b, v.c), c.push(v.materialIndex), b) {
                            var A = this.faceVertexUvs[0][h];
                            c.push(n(A[0]), n(A[1]), n(A[2]))
                        }
                        if (x && c.push(e(v.normal)), w) {
                            var E = v.vertexNormals;
                            c.push(e(E[0]), e(E[1]), e(E[2]))
                        }
                        if (M && c.push(i(v.color)), S) {
                            var C = v.vertexColors;
                            c.push(i(C[0]), i(C[1]), i(C[2]))
                        }
                    }
                    return r.data = {}, r.data.vertices = s, r.data.normals = l, d.length > 0 && (r.data.colors = d), m.length > 0 && (r.data.uvs = [m]), r.data.faces = c, r
                },
                clone: function() {
                    return (new n.Geometry).copy(this)
                },
                copy: function(t) {
                    this.vertices = [], this.faces = [], this.faceVertexUvs = [
                        []
                    ];
                    for (var e = t.vertices, i = 0, n = e.length; n > i; i++) this.vertices.push(e[i].clone());
                    for (var r = t.faces, i = 0, n = r.length; n > i; i++) this.faces.push(r[i].clone());
                    for (var i = 0, n = t.faceVertexUvs.length; n > i; i++) {
                        var o = t.faceVertexUvs[i];
                        void 0 === this.faceVertexUvs[i] && (this.faceVertexUvs[i] = []);
                        for (var a = 0, s = o.length; s > a; a++) {
                            for (var h = o[a], u = [], c = 0, l = h.length; l > c; c++) {
                                var p = h[c];
                                u.push(p.clone())
                            }
                            this.faceVertexUvs[i].push(u)
                        }
                    }
                    return this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), n.GeometryIdCount = 0, n.DirectGeometry = function() {
                Object.defineProperty(this, "id", {
                    value: n.GeometryIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.type = "DirectGeometry", this.indices = [], this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1
            }, Object.assign(n.DirectGeometry.prototype, n.EventDispatcher.prototype, {
                computeBoundingBox: n.Geometry.prototype.computeBoundingBox,
                computeBoundingSphere: n.Geometry.prototype.computeBoundingSphere,
                computeFaceNormals: function() {},
                computeVertexNormals: function() {},
                computeGroups: function(t) {
                    for (var e, i, n = [], r = t.faces, o = 0; o < r.length; o++) {
                        var a = r[o];
                        a.materialIndex !== i && (i = a.materialIndex, void 0 !== e && (e.count = 3 * o - e.start, n.push(e)), e = {
                            start: 3 * o,
                            materialIndex: i
                        })
                    }
                    void 0 !== e && (e.count = 3 * o - e.start, n.push(e)), this.groups = n
                },
                fromGeometry: function(t) {
                    var e, i = t.faces,
                        r = t.vertices,
                        o = t.faceVertexUvs,
                        a = o[0] && o[0].length > 0,
                        s = o[1] && o[1].length > 0,
                        h = t.morphTargets,
                        u = h.length;
                    if (u > 0) {
                        e = [];
                        for (var c = 0; u > c; c++) e[c] = [];
                        this.morphTargets.position = e
                    }
                    var l, p = t.morphNormals,
                        d = p.length;
                    if (d > 0) {
                        l = [];
                        for (var c = 0; d > c; c++) l[c] = [];
                        this.morphTargets.normal = l
                    }
                    for (var f = t.skinIndices, m = t.skinWeights, g = f.length === r.length, v = m.length === r.length, c = 0; c < i.length; c++) {
                        var y = i[c];
                        this.vertices.push(r[y.a], r[y.b], r[y.c]);
                        var _ = y.vertexNormals;
                        if (3 === _.length) this.normals.push(_[0], _[1], _[2]);
                        else {
                            var b = y.normal;
                            this.normals.push(b, b, b)
                        }
                        var x = y.vertexColors;
                        if (3 === x.length) this.colors.push(x[0], x[1], x[2]);
                        else {
                            var w = y.color;
                            this.colors.push(w, w, w)
                        }
                        if (a === !0) {
                            var M = o[0][c];
                            void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : this.uvs.push(new n.Vector2, new n.Vector2, new n.Vector2)
                        }
                        if (s === !0) {
                            var M = o[1][c];
                            void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : this.uvs2.push(new n.Vector2, new n.Vector2, new n.Vector2)
                        }
                        for (var S = 0; u > S; S++) {
                            var T = h[S].vertices;
                            e[S].push(T[y.a], T[y.b], T[y.c])
                        }
                        for (var S = 0; d > S; S++) {
                            var A = p[S].vertexNormals[c];
                            l[S].push(A.a, A.b, A.c)
                        }
                        g && this.skinIndices.push(f[y.a], f[y.b], f[y.c]), v && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                    }
                    return this.computeGroups(t), this.verticesNeedUpdate = t.verticesNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), n.BufferGeometry = function() {
                Object.defineProperty(this, "id", {
                    value: n.GeometryIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
                    start: 0,
                    count: 1 / 0
                }
            }, Object.assign(n.BufferGeometry.prototype, n.EventDispatcher.prototype, {
                getIndex: function() {
                    return this.index
                },
                setIndex: function(t) {
                    this.index = t
                },
                addAttribute: function(t, e) {
                    return e instanceof n.BufferAttribute == !1 && e instanceof n.InterleavedBufferAttribute == !1 ? void this.addAttribute(t, new n.BufferAttribute(arguments[1], arguments[2])) : "index" === t ? void this.setIndex(e) : (this.attributes[t] = e, this)
                },
                getAttribute: function(t) {
                    return this.attributes[t]
                },
                removeAttribute: function(t) {
                    return delete this.attributes[t], this
                },
                addGroup: function(t, e, i) {
                    this.groups.push({
                        start: t,
                        count: e,
                        materialIndex: void 0 !== i ? i : 0
                    })
                },
                clearGroups: function() {
                    this.groups = []
                },
                setDrawRange: function(t, e) {
                    this.drawRange.start = t, this.drawRange.count = e
                },
                applyMatrix: function(t) {
                    var e = this.attributes.position;
                    void 0 !== e && (t.applyToVector3Array(e.array), e.needsUpdate = !0);
                    var i = this.attributes.normal;
                    if (void 0 !== i) {
                        var r = (new n.Matrix3).getNormalMatrix(t);
                        r.applyToVector3Array(i.array), i.needsUpdate = !0
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
                },
                rotateX: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationX(e), this.applyMatrix(t), this
                    }
                }(),
                rotateY: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationY(e), this.applyMatrix(t), this
                    }
                }(),
                rotateZ: function() {
                    var t;
                    return function(e) {
                        return void 0 === t && (t = new n.Matrix4), t.makeRotationZ(e), this.applyMatrix(t), this
                    }
                }(),
                translate: function() {
                    var t;
                    return function(e, i, r) {
                        return void 0 === t && (t = new n.Matrix4), t.makeTranslation(e, i, r), this.applyMatrix(t), this
                    }
                }(),
                scale: function() {
                    var t;
                    return function(e, i, r) {
                        return void 0 === t && (t = new n.Matrix4), t.makeScale(e, i, r), this.applyMatrix(t), this
                    }
                }(),
                lookAt: function() {
                    var t;
                    return function(e) {
                        void 0 === t && (t = new n.Object3D), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix)
                    }
                }(),
                center: function() {
                    this.computeBoundingBox();
                    var t = this.boundingBox.center().negate();
                    return this.translate(t.x, t.y, t.z), t
                },
                setFromObject: function(t) {
                    var e = t.geometry;
                    if (t instanceof n.Points || t instanceof n.Line) {
                        var i = new n.Float32Attribute(3 * e.vertices.length, 3),
                            r = new n.Float32Attribute(3 * e.colors.length, 3);
                        if (this.addAttribute("position", i.copyVector3sArray(e.vertices)), this.addAttribute("color", r.copyColorsArray(e.colors)), e.lineDistances && e.lineDistances.length === e.vertices.length) {
                            var o = new n.Float32Attribute(e.lineDistances.length, 1);
                            this.addAttribute("lineDistance", o.copyArray(e.lineDistances))
                        }
                        null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                    } else t instanceof n.Mesh && e instanceof n.Geometry && this.fromGeometry(e);
                    return this
                },
                updateFromObject: function(t) {
                    var e = t.geometry;
                    if (t instanceof n.Mesh) {
                        var i = e.__directGeometry;
                        if (void 0 === i) return this.fromGeometry(e);
                        i.verticesNeedUpdate = e.verticesNeedUpdate, i.normalsNeedUpdate = e.normalsNeedUpdate, i.colorsNeedUpdate = e.colorsNeedUpdate, i.uvsNeedUpdate = e.uvsNeedUpdate, i.groupsNeedUpdate = e.groupsNeedUpdate, e.verticesNeedUpdate = !1, e.normalsNeedUpdate = !1, e.colorsNeedUpdate = !1, e.uvsNeedUpdate = !1, e.groupsNeedUpdate = !1, e = i
                    }
                    if (e.verticesNeedUpdate === !0) {
                        var r = this.attributes.position;
                        void 0 !== r && (r.copyVector3sArray(e.vertices), r.needsUpdate = !0), e.verticesNeedUpdate = !1
                    }
                    if (e.normalsNeedUpdate === !0) {
                        var r = this.attributes.normal;
                        void 0 !== r && (r.copyVector3sArray(e.normals), r.needsUpdate = !0), e.normalsNeedUpdate = !1
                    }
                    if (e.colorsNeedUpdate === !0) {
                        var r = this.attributes.color;
                        void 0 !== r && (r.copyColorsArray(e.colors), r.needsUpdate = !0), e.colorsNeedUpdate = !1
                    }
                    if (e.uvsNeedUpdate) {
                        var r = this.attributes.uv;
                        void 0 !== r && (r.copyVector2sArray(e.uvs), r.needsUpdate = !0), e.uvsNeedUpdate = !1
                    }
                    if (e.lineDistancesNeedUpdate) {
                        var r = this.attributes.lineDistance;
                        void 0 !== r && (r.copyArray(e.lineDistances), r.needsUpdate = !0), e.lineDistancesNeedUpdate = !1
                    }
                    return e.groupsNeedUpdate && (e.computeGroups(t.geometry), this.groups = e.groups, e.groupsNeedUpdate = !1), this
                },
                fromGeometry: function(t) {
                    return t.__directGeometry = (new n.DirectGeometry).fromGeometry(t), this.fromDirectGeometry(t.__directGeometry)
                },
                fromDirectGeometry: function(t) {
                    var e = new Float32Array(3 * t.vertices.length);
                    if (this.addAttribute("position", new n.BufferAttribute(e, 3).copyVector3sArray(t.vertices)), t.normals.length > 0) {
                        var i = new Float32Array(3 * t.normals.length);
                        this.addAttribute("normal", new n.BufferAttribute(i, 3).copyVector3sArray(t.normals))
                    }
                    if (t.colors.length > 0) {
                        var r = new Float32Array(3 * t.colors.length);
                        this.addAttribute("color", new n.BufferAttribute(r, 3).copyColorsArray(t.colors))
                    }
                    if (t.uvs.length > 0) {
                        var o = new Float32Array(2 * t.uvs.length);
                        this.addAttribute("uv", new n.BufferAttribute(o, 2).copyVector2sArray(t.uvs))
                    }
                    if (t.uvs2.length > 0) {
                        var a = new Float32Array(2 * t.uvs2.length);
                        this.addAttribute("uv2", new n.BufferAttribute(a, 2).copyVector2sArray(t.uvs2))
                    }
                    if (t.indices.length > 0) {
                        var s = t.vertices.length > 65535 ? Uint32Array : Uint16Array,
                            h = new s(3 * t.indices.length);
                        this.setIndex(new n.BufferAttribute(h, 1).copyIndicesArray(t.indices))
                    }
                    this.groups = t.groups;
                    for (var u in t.morphTargets) {
                        for (var c = [], l = t.morphTargets[u], p = 0, d = l.length; d > p; p++) {
                            var f = l[p],
                                m = new n.Float32Attribute(3 * f.length, 3);
                            c.push(m.copyVector3sArray(f))
                        }
                        this.morphAttributes[u] = c
                    }
                    if (t.skinIndices.length > 0) {
                        var g = new n.Float32Attribute(4 * t.skinIndices.length, 4);
                        this.addAttribute("skinIndex", g.copyVector4sArray(t.skinIndices))
                    }
                    if (t.skinWeights.length > 0) {
                        var v = new n.Float32Attribute(4 * t.skinWeights.length, 4);
                        this.addAttribute("skinWeight", v.copyVector4sArray(t.skinWeights))
                    }
                    return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), this
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new n.Box3);
                    var t = this.attributes.position.array;
                    void 0 !== t ? this.boundingBox.setFromArray(t) : this.boundingBox.makeEmpty(), isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)
                },
                computeBoundingSphere: function() {
                    var t = new n.Box3,
                        e = new n.Vector3;
                    return function() {
                        null === this.boundingSphere && (this.boundingSphere = new n.Sphere);
                        var i = this.attributes.position;
                        if (i) {
                            var r = i.array,
                                o = this.boundingSphere.center;
                            t.setFromArray(r), t.center(o);
                            for (var a = 0, s = 0, h = r.length; h > s; s += 3) e.fromArray(r, s), a = Math.max(a, o.distanceToSquared(e));
                            this.boundingSphere.radius = Math.sqrt(a), isNaN(this.boundingSphere.radius)
                        }
                    }
                }(),
                computeFaceNormals: function() {},
                computeVertexNormals: function() {
                    var t = this.index,
                        e = this.attributes,
                        i = this.groups;
                    if (e.position) {
                        var r = e.position.array;
                        if (void 0 === e.normal) this.addAttribute("normal", new n.BufferAttribute(new Float32Array(r.length), 3));
                        else
                            for (var o = e.normal.array, a = 0, s = o.length; s > a; a++) o[a] = 0;
                        var h, u, c, l = e.normal.array,
                            p = new n.Vector3,
                            d = new n.Vector3,
                            f = new n.Vector3,
                            m = new n.Vector3,
                            g = new n.Vector3;
                        if (t) {
                            var v = t.array;
                            0 === i.length && this.addGroup(0, v.length);
                            for (var y = 0, _ = i.length; _ > y; ++y)
                                for (var b = i[y], x = b.start, w = b.count, a = x, s = x + w; s > a; a += 3) h = 3 * v[a + 0], u = 3 * v[a + 1], c = 3 * v[a + 2], p.fromArray(r, h), d.fromArray(r, u), f.fromArray(r, c), m.subVectors(f, d), g.subVectors(p, d), m.cross(g), l[h] += m.x, l[h + 1] += m.y, l[h + 2] += m.z, l[u] += m.x, l[u + 1] += m.y, l[u + 2] += m.z, l[c] += m.x, l[c + 1] += m.y, l[c + 2] += m.z
                        } else
                            for (var a = 0, s = r.length; s > a; a += 9) p.fromArray(r, a), d.fromArray(r, a + 3), f.fromArray(r, a + 6), m.subVectors(f, d), g.subVectors(p, d), m.cross(g), l[a] = m.x, l[a + 1] = m.y, l[a + 2] = m.z, l[a + 3] = m.x, l[a + 4] = m.y, l[a + 5] = m.z, l[a + 6] = m.x, l[a + 7] = m.y, l[a + 8] = m.z;
                        this.normalizeNormals(), e.normal.needsUpdate = !0
                    }
                },
                merge: function(t, e) {
                    if (t instanceof n.BufferGeometry != !1) {
                        void 0 === e && (e = 0);
                        var i = this.attributes;
                        for (var r in i)
                            if (void 0 !== t.attributes[r])
                                for (var o = i[r], a = o.array, s = t.attributes[r], h = s.array, u = s.itemSize, c = 0, l = u * e; c < h.length; c++, l++) a[l] = h[c];
                        return this
                    }
                },
                normalizeNormals: function() {
                    for (var t, e, i, n, r = this.attributes.normal.array, o = 0, a = r.length; a > o; o += 3) t = r[o], e = r[o + 1], i = r[o + 2], n = 1 / Math.sqrt(t * t + e * e + i * i), r[o] *= n, r[o + 1] *= n, r[o + 2] *= n
                },
                toNonIndexed: function() {
                    if (null === this.index) return this;
                    var t = new n.BufferGeometry,
                        e = this.index.array,
                        i = this.attributes;
                    for (var r in i) {
                        for (var o = i[r], a = o.array, s = o.itemSize, h = new a.constructor(e.length * s), u = 0, c = 0, l = 0, p = e.length; p > l; l++) {
                            u = e[l] * s;
                            for (var d = 0; s > d; d++) h[c++] = a[u++]
                        }
                        t.addAttribute(r, new n.BufferAttribute(h, s))
                    }
                    return t
                },
                toJSON: function() {
                    var t = {
                        metadata: {
                            version: 4.4,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (t.uuid = this.uuid, t.type = this.type, "" !== this.name && (t.name = this.name), void 0 !== this.parameters) {
                        var e = this.parameters;
                        for (var i in e) void 0 !== e[i] && (t[i] = e[i]);
                        return t
                    }
                    t.data = {
                        attributes: {}
                    };
                    var n = this.index;
                    if (null !== n) {
                        var r = Array.prototype.slice.call(n.array);
                        t.data.index = {
                            type: n.array.constructor.name,
                            array: r
                        }
                    }
                    var o = this.attributes;
                    for (var i in o) {
                        var a = o[i],
                            r = Array.prototype.slice.call(a.array);
                        t.data.attributes[i] = {
                            itemSize: a.itemSize,
                            type: a.array.constructor.name,
                            array: r,
                            normalized: a.normalized
                        }
                    }
                    var s = this.groups;
                    s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                    var h = this.boundingSphere;
                    return null !== h && (t.data.boundingSphere = {
                        center: h.center.toArray(),
                        radius: h.radius
                    }), t
                },
                clone: function() {
                    return (new n.BufferGeometry).copy(this)
                },
                copy: function(t) {
                    var e = t.index;
                    null !== e && this.setIndex(e.clone());
                    var i = t.attributes;
                    for (var n in i) {
                        var r = i[n];
                        this.addAttribute(n, r.clone())
                    }
                    for (var o = t.groups, a = 0, s = o.length; s > a; a++) {
                        var h = o[a];
                        this.addGroup(h.start, h.count, h.materialIndex)
                    }
                    return this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), n.BufferGeometry.MaxIndex = 65535, n.InstancedBufferGeometry = function() {
                n.BufferGeometry.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0
            }, n.InstancedBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.InstancedBufferGeometry.prototype.constructor = n.InstancedBufferGeometry, n.InstancedBufferGeometry.prototype.addGroup = function(t, e, i) {
                this.groups.push({
                    start: t,
                    count: e,
                    instances: i
                })
            }, n.InstancedBufferGeometry.prototype.copy = function(t) {
                var e = t.index;
                null !== e && this.setIndex(e.clone());
                var i = t.attributes;
                for (var n in i) {
                    var r = i[n];
                    this.addAttribute(n, r.clone())
                }
                for (var o = t.groups, a = 0, s = o.length; s > a; a++) {
                    var h = o[a];
                    this.addGroup(h.start, h.count, h.instances)
                }
                return this
            }, n.Uniform = function(t) {
                "string" == typeof t && (t = arguments[1]), this.value = t, this.dynamic = !1
            }, n.Uniform.prototype = {
                constructor: n.Uniform,
                onUpdate: function(t) {
                    return this.dynamic = !0, this.onUpdateCallback = t, this
                }
            }, n.AnimationAction = function() {
                throw new Error("THREE.AnimationAction: Use mixer.clipAction for construction.")
            }, n.AnimationAction._new = function(t, e, i) {
                this._mixer = t, this._clip = e, this._localRoot = i || null;
                for (var r = e.tracks, o = r.length, a = new Array(o), s = {
                        endingStart: n.ZeroCurvatureEnding,
                        endingEnd: n.ZeroCurvatureEnding
                    }, h = 0; h !== o; ++h) {
                    var u = r[h].createInterpolant(null);
                    a[h] = u, u.settings = s
                }
                this._interpolantSettings = s, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = n.LoopRepeat, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
            }, n.AnimationAction._new.prototype = {
                constructor: n.AnimationAction._new,
                play: function() {
                    return this._mixer._activateAction(this), this
                },
                stop: function() {
                    return this._mixer._deactivateAction(this), this.reset()
                },
                reset: function() {
                    return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
                },
                isRunning: function() {
                    this._startTime;
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                },
                isScheduled: function() {
                    return this._mixer._isActiveAction(this)
                },
                startAt: function(t) {
                    return this._startTime = t, this
                },
                setLoop: function(t, e) {
                    return this.loop = t, this.repetitions = e, this
                },
                setEffectiveWeight: function(t) {
                    return this.weight = t, this._effectiveWeight = this.enabled ? t : 0, this.stopFading()
                },
                getEffectiveWeight: function() {
                    return this._effectiveWeight
                },
                fadeIn: function(t) {
                    return this._scheduleFading(t, 0, 1)
                },
                fadeOut: function(t) {
                    return this._scheduleFading(t, 1, 0)
                },
                crossFadeFrom: function(t, e, i) {
                    this._mixer;
                    if (t.fadeOut(e), this.fadeIn(e), i) {
                        var n = this._clip.duration,
                            r = t._clip.duration,
                            o = r / n,
                            a = n / r;
                        t.warp(1, o, e), this.warp(a, 1, e)
                    }
                    return this
                },
                crossFadeTo: function(t, e, i) {
                    return t.crossFadeFrom(this, e, i)
                },
                stopFading: function() {
                    var t = this._weightInterpolant;
                    return null !== t && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
                },
                setEffectiveTimeScale: function(t) {
                    return this.timeScale = t, this._effectiveTimeScale = this.paused ? 0 : t, this.stopWarping()
                },
                getEffectiveTimeScale: function() {
                    return this._effectiveTimeScale
                },
                setDuration: function(t) {
                    return this.timeScale = this._clip.duration / t, this.stopWarping()
                },
                syncWith: function(t) {
                    return this.time = t.time, this.timeScale = t.timeScale, this.stopWarping()
                },
                halt: function(t) {
                    return this.warp(this._effectiveTimeScale, 0, t)
                },
                warp: function(t, e, i) {
                    var n = this._mixer,
                        r = n.time,
                        o = this._timeScaleInterpolant,
                        a = this.timeScale;
                    null === o && (o = n._lendControlInterpolant(), this._timeScaleInterpolant = o);
                    var s = o.parameterPositions,
                        h = o.sampleValues;
                    return s[0] = r, s[1] = r + i, h[0] = t / a, h[1] = e / a, this
                },
                stopWarping: function() {
                    var t = this._timeScaleInterpolant;
                    return null !== t && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
                },
                getMixer: function() {
                    return this._mixer
                },
                getClip: function() {
                    return this._clip
                },
                getRoot: function() {
                    return this._localRoot || this._mixer._root
                },
                _update: function(t, e, i, n) {
                    var r = this._startTime;
                    if (null !== r) {
                        var o = (t - r) * i;
                        if (0 > o || 0 === i) return;
                        this._startTime = null, e = i * o
                    }
                    e *= this._updateTimeScale(t);
                    var a = this._updateTime(e),
                        s = this._updateWeight(t);
                    if (s > 0)
                        for (var h = this._interpolants, u = this._propertyBindings, c = 0, l = h.length; c !== l; ++c) h[c].evaluate(a), u[c].accumulate(n, s)
                },
                _updateWeight: function(t) {
                    var e = 0;
                    if (this.enabled) {
                        e = this.weight;
                        var i = this._weightInterpolant;
                        if (null !== i) {
                            var n = i.evaluate(t)[0];
                            e *= n, t > i.parameterPositions[1] && (this.stopFading(), 0 === n && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = e, e
                },
                _updateTimeScale: function(t) {
                    var e = 0;
                    if (!this.paused) {
                        e = this.timeScale;
                        var i = this._timeScaleInterpolant;
                        if (null !== i) {
                            var n = i.evaluate(t)[0];
                            e *= n, t > i.parameterPositions[1] && (this.stopWarping(), 0 === e ? this.paused = !0 : this.timeScale = e)
                        }
                    }
                    return this._effectiveTimeScale = e, e
                },
                _updateTime: function(t) {
                    var e = this.time + t;
                    if (0 === t) return e;
                    var i = this._clip.duration,
                        r = this.loop,
                        o = this._loopCount;
                    if (r === n.LoopOnce) {
                        -1 === o && (this.loopCount = 0, this._setEndings(!0, !0, !1));
                        t: {
                            if (e >= i) e = i;
                            else {
                                if (!(0 > e)) break t;
                                e = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: 0 > t ? -1 : 1
                            })
                        }
                    } else {
                        var a = r === n.LoopPingPong;
                        if (-1 === o && (t >= 0 ? (o = 0, this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)), e >= i || 0 > e) {
                            var s = Math.floor(e / i);
                            e -= i * s, o += Math.abs(s);
                            var h = this.repetitions - o;
                            if (0 > h) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, e = t > 0 ? i : 0, this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: t > 0 ? 1 : -1
                            });
                            else {
                                if (0 === h) {
                                    var u = 0 > t;
                                    this._setEndings(u, !u, a)
                                } else this._setEndings(!1, !1, a);
                                this._loopCount = o, this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: s
                                })
                            }
                        }
                        if (a && 1 === (1 & o)) return this.time = e, i - e
                    }
                    return this.time = e, e
                },
                _setEndings: function(t, e, i) {
                    var r = this._interpolantSettings;
                    i ? (r.endingStart = n.ZeroSlopeEnding, r.endingEnd = n.ZeroSlopeEnding) : (t ? r.endingStart = this.zeroSlopeAtStart ? n.ZeroSlopeEnding : n.ZeroCurvatureEnding : r.endingStart = n.WrapAroundEnding, e ? r.endingEnd = this.zeroSlopeAtEnd ? n.ZeroSlopeEnding : n.ZeroCurvatureEnding : r.endingEnd = n.WrapAroundEnding)
                },
                _scheduleFading: function(t, e, i) {
                    var n = this._mixer,
                        r = n.time,
                        o = this._weightInterpolant;
                    null === o && (o = n._lendControlInterpolant(), this._weightInterpolant = o);
                    var a = o.parameterPositions,
                        s = o.sampleValues;
                    return a[0] = r, s[0] = e, a[1] = r + t, s[1] = i, this
                }
            }, n.AnimationClip = function(t, e, i) {
                this.name = t, this.tracks = i, this.duration = void 0 !== e ? e : -1, this.uuid = n.Math.generateUUID(), this.duration < 0 && this.resetDuration(), this.trim(), this.optimize()
            }, n.AnimationClip.prototype = {
                constructor: n.AnimationClip,
                resetDuration: function() {
                    for (var t = this.tracks, e = 0, i = 0, n = t.length; i !== n; ++i) {
                        var r = this.tracks[i];
                        e = Math.max(e, r.times[r.times.length - 1])
                    }
                    this.duration = e
                },
                trim: function() {
                    for (var t = 0; t < this.tracks.length; t++) this.tracks[t].trim(0, this.duration);
                    return this
                },
                optimize: function() {
                    for (var t = 0; t < this.tracks.length; t++) this.tracks[t].optimize();
                    return this
                }
            }, Object.assign(n.AnimationClip, {
                parse: function(t) {
                    for (var e = [], i = t.tracks, r = 1 / (t.fps || 1), o = 0, a = i.length; o !== a; ++o) e.push(n.KeyframeTrack.parse(i[o]).scale(r));
                    return new n.AnimationClip(t.name, t.duration, e)
                },
                toJSON: function(t) {
                    for (var e = [], i = t.tracks, r = {
                            name: t.name,
                            duration: t.duration,
                            tracks: e
                        }, o = 0, a = i.length; o !== a; ++o) e.push(n.KeyframeTrack.toJSON(i[o]));
                    return r
                },
                CreateFromMorphTargetSequence: function(t, e, i, r) {
                    for (var o = e.length, a = [], s = 0; o > s; s++) {
                        var h = [],
                            u = [];
                        h.push((s + o - 1) % o, s, (s + 1) % o), u.push(0, 1, 0);
                        var c = n.AnimationUtils.getKeyframeOrder(h);
                        h = n.AnimationUtils.sortedArray(h, 1, c), u = n.AnimationUtils.sortedArray(u, 1, c), r || 0 !== h[0] || (h.push(o), u.push(u[0])), a.push(new n.NumberKeyframeTrack(".morphTargetInfluences[" + e[s].name + "]", h, u).scale(1 / i))
                    }
                    return new n.AnimationClip(t, -1, a)
                },
                findByName: function(t, e) {
                    var i = t;
                    if (!Array.isArray(t)) {
                        var n = t;
                        i = n.geometry && n.geometry.animations || n.animations
                    }
                    for (var r = 0; r < i.length; r++)
                        if (i[r].name === e) return i[r];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function(t, e, i) {
                    for (var r = {}, o = /^([\w-]*?)([\d]+)$/, a = 0, s = t.length; s > a; a++) {
                        var h = t[a],
                            u = h.name.match(o);
                        if (u && u.length > 1) {
                            var c = u[1],
                                l = r[c];
                            l || (r[c] = l = []), l.push(h)
                        }
                    }
                    var p = [];
                    for (var c in r) p.push(n.AnimationClip.CreateFromMorphTargetSequence(c, r[c], e, i));
                    return p
                },
                parseAnimation: function(t, e, i) {
                    if (!t) return null;
                    for (var r = function(t, e, i, r, o) {
                            if (0 !== i.length) {
                                var a = [],
                                    s = [];
                                n.AnimationUtils.flattenJSON(i, a, s, r), 0 !== a.length && o.push(new t(e, a, s))
                            }
                        }, o = [], a = t.name || "default", s = t.length || -1, h = t.fps || 30, u = t.hierarchy || [], c = 0; c < u.length; c++) {
                        var l = u[c].keys;
                        if (l && 0 !== l.length)
                            if (l[0].morphTargets) {
                                for (var p = {}, d = 0; d < l.length; d++)
                                    if (l[d].morphTargets)
                                        for (var f = 0; f < l[d].morphTargets.length; f++) p[l[d].morphTargets[f]] = -1;
                                for (var m in p) {
                                    for (var g = [], v = [], f = 0; f !== l[d].morphTargets.length; ++f) {
                                        var y = l[d];
                                        g.push(y.time), v.push(y.morphTarget === m ? 1 : 0)
                                    }
                                    o.push(new n.NumberKeyframeTrack(".morphTargetInfluence[" + m + "]", g, v))
                                }
                                s = p.length * (h || 1)
                            } else {
                                var _ = ".bones[" + e[c].name + "]";
                                r(n.VectorKeyframeTrack, _ + ".position", l, "pos", o), r(n.QuaternionKeyframeTrack, _ + ".quaternion", l, "rot", o), r(n.VectorKeyframeTrack, _ + ".scale", l, "scl", o)
                            }
                    }
                    if (0 === o.length) return null;
                    var b = new n.AnimationClip(a, s, o);
                    return b
                }
            }), n.AnimationMixer = function(t) {
                this._root = t, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1
            }, Object.assign(n.AnimationMixer.prototype, n.EventDispatcher.prototype, {
                clipAction: function(t, e) {
                    var i = e || this._root,
                        r = i.uuid,
                        o = "string" == typeof t ? n.AnimationClip.findByName(i, t) : t,
                        a = null !== o ? o.uuid : t,
                        s = this._actionsByClip[a],
                        h = null;
                    if (void 0 !== s) {
                        var u = s.actionByRoot[r];
                        if (void 0 !== u) return u;
                        h = s.knownActions[0], null === o && (o = h._clip)
                    }
                    if (null === o) return null;
                    var c = new n.AnimationMixer._Action(this, o, e);
                    return this._bindAction(c, h), this._addInactiveAction(c, a, r), c
                },
                existingAction: function(t, e) {
                    var i = e || this._root,
                        r = i.uuid,
                        o = "string" == typeof t ? n.AnimationClip.findByName(i, t) : t,
                        a = o ? o.uuid : t,
                        s = this._actionsByClip[a];
                    return void 0 !== s ? s.actionByRoot[r] || null : null
                },
                stopAllAction: function() {
                    var t = this._actions,
                        e = this._nActiveActions,
                        i = this._bindings,
                        n = this._nActiveBindings;
                    this._nActiveActions = 0, this._nActiveBindings = 0;
                    for (var r = 0; r !== e; ++r) t[r].reset();
                    for (var r = 0; r !== n; ++r) i[r].useCount = 0;
                    return this
                },
                update: function(t) {
                    t *= this.timeScale;
                    for (var e = this._actions, i = this._nActiveActions, n = this.time += t, r = Math.sign(t), o = this._accuIndex ^= 1, a = 0; a !== i; ++a) {
                        var s = e[a];
                        s.enabled && s._update(n, t, r, o)
                    }
                    for (var h = this._bindings, u = this._nActiveBindings, a = 0; a !== u; ++a) h[a].apply(o);
                    return this
                },
                getRoot: function() {
                    return this._root
                },
                uncacheClip: function(t) {
                    var e = this._actions,
                        i = t.uuid,
                        n = this._actionsByClip,
                        r = n[i];
                    if (void 0 !== r) {
                        for (var o = r.knownActions, a = 0, s = o.length; a !== s; ++a) {
                            var h = o[a];
                            this._deactivateAction(h);
                            var u = h._cacheIndex,
                                c = e[e.length - 1];
                            h._cacheIndex = null, h._byClipCacheIndex = null, c._cacheIndex = u, e[u] = c, e.pop(), this._removeInactiveBindingsForAction(h)
                        }
                        delete n[i]
                    }
                },
                uncacheRoot: function(t) {
                    var e = t.uuid,
                        i = this._actionsByClip;
                    for (var n in i) {
                        var r = i[n].actionByRoot,
                            o = r[e];
                        void 0 !== o && (this._deactivateAction(o), this._removeInactiveAction(o))
                    }
                    var a = this._bindingsByRootAndName,
                        s = a[e];
                    if (void 0 !== s)
                        for (var h in s) {
                            var u = s[h];
                            u.restoreOriginalState(), this._removeInactiveBinding(u)
                        }
                },
                uncacheAction: function(t, e) {
                    var i = this.existingAction(t, e);
                    null !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
                }
            }), n.AnimationMixer._Action = n.AnimationAction._new, Object.assign(n.AnimationMixer.prototype, {
                _bindAction: function(t, e) {
                    var i = t._localRoot || this._root,
                        r = t._clip.tracks,
                        o = r.length,
                        a = t._propertyBindings,
                        s = t._interpolants,
                        h = i.uuid,
                        u = this._bindingsByRootAndName,
                        c = u[h];
                    void 0 === c && (c = {}, u[h] = c);
                    for (var l = 0; l !== o; ++l) {
                        var p = r[l],
                            d = p.name,
                            f = c[d];
                        if (void 0 !== f) a[l] = f;
                        else {
                            if (f = a[l], void 0 !== f) {
                                null === f._cacheIndex && (++f.referenceCount, this._addInactiveBinding(f, h, d));
                                continue
                            }
                            var m = e && e._propertyBindings[l].binding.parsedPath;
                            f = new n.PropertyMixer(n.PropertyBinding.create(i, d, m), p.ValueTypeName, p.getValueSize()), ++f.referenceCount, this._addInactiveBinding(f, h, d), a[l] = f
                        }
                        s[l].resultBuffer = f.buffer
                    }
                },
                _activateAction: function(t) {
                    if (!this._isActiveAction(t)) {
                        if (null === t._cacheIndex) {
                            var e = (t._localRoot || this._root).uuid,
                                i = t._clip.uuid,
                                n = this._actionsByClip[i];
                            this._bindAction(t, n && n.knownActions[0]), this._addInactiveAction(t, i, e)
                        }
                        for (var r = t._propertyBindings, o = 0, a = r.length; o !== a; ++o) {
                            var s = r[o];
                            0 === s.useCount++ && (this._lendBinding(s), s.saveOriginalState())
                        }
                        this._lendAction(t)
                    }
                },
                _deactivateAction: function(t) {
                    if (this._isActiveAction(t)) {
                        for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                            var r = e[i];
                            0 === --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r))
                        }
                        this._takeBackAction(t)
                    }
                },
                _initMemoryManager: function() {
                    this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
                    var t = this;
                    this.stats = {
                        actions: {get total() {
                                return t._actions.length
                            },
                            get inUse() {
                                return t._nActiveActions
                            }
                        },
                        bindings: {get total() {
                                return t._bindings.length
                            },
                            get inUse() {
                                return t._nActiveBindings
                            }
                        },
                        controlInterpolants: {get total() {
                                return t._controlInterpolants.length
                            },
                            get inUse() {
                                return t._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function(t) {
                    var e = t._cacheIndex;
                    return null !== e && e < this._nActiveActions
                },
                _addInactiveAction: function(t, e, i) {
                    var n = this._actions,
                        r = this._actionsByClip,
                        o = r[e];
                    if (void 0 === o) o = {
                        knownActions: [t],
                        actionByRoot: {}
                    }, t._byClipCacheIndex = 0, r[e] = o;
                    else {
                        var a = o.knownActions;
                        t._byClipCacheIndex = a.length, a.push(t)
                    }
                    t._cacheIndex = n.length, n.push(t), o.actionByRoot[i] = t
                },
                _removeInactiveAction: function(t) {
                    var e = this._actions,
                        i = e[e.length - 1],
                        n = t._cacheIndex;
                    i._cacheIndex = n, e[n] = i, e.pop(), t._cacheIndex = null;
                    var r = t._clip.uuid,
                        o = this._actionsByClip,
                        a = o[r],
                        s = a.knownActions,
                        h = s[s.length - 1],
                        u = t._byClipCacheIndex;
                    h._byClipCacheIndex = u, s[u] = h, s.pop(), t._byClipCacheIndex = null;
                    var c = a.actionByRoot,
                        l = (e._localRoot || this._root).uuid;
                    delete c[l], 0 === s.length && delete o[r], this._removeInactiveBindingsForAction(t)
                },
                _removeInactiveBindingsForAction: function(t) {
                    for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                        var r = e[i];
                        0 === --r.referenceCount && this._removeInactiveBinding(r)
                    }
                },
                _lendAction: function(t) {
                    var e = this._actions,
                        i = t._cacheIndex,
                        n = this._nActiveActions++,
                        r = e[n];
                    t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
                },
                _takeBackAction: function(t) {
                    var e = this._actions,
                        i = t._cacheIndex,
                        n = --this._nActiveActions,
                        r = e[n];
                    t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
                },
                _addInactiveBinding: function(t, e, i) {
                    var n = this._bindingsByRootAndName,
                        r = n[e],
                        o = this._bindings;
                    void 0 === r && (r = {}, n[e] = r), r[i] = t, t._cacheIndex = o.length, o.push(t)
                },
                _removeInactiveBinding: function(t) {
                    var e = this._bindings,
                        i = t.binding,
                        n = i.rootNode.uuid,
                        r = i.path,
                        o = this._bindingsByRootAndName,
                        a = o[n],
                        s = e[e.length - 1],
                        h = t._cacheIndex;
                    s._cacheIndex = h, e[h] = s, e.pop(), delete a[r];
                    t: {
                        for (var u in a) break t;delete o[n]
                    }
                },
                _lendBinding: function(t) {
                    var e = this._bindings,
                        i = t._cacheIndex,
                        n = this._nActiveBindings++,
                        r = e[n];
                    t._cacheIndex = n,
                        e[n] = t, r._cacheIndex = i, e[i] = r
                },
                _takeBackBinding: function(t) {
                    var e = this._bindings,
                        i = t._cacheIndex,
                        n = --this._nActiveBindings,
                        r = e[n];
                    t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
                },
                _lendControlInterpolant: function() {
                    var t = this._controlInterpolants,
                        e = this._nActiveControlInterpolants++,
                        i = t[e];
                    return void 0 === i && (i = new n.LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), i.__cacheIndex = e, t[e] = i), i
                },
                _takeBackControlInterpolant: function(t) {
                    var e = this._controlInterpolants,
                        i = t.__cacheIndex,
                        n = --this._nActiveControlInterpolants,
                        r = e[n];
                    t.__cacheIndex = n, e[n] = t, r.__cacheIndex = i, e[i] = r
                },
                _controlInterpolantsResultBuffer: new Float32Array(1)
            }), n.AnimationObjectGroup = function(t) {
                this.uuid = n.Math.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
                var e = {};
                this._indicesByUUID = e;
                for (var i = 0, r = arguments.length; i !== r; ++i) e[arguments[i].uuid] = i;
                this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
                var o = this;
                this.stats = {
                    objects: {get total() {
                            return o._objects.length
                        },
                        get inUse() {
                            return this.total - o.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return o._bindings.length
                    }
                }
            }, n.AnimationObjectGroup.prototype = {
                constructor: n.AnimationObjectGroup,
                add: function(t) {
                    for (var e = this._objects, i = e.length, r = this.nCachedObjects_, o = this._indicesByUUID, a = this._paths, s = this._parsedPaths, h = this._bindings, u = h.length, c = 0, l = arguments.length; c !== l; ++c) {
                        var p = arguments[c],
                            d = p.uuid,
                            f = o[d];
                        if (void 0 === f) {
                            f = i++, o[d] = f, e.push(p);
                            for (var m = 0, g = u; m !== g; ++m) h[m].push(new n.PropertyBinding(p, a[m], s[m]))
                        } else if (r > f) {
                            var v = e[f],
                                y = --r,
                                _ = e[y];
                            o[_.uuid] = f, e[f] = _, o[d] = y, e[y] = p;
                            for (var m = 0, g = u; m !== g; ++m) {
                                var b = h[m],
                                    x = b[y],
                                    w = b[f];
                                b[f] = x, void 0 === w && (w = new n.PropertyBinding(p, a[m], s[m])), b[y] = w
                            }
                        } else e[f] !== v
                    }
                    this.nCachedObjects_ = r
                },
                remove: function(t) {
                    for (var e = this._objects, i = (e.length, this.nCachedObjects_), n = this._indicesByUUID, r = this._bindings, o = r.length, a = 0, s = arguments.length; a !== s; ++a) {
                        var h = arguments[a],
                            u = h.uuid,
                            c = n[u];
                        if (void 0 !== c && c >= i) {
                            var l = i++,
                                p = e[l];
                            n[p.uuid] = c, e[c] = p, n[u] = l, e[l] = h;
                            for (var d = 0, f = o; d !== f; ++d) {
                                var m = r[d],
                                    g = m[l],
                                    v = m[c];
                                m[c] = g, m[l] = v
                            }
                        }
                    }
                    this.nCachedObjects_ = i
                },
                uncache: function(t) {
                    for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, o = this._bindings, a = o.length, s = 0, h = arguments.length; s !== h; ++s) {
                        var u = arguments[s],
                            c = u.uuid,
                            l = r[c];
                        if (void 0 !== l)
                            if (delete r[c], n > l) {
                                var p = --n,
                                    d = e[p],
                                    f = --i,
                                    m = e[f];
                                r[d.uuid] = l, e[l] = d, r[m.uuid] = p, e[p] = m, e.pop();
                                for (var g = 0, v = a; g !== v; ++g) {
                                    var y = o[g],
                                        _ = y[p],
                                        b = y[f];
                                    y[l] = _, y[p] = b, y.pop()
                                }
                            } else {
                                var f = --i,
                                    m = e[f];
                                r[m.uuid] = l, e[l] = m, e.pop();
                                for (var g = 0, v = a; g !== v; ++g) {
                                    var y = o[g];
                                    y[l] = y[f], y.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = n
                },
                subscribe_: function(t, e) {
                    var i = this._bindingsIndicesByPath,
                        r = i[t],
                        o = this._bindings;
                    if (void 0 !== r) return o[r];
                    var a = this._paths,
                        s = this._parsedPaths,
                        h = this._objects,
                        u = h.length,
                        c = this.nCachedObjects_,
                        l = new Array(u);
                    r = o.length, i[t] = r, a.push(t), s.push(e), o.push(l);
                    for (var p = c, d = h.length; p !== d; ++p) {
                        var f = h[p];
                        l[p] = new n.PropertyBinding(f, t, e)
                    }
                    return l
                },
                unsubscribe_: function(t) {
                    var e = this._bindingsIndicesByPath,
                        i = e[t];
                    if (void 0 !== i) {
                        var n = this._paths,
                            r = this._parsedPaths,
                            o = this._bindings,
                            a = o.length - 1,
                            s = o[a],
                            h = t[a];
                        e[h] = i, o[i] = s, o.pop(), r[i] = r[a], r.pop(), n[i] = n[a], n.pop()
                    }
                }
            }, n.AnimationUtils = {
                arraySlice: function(t, e, i) {
                    return n.AnimationUtils.isTypedArray(t) ? new t.constructor(t.subarray(e, i)) : t.slice(e, i)
                },
                convertArray: function(t, e, i) {
                    return !t || !i && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
                },
                isTypedArray: function(t) {
                    return ArrayBuffer.isView(t) && !(t instanceof DataView)
                },
                getKeyframeOrder: function(t) {
                    function e(e, i) {
                        return t[e] - t[i]
                    }
                    for (var i = t.length, n = new Array(i), r = 0; r !== i; ++r) n[r] = r;
                    return n.sort(e), n
                },
                sortedArray: function(t, e, i) {
                    for (var n = t.length, r = new t.constructor(n), o = 0, a = 0; a !== n; ++o)
                        for (var s = i[o] * e, h = 0; h !== e; ++h) r[a++] = t[s + h];
                    return r
                },
                flattenJSON: function(t, e, i, n) {
                    for (var r = 1, o = t[0]; void 0 !== o && void 0 === o[n];) o = t[r++];
                    if (void 0 !== o) {
                        var a = o[n];
                        if (void 0 !== a)
                            if (Array.isArray(a)) {
                                do a = o[n], void 0 !== a && (e.push(o.time), i.push.apply(i, a)), o = t[r++]; while (void 0 !== o)
                            } else if (void 0 !== a.toArray) {
                            do a = o[n], void 0 !== a && (e.push(o.time), a.toArray(i, i.length)), o = t[r++]; while (void 0 !== o)
                        } else
                            do a = o[n], void 0 !== a && (e.push(o.time), i.push(a)), o = t[r++]; while (void 0 !== o)
                    }
                }
            }, n.KeyframeTrack = function(t, e, i, r) {
                if (void 0 === t) throw new Error("track name is undefined");
                if (void 0 === e || 0 === e.length) throw new Error("no keyframes in track named " + t);
                this.name = t, this.times = n.AnimationUtils.convertArray(e, this.TimeBufferType), this.values = n.AnimationUtils.convertArray(i, this.ValueBufferType), this.setInterpolation(r || this.DefaultInterpolation), this.validate(), this.optimize()
            }, n.KeyframeTrack.prototype = {
                constructor: n.KeyframeTrack,
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: n.InterpolateLinear,
                InterpolantFactoryMethodDiscrete: function(t) {
                    return new n.DiscreteInterpolant(this.times, this.values, this.getValueSize(), t)
                },
                InterpolantFactoryMethodLinear: function(t) {
                    return new n.LinearInterpolant(this.times, this.values, this.getValueSize(), t)
                },
                InterpolantFactoryMethodSmooth: function(t) {
                    return new n.CubicInterpolant(this.times, this.values, this.getValueSize(), t)
                },
                setInterpolation: function(t) {
                    var e;
                    switch (t) {
                        case n.InterpolateDiscrete:
                            e = this.InterpolantFactoryMethodDiscrete;
                            break;
                        case n.InterpolateLinear:
                            e = this.InterpolantFactoryMethodLinear;
                            break;
                        case n.InterpolateSmooth:
                            e = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 !== e) this.createInterpolant = e;
                    else {
                        var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (t === this.DefaultInterpolation) throw new Error(i);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                    }
                },
                getInterpolation: function() {
                    switch (this.createInterpolant) {
                        case this.InterpolantFactoryMethodDiscrete:
                            return n.InterpolateDiscrete;
                        case this.InterpolantFactoryMethodLinear:
                            return n.InterpolateLinear;
                        case this.InterpolantFactoryMethodSmooth:
                            return n.InterpolateSmooth
                    }
                },
                getValueSize: function() {
                    return this.values.length / this.times.length
                },
                shift: function(t) {
                    if (0 !== t)
                        for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] += t;
                    return this
                },
                scale: function(t) {
                    if (1 !== t)
                        for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] *= t;
                    return this
                },
                trim: function(t, e) {
                    for (var i = this.times, r = i.length, o = 0, a = r - 1; o !== r && i[o] < t;) ++o;
                    for (; - 1 !== a && i[a] > e;) --a;
                    if (++a, 0 !== o || a !== r) {
                        o >= a && (a = Math.max(a, 1), o = a - 1);
                        var s = this.getValueSize();
                        this.times = n.AnimationUtils.arraySlice(i, o, a), this.values = n.AnimationUtils.arraySlice(this.values, o * s, a * s)
                    }
                    return this
                },
                validate: function() {
                    var t = !0,
                        e = this.getValueSize();
                    e - Math.floor(e) !== 0 && (t = !1);
                    var i = this.times,
                        r = this.values,
                        o = i.length;
                    0 === o && (t = !1);
                    for (var a = null, s = 0; s !== o; s++) {
                        var h = i[s];
                        if ("number" == typeof h && isNaN(h)) {
                            t = !1;
                            break
                        }
                        if (null !== a && a > h) {
                            t = !1;
                            break
                        }
                        a = h
                    }
                    if (void 0 !== r && n.AnimationUtils.isTypedArray(r))
                        for (var s = 0, u = r.length; s !== u; ++s) {
                            var c = r[s];
                            if (isNaN(c)) {
                                t = !1;
                                break
                            }
                        }
                    return t
                },
                optimize: function() {
                    for (var t = this.times, e = this.values, i = this.getValueSize(), r = 1, o = 1, a = t.length - 1; a >= o; ++o) {
                        var s = !1,
                            h = t[o],
                            u = t[o + 1];
                        if (h !== u && (1 !== o || h !== h[0]))
                            for (var c = o * i, l = c - i, p = c + i, d = 0; d !== i; ++d) {
                                var f = e[c + d];
                                if (f !== e[l + d] || f !== e[p + d]) {
                                    s = !0;
                                    break
                                }
                            }
                        if (s) {
                            if (o !== r) {
                                t[r] = t[o];
                                for (var m = o * i, g = r * i, d = 0; d !== i; ++d) e[g + d] = e[m + d]
                            }++r
                        }
                    }
                    return r !== t.length && (this.times = n.AnimationUtils.arraySlice(t, 0, r), this.values = n.AnimationUtils.arraySlice(e, 0, r * i)), this
                }
            }, Object.assign(n.KeyframeTrack, {
                parse: function(t) {
                    if (void 0 === t.type) throw new Error("track type undefined, can not parse");
                    var e = n.KeyframeTrack._getTrackTypeForValueTypeName(t.type);
                    if (void 0 === t.times) {
                        var i = [],
                            r = [];
                        n.AnimationUtils.flattenJSON(t.keys, i, r, "value"), t.times = i, t.values = r
                    }
                    return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation)
                },
                toJSON: function(t) {
                    var e, i = t.constructor;
                    if (void 0 !== i.toJSON) e = i.toJSON(t);
                    else {
                        e = {
                            name: t.name,
                            times: n.AnimationUtils.convertArray(t.times, Array),
                            values: n.AnimationUtils.convertArray(t.values, Array)
                        };
                        var r = t.getInterpolation();
                        r !== t.DefaultInterpolation && (e.interpolation = r)
                    }
                    return e.type = t.ValueTypeName, e
                },
                _getTrackTypeForValueTypeName: function(t) {
                    switch (t.toLowerCase()) {
                        case "scalar":
                        case "double":
                        case "float":
                        case "number":
                        case "integer":
                            return n.NumberKeyframeTrack;
                        case "vector":
                        case "vector2":
                        case "vector3":
                        case "vector4":
                            return n.VectorKeyframeTrack;
                        case "color":
                            return n.ColorKeyframeTrack;
                        case "quaternion":
                            return n.QuaternionKeyframeTrack;
                        case "bool":
                        case "boolean":
                            return n.BooleanKeyframeTrack;
                        case "string":
                            return n.StringKeyframeTrack
                    }
                    throw new Error("Unsupported typeName: " + t)
                }
            }), n.PropertyBinding = function(t, e, i) {
                this.path = e, this.parsedPath = i || n.PropertyBinding.parseTrackName(e), this.node = n.PropertyBinding.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t
            }, n.PropertyBinding.prototype = {
                constructor: n.PropertyBinding,
                getValue: function(t, e) {
                    this.bind(), this.getValue(t, e)
                },
                setValue: function(t, e) {
                    this.bind(), this.setValue(t, e)
                },
                bind: function() {
                    var t = this.node,
                        e = this.parsedPath,
                        i = e.objectName,
                        r = e.propertyName,
                        o = e.propertyIndex;
                    if (t || (t = n.PropertyBinding.findNode(this.rootNode, e.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
                        if (i) {
                            var a = e.objectIndex;
                            switch (i) {
                                case "materials":
                                    if (!t.material) return;
                                    if (!t.material.materials) return;
                                    t = t.material.materials;
                                    break;
                                case "bones":
                                    if (!t.skeleton) return;
                                    t = t.skeleton.bones;
                                    for (var s = 0; s < t.length; s++)
                                        if (t[s].name === a) {
                                            a = s;
                                            break
                                        }
                                    break;
                                default:
                                    if (void 0 === t[i]) return;
                                    t = t[i]
                            }
                            if (void 0 !== a) {
                                if (void 0 === t[a]) return;
                                t = t[a]
                            }
                        }
                        var h = t[r];
                        if (void 0 !== h) {
                            var u = this.Versioning.None;
                            void 0 !== t.needsUpdate ? (u = this.Versioning.NeedsUpdate, this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (u = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = t);
                            var c = this.BindingType.Direct;
                            if (void 0 !== o) {
                                if ("morphTargetInfluences" === r) {
                                    if (!t.geometry) return;
                                    if (!t.geometry.morphTargets) return;
                                    for (var s = 0; s < this.node.geometry.morphTargets.length; s++)
                                        if (t.geometry.morphTargets[s].name === o) {
                                            o = s;
                                            break
                                        }
                                }
                                c = this.BindingType.ArrayElement, this.resolvedProperty = h, this.propertyIndex = o
                            } else void 0 !== h.fromArray && void 0 !== h.toArray ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = h) : void 0 !== h.length ? (c = this.BindingType.EntireArray, this.resolvedProperty = h) : this.propertyName = r;
                            this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][u]
                        } else {
                            e.nodeName
                        }
                    }
                },
                unbind: function() {
                    this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                }
            }, Object.assign(n.PropertyBinding.prototype, {
                _getValue_unavailable: function() {},
                _setValue_unavailable: function() {},
                _getValue_unbound: n.PropertyBinding.prototype.getValue,
                _setValue_unbound: n.PropertyBinding.prototype.setValue,
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function(t, e) {
                    t[e] = this.node[this.propertyName]
                }, function(t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) t[e++] = i[n]
                }, function(t, e) {
                    t[e] = this.resolvedProperty[this.propertyIndex]
                }, function(t, e) {
                    this.resolvedProperty.toArray(t, e)
                }],
                SetterByBindingTypeAndVersioning: [
                    [function(t, e) {
                        this.node[this.propertyName] = t[e]
                    }, function(t, e) {
                        this.node[this.propertyName] = t[e], this.targetObject.needsUpdate = !0
                    }, function(t, e) {
                        this.node[this.propertyName] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function(t, e) {
                        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++]
                    }, function(t, e) {
                        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                        this.targetObject.needsUpdate = !0
                    }, function(t, e) {
                        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                        this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function(t, e) {
                        this.resolvedProperty[this.propertyIndex] = t[e]
                    }, function(t, e) {
                        this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.needsUpdate = !0
                    }, function(t, e) {
                        this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function(t, e) {
                        this.resolvedProperty.fromArray(t, e)
                    }, function(t, e) {
                        this.resolvedProperty.fromArray(t, e), this.targetObject.needsUpdate = !0
                    }, function(t, e) {
                        this.resolvedProperty.fromArray(t, e), this.targetObject.matrixWorldNeedsUpdate = !0
                    }]
                ]
            }), n.PropertyBinding.Composite = function(t, e, i) {
                var r = i || n.PropertyBinding.parseTrackName(e);
                this._targetGroup = t, this._bindings = t.subscribe_(e, r)
            }, n.PropertyBinding.Composite.prototype = {
                constructor: n.PropertyBinding.Composite,
                getValue: function(t, e) {
                    this.bind();
                    var i = this._targetGroup.nCachedObjects_,
                        n = this._bindings[i];
                    void 0 !== n && n.getValue(t, e)
                },
                setValue: function(t, e) {
                    for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n) i[n].setValue(t, e)
                },
                bind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].bind()
                },
                unbind: function() {
                    for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].unbind()
                }
            }, n.PropertyBinding.create = function(t, e, i) {
                return t instanceof n.AnimationObjectGroup ? new n.PropertyBinding.Composite(t, e, i) : new n.PropertyBinding(t, e, i)
            }, n.PropertyBinding.parseTrackName = function(t) {
                var e = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,
                    i = e.exec(t);
                if (!i) throw new Error("cannot parse trackName at all: " + t);
                i.index === e.lastIndex && e.lastIndex++;
                var n = {
                    nodeName: i[3],
                    objectName: i[5],
                    objectIndex: i[7],
                    propertyName: i[9],
                    propertyIndex: i[11]
                };
                if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("can not parse propertyName from trackName: " + t);
                return n
            }, n.PropertyBinding.findNode = function(t, e) {
                if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid) return t;
                if (t.skeleton) {
                    var i = function(t) {
                            for (var i = 0; i < t.bones.length; i++) {
                                var n = t.bones[i];
                                if (n.name === e) return n
                            }
                            return null
                        },
                        n = i(t.skeleton);
                    if (n) return n
                }
                if (t.children) {
                    var r = function(t) {
                            for (var i = 0; i < t.length; i++) {
                                var n = t[i];
                                if (n.name === e || n.uuid === e) return n;
                                var o = r(n.children);
                                if (o) return o
                            }
                            return null
                        },
                        o = r(t.children);
                    if (o) return o
                }
                return null
            }, n.PropertyMixer = function(t, e, i) {
                this.binding = t, this.valueSize = i;
                var n, r = Float64Array;
                switch (e) {
                    case "quaternion":
                        n = this._slerp;
                        break;
                    case "string":
                    case "bool":
                        r = Array, n = this._select;
                        break;
                    default:
                        n = this._lerp
                }
                this.buffer = new r(4 * i), this._mixBufferRegion = n, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0
            }, n.PropertyMixer.prototype = {
                constructor: n.PropertyMixer,
                accumulate: function(t, e) {
                    var i = this.buffer,
                        n = this.valueSize,
                        r = t * n + n,
                        o = this.cumulativeWeight;
                    if (0 === o) {
                        for (var a = 0; a !== n; ++a) i[r + a] = i[a];
                        o = e
                    } else {
                        o += e;
                        var s = e / o;
                        this._mixBufferRegion(i, r, 0, s, n)
                    }
                    this.cumulativeWeight = o
                },
                apply: function(t) {
                    var e = this.valueSize,
                        i = this.buffer,
                        n = t * e + e,
                        r = this.cumulativeWeight,
                        o = this.binding;
                    if (this.cumulativeWeight = 0, 1 > r) {
                        var a = 3 * e;
                        this._mixBufferRegion(i, n, a, 1 - r, e)
                    }
                    for (var s = e, h = e + e; s !== h; ++s)
                        if (i[s] !== i[s + e]) {
                            o.setValue(i, n);
                            break
                        }
                },
                saveOriginalState: function() {
                    var t = this.binding,
                        e = this.buffer,
                        i = this.valueSize,
                        n = 3 * i;
                    t.getValue(e, n);
                    for (var r = i, o = n; r !== o; ++r) e[r] = e[n + r % i];
                    this.cumulativeWeight = 0
                },
                restoreOriginalState: function() {
                    var t = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, t)
                },
                _select: function(t, e, i, n, r) {
                    if (n >= .5)
                        for (var o = 0; o !== r; ++o) t[e + o] = t[i + o]
                },
                _slerp: function(t, e, i, r, o) {
                    n.Quaternion.slerpFlat(t, e, t, e, t, i, r)
                },
                _lerp: function(t, e, i, n, r) {
                    for (var o = 1 - n, a = 0; a !== r; ++a) {
                        var s = e + a;
                        t[s] = t[s] * o + t[i + a] * n
                    }
                }
            }, n.BooleanKeyframeTrack = function(t, e, i) {
                n.KeyframeTrack.call(this, t, e, i)
            }, n.BooleanKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.BooleanKeyframeTrack,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: n.InterpolateDiscrete,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }), n.ColorKeyframeTrack = function(t, e, i, r) {
                n.KeyframeTrack.call(this, t, e, i, r)
            }, n.ColorKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.ColorKeyframeTrack,
                ValueTypeName: "color"
            }), n.NumberKeyframeTrack = function(t, e, i, r) {
                n.KeyframeTrack.call(this, t, e, i, r)
            }, n.NumberKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.NumberKeyframeTrack,
                ValueTypeName: "number"
            }), n.QuaternionKeyframeTrack = function(t, e, i, r) {
                n.KeyframeTrack.call(this, t, e, i, r)
            }, n.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.QuaternionKeyframeTrack,
                ValueTypeName: "quaternion",
                DefaultInterpolation: n.InterpolateLinear,
                InterpolantFactoryMethodLinear: function(t) {
                    return new n.QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), t)
                },
                InterpolantFactoryMethodSmooth: void 0
            }), n.StringKeyframeTrack = function(t, e, i, r) {
                n.KeyframeTrack.call(this, t, e, i, r)
            }, n.StringKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.StringKeyframeTrack,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: n.InterpolateDiscrete,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }), n.VectorKeyframeTrack = function(t, e, i, r) {
                n.KeyframeTrack.call(this, t, e, i, r)
            }, n.VectorKeyframeTrack.prototype = Object.assign(Object.create(n.KeyframeTrack.prototype), {
                constructor: n.VectorKeyframeTrack,
                ValueTypeName: "vector"
            }), n.Audio = function(t) {
                n.Object3D.call(this), this.type = "Audio", this.context = t.context, this.source = this.context.createBufferSource(), this.source.onended = this.onEnded.bind(this), this.gain = this.context.createGain(), this.gain.connect(t.getInput()), this.autoplay = !1, this.startTime = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = []
            }, n.Audio.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Audio,
                getOutput: function() {
                    return this.gain
                },
                setNodeSource: function(t) {
                    return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = t, this.connect(), this
                },
                setBuffer: function(t) {
                    return this.source.buffer = t, this.sourceType = "buffer", this.autoplay && this.play(), this
                },
                play: function() {
                    if (this.isPlaying !== !0 && this.hasPlaybackControl !== !1) {
                        var t = this.context.createBufferSource();
                        return t.buffer = this.source.buffer, t.loop = this.source.loop, t.onended = this.source.onended, t.start(0, this.startTime), t.playbackRate.value = this.playbackRate, this.isPlaying = !0, this.source = t, this.connect()
                    }
                },
                pause: function() {
                    return this.hasPlaybackControl !== !1 ? (this.source.stop(), this.startTime = this.context.currentTime, this.isPlaying = !1, this) : void 0
                },
                stop: function() {
                    return this.hasPlaybackControl !== !1 ? (this.source.stop(), this.startTime = 0, this.isPlaying = !1, this) : void 0
                },
                connect: function() {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (var t = 1, e = this.filters.length; e > t; t++) this.filters[t - 1].connect(this.filters[t]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else this.source.connect(this.getOutput());
                    return this
                },
                disconnect: function() {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (var t = 1, e = this.filters.length; e > t; t++) this.filters[t - 1].disconnect(this.filters[t]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else this.source.disconnect(this.getOutput());
                    return this
                },
                getFilters: function() {
                    return this.filters
                },
                setFilters: function(t) {
                    return t || (t = []), this.isPlaying === !0 ? (this.disconnect(), this.filters = t, this.connect()) : this.filters = t, this
                },
                getFilter: function() {
                    return this.getFilters()[0]
                },
                setFilter: function(t) {
                    return this.setFilters(t ? [t] : [])
                },
                setPlaybackRate: function(t) {
                    return this.hasPlaybackControl !== !1 ? (this.playbackRate = t, this.isPlaying === !0 && (this.source.playbackRate.value = this.playbackRate), this) : void 0
                },
                getPlaybackRate: function() {
                    return this.playbackRate
                },
                onEnded: function() {
                    this.isPlaying = !1
                },
                getLoop: function() {
                    return this.hasPlaybackControl === !1 ? !1 : this.source.loop
                },
                setLoop: function(t) {
                    this.hasPlaybackControl !== !1 && (this.source.loop = t)
                },
                getVolume: function() {
                    return this.gain.gain.value
                },
                setVolume: function(t) {
                    return this.gain.gain.value = t, this
                }
            }), n.AudioAnalyser = function(t, e) {
                this.analyser = t.context.createAnalyser(), this.analyser.fftSize = void 0 !== e ? e : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser)
            }, Object.assign(n.AudioAnalyser.prototype, {
                getFrequencyData: function() {
                    return this.analyser.getByteFrequencyData(this.data), this.data
                },
                getAverageFrequency: function() {
                    for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++) t += e[i];
                    return t / e.length
                }
            }), Object.defineProperty(n, "AudioContext", {
                get: function() {
                    var t;
                    return function() {
                        return void 0 === t && (t = new(window.AudioContext || window.webkitAudioContext)), t
                    }
                }()
            }), n.PositionalAudio = function(t) {
                n.Audio.call(this, t), this.panner = this.context.createPanner(), this.panner.connect(this.gain)
            }, n.PositionalAudio.prototype = Object.assign(Object.create(n.Audio.prototype), {
                constructor: n.PositionalAudio,
                getOutput: function() {
                    return this.panner
                },
                getRefDistance: function() {
                    return this.panner.refDistance
                },
                setRefDistance: function(t) {
                    this.panner.refDistance = t
                },
                getRolloffFactor: function() {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function(t) {
                    this.panner.rolloffFactor = t
                },
                getDistanceModel: function() {
                    return this.panner.distanceModel
                },
                setDistanceModel: function(t) {
                    this.panner.distanceModel = t
                },
                getMaxDistance: function() {
                    return this.panner.maxDistance
                },
                setMaxDistance: function(t) {
                    this.panner.maxDistance = t
                },
                updateMatrixWorld: function() {
                    var t = new n.Vector3;
                    return function(e) {
                        n.Object3D.prototype.updateMatrixWorld.call(this, e), t.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(t.x, t.y, t.z)
                    }
                }()
            }), n.AudioListener = function() {
                n.Object3D.call(this), this.type = "AudioListener", this.context = n.AudioContext, this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null
            }, n.AudioListener.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.AudioListener,
                getInput: function() {
                    return this.gain
                },
                removeFilter: function() {
                    null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null)
                },
                getFilter: function() {
                    return this.filter
                },
                setFilter: function(t) {
                    null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t, this.gain.connect(this.filter), this.filter.connect(this.context.destination)
                },
                getMasterVolume: function() {
                    return this.gain.gain.value
                },
                setMasterVolume: function(t) {
                    this.gain.gain.value = t
                },
                updateMatrixWorld: function() {
                    var t = new n.Vector3,
                        e = new n.Quaternion,
                        i = new n.Vector3,
                        r = new n.Vector3;
                    return function(o) {
                        n.Object3D.prototype.updateMatrixWorld.call(this, o);
                        var a = this.context.listener,
                            s = this.up;
                        this.matrixWorld.decompose(t, e, i), r.set(0, 0, -1).applyQuaternion(e), a.setPosition(t.x, t.y, t.z), a.setOrientation(r.x, r.y, r.z, s.x, s.y, s.z)
                    }
                }()
            }), n.Camera = function() {
                n.Object3D.call(this), this.type = "Camera", this.matrixWorldInverse = new n.Matrix4, this.projectionMatrix = new n.Matrix4
            }, n.Camera.prototype = Object.create(n.Object3D.prototype), n.Camera.prototype.constructor = n.Camera, n.Camera.prototype.getWorldDirection = function() {
                var t = new n.Quaternion;
                return function(e) {
                    var i = e || new n.Vector3;
                    return this.getWorldQuaternion(t), i.set(0, 0, -1).applyQuaternion(t)
                }
            }(), n.Camera.prototype.lookAt = function() {
                var t = new n.Matrix4;
                return function(e) {
                    t.lookAt(this.position, e, this.up), this.quaternion.setFromRotationMatrix(t)
                }
            }(), n.Camera.prototype.clone = function() {
                return (new this.constructor).copy(this)
            }, n.Camera.prototype.copy = function(t) {
                return n.Object3D.prototype.copy.call(this, t), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this
            }, n.CubeCamera = function(t, e, i) {
                n.Object3D.call(this), this.type = "CubeCamera";
                var r = 90,
                    o = 1,
                    a = new n.PerspectiveCamera(r, o, t, e);
                a.up.set(0, -1, 0), a.lookAt(new n.Vector3(1, 0, 0)), this.add(a);
                var s = new n.PerspectiveCamera(r, o, t, e);
                s.up.set(0, -1, 0), s.lookAt(new n.Vector3(-1, 0, 0)), this.add(s);
                var h = new n.PerspectiveCamera(r, o, t, e);
                h.up.set(0, 0, 1), h.lookAt(new n.Vector3(0, 1, 0)), this.add(h);
                var u = new n.PerspectiveCamera(r, o, t, e);
                u.up.set(0, 0, -1), u.lookAt(new n.Vector3(0, -1, 0)), this.add(u);
                var c = new n.PerspectiveCamera(r, o, t, e);
                c.up.set(0, -1, 0), c.lookAt(new n.Vector3(0, 0, 1)), this.add(c);
                var l = new n.PerspectiveCamera(r, o, t, e);
                l.up.set(0, -1, 0), l.lookAt(new n.Vector3(0, 0, -1)), this.add(l);
                var p = {
                    format: n.RGBFormat,
                    magFilter: n.LinearFilter,
                    minFilter: n.LinearFilter
                };
                this.renderTarget = new n.WebGLRenderTargetCube(i, i, p), this.updateCubeMap = function(t, e) {
                    null === this.parent && this.updateMatrixWorld();
                    var i = this.renderTarget,
                        n = i.texture.generateMipmaps;
                    i.texture.generateMipmaps = !1, i.activeCubeFace = 0, t.render(e, a, i), i.activeCubeFace = 1, t.render(e, s, i), i.activeCubeFace = 2, t.render(e, h, i), i.activeCubeFace = 3, t.render(e, u, i), i.activeCubeFace = 4, t.render(e, c, i), i.texture.generateMipmaps = n, i.activeCubeFace = 5, t.render(e, l, i), t.setRenderTarget(null)
                }
            }, n.CubeCamera.prototype = Object.create(n.Object3D.prototype), n.CubeCamera.prototype.constructor = n.CubeCamera, n.OrthographicCamera = function(t, e, i, r, o, a) {
                n.Camera.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = t, this.right = e, this.top = i, this.bottom = r, this.near = void 0 !== o ? o : .1, this.far = void 0 !== a ? a : 2e3, this.updateProjectionMatrix()
            }, n.OrthographicCamera.prototype = Object.assign(Object.create(n.Camera.prototype), {
                constructor: n.OrthographicCamera,
                copy: function(t) {
                    return n.Camera.prototype.copy.call(this, t), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = null === t.view ? null : Object.assign({}, t.view), this
                },
                setViewOffset: function(t, e, i, n, r, o) {
                    this.view = {
                        fullWidth: t,
                        fullHeight: e,
                        offsetX: i,
                        offsetY: n,
                        width: r,
                        height: o
                    }, this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null, this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var t = (this.right - this.left) / (2 * this.zoom),
                        e = (this.top - this.bottom) / (2 * this.zoom),
                        i = (this.right + this.left) / 2,
                        n = (this.top + this.bottom) / 2,
                        r = i - t,
                        o = i + t,
                        a = n + e,
                        s = n - e;
                    if (null !== this.view) {
                        var h = this.zoom / (this.view.width / this.view.fullWidth),
                            u = this.zoom / (this.view.height / this.view.fullHeight),
                            c = (this.right - this.left) / this.view.width,
                            l = (this.top - this.bottom) / this.view.height;
                        r += c * (this.view.offsetX / h), o = r + c * (this.view.width / h), a -= l * (this.view.offsetY / u), s = a - l * (this.view.height / u)
                    }
                    this.projectionMatrix.makeOrthographic(r, o, a, s, this.near, this.far)
                },
                toJSON: function(t) {
                    var e = n.Object3D.prototype.toJSON.call(this, t);
                    return e.object.zoom = this.zoom, e.object.left = this.left, e.object.right = this.right, e.object.top = this.top, e.object.bottom = this.bottom, e.object.near = this.near, e.object.far = this.far, null !== this.view && (e.object.view = Object.assign({}, this.view)), e
                }
            }), n.PerspectiveCamera = function(t, e, i, r) {
                n.Camera.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== t ? t : 50, this.zoom = 1, this.near = void 0 !== i ? i : .1, this.far = void 0 !== r ? r : 2e3, this.focus = 10, this.aspect = void 0 !== e ? e : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix()
            }, n.PerspectiveCamera.prototype = Object.assign(Object.create(n.Camera.prototype), {
                constructor: n.PerspectiveCamera,
                copy: function(t) {
                    return n.Camera.prototype.copy.call(this, t), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = null === t.view ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this
                },
                setFocalLength: function(t) {
                    var e = .5 * this.getFilmHeight() / t;
                    this.fov = 2 * n.Math.RAD2DEG * Math.atan(e), this.updateProjectionMatrix()
                },
                getFocalLength: function() {
                    var t = Math.tan(.5 * n.Math.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / t
                },
                getEffectiveFOV: function() {
                    return 2 * n.Math.RAD2DEG * Math.atan(Math.tan(.5 * n.Math.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function() {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function() {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function(t, e, i, n, r, o) {
                    this.aspect = t / e, this.view = {
                        fullWidth: t,
                        fullHeight: e,
                        offsetX: i,
                        offsetY: n,
                        width: r,
                        height: o
                    }, this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null, this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var t = this.near,
                        e = t * Math.tan(.5 * n.Math.DEG2RAD * this.fov) / this.zoom,
                        i = 2 * e,
                        r = this.aspect * i,
                        o = -.5 * r,
                        a = this.view;
                    if (null !== a) {
                        var s = a.fullWidth,
                            h = a.fullHeight;
                        o += a.offsetX * r / s, e -= a.offsetY * i / h, r *= a.width / s, i *= a.height / h
                    }
                    var u = this.filmOffset;
                    0 !== u && (o += t * u / this.getFilmWidth()), this.projectionMatrix.makeFrustum(o, o + r, e - i, e, t, this.far)
                },
                toJSON: function(t) {
                    var e = n.Object3D.prototype.toJSON.call(this, t);
                    return e.object.fov = this.fov, e.object.zoom = this.zoom, e.object.near = this.near, e.object.far = this.far, e.object.focus = this.focus, e.object.aspect = this.aspect, null !== this.view && (e.object.view = Object.assign({}, this.view)), e.object.filmGauge = this.filmGauge, e.object.filmOffset = this.filmOffset, e
                }
            }), n.StereoCamera = function() {
                this.type = "StereoCamera", this.aspect = 1, this.cameraL = new n.PerspectiveCamera, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new n.PerspectiveCamera, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1
            }, Object.assign(n.StereoCamera.prototype, {
                update: function() {
                    var t, e, i, r, o, a = new n.Matrix4,
                        s = new n.Matrix4;
                    return function(h) {
                        var u = t !== h.focus || e !== h.fov || i !== h.aspect * this.aspect || r !== h.near || o !== h.far;
                        if (u) {
                            t = h.focus, e = h.fov, i = h.aspect * this.aspect, r = h.near, o = h.far;
                            var c, l, p = h.projectionMatrix.clone(),
                                d = .032,
                                f = d * r / t,
                                m = r * Math.tan(n.Math.DEG2RAD * e * .5);
                            s.elements[12] = -d, a.elements[12] = d, c = -m * i + f, l = m * i + f, p.elements[0] = 2 * r / (l - c), p.elements[8] = (l + c) / (l - c), this.cameraL.projectionMatrix.copy(p), c = -m * i - f, l = m * i - f, p.elements[0] = 2 * r / (l - c), p.elements[8] = (l + c) / (l - c), this.cameraR.projectionMatrix.copy(p)
                        }
                        this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(s), this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(a)
                    }
                }()
            }), n.Light = function(t, e) {
                n.Object3D.call(this), this.type = "Light", this.color = new n.Color(t), this.intensity = void 0 !== e ? e : 1, this.receiveShadow = void 0
            }, n.Light.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Light,
                copy: function(t) {
                    return n.Object3D.prototype.copy.call(this, t), this.color.copy(t.color), this.intensity = t.intensity, this
                },
                toJSON: function(t) {
                    var e = n.Object3D.prototype.toJSON.call(this, t);
                    return e.object.color = this.color.getHex(), e.object.intensity = this.intensity, void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (e.object.distance = this.distance), void 0 !== this.angle && (e.object.angle = this.angle), void 0 !== this.decay && (e.object.decay = this.decay), void 0 !== this.penumbra && (e.object.penumbra = this.penumbra), e
                }
            }), n.LightShadow = function(t) {
                this.camera = t, this.bias = 0, this.radius = 1, this.mapSize = new n.Vector2(512, 512), this.map = null, this.matrix = new n.Matrix4
            }, Object.assign(n.LightShadow.prototype, {
                copy: function(t) {
                    return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }), n.AmbientLight = function(t, e) {
                n.Light.call(this, t, e), this.type = "AmbientLight", this.castShadow = void 0
            }, n.AmbientLight.prototype = Object.assign(Object.create(n.Light.prototype), {
                constructor: n.AmbientLight
            }), n.DirectionalLight = function(t, e) {
                n.Light.call(this, t, e), this.type = "DirectionalLight", this.position.set(0, 1, 0), this.updateMatrix(), this.target = new n.Object3D, this.shadow = new n.DirectionalLightShadow
            }, n.DirectionalLight.prototype = Object.assign(Object.create(n.Light.prototype), {
                constructor: n.DirectionalLight,
                copy: function(t) {
                    return n.Light.prototype.copy.call(this, t), this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
                }
            }), n.DirectionalLightShadow = function(t) {
                n.LightShadow.call(this, new n.OrthographicCamera(-5, 5, 5, -5, .5, 500))
            }, n.DirectionalLightShadow.prototype = Object.assign(Object.create(n.LightShadow.prototype), {
                constructor: n.DirectionalLightShadow
            }), n.HemisphereLight = function(t, e, i) {
                n.Light.call(this, t, i), this.type = "HemisphereLight", this.castShadow = void 0, this.position.set(0, 1, 0), this.updateMatrix(), this.groundColor = new n.Color(e)
            }, n.HemisphereLight.prototype = Object.assign(Object.create(n.Light.prototype), {
                constructor: n.HemisphereLight,
                copy: function(t) {
                    return n.Light.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this
                }
            }), n.PointLight = function(t, e, i, r) {
                n.Light.call(this, t, e), this.type = "PointLight", Object.defineProperty(this, "power", {
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(t) {
                        this.intensity = t / (4 * Math.PI)
                    }
                }), this.distance = void 0 !== i ? i : 0, this.decay = void 0 !== r ? r : 1, this.shadow = new n.LightShadow(new n.PerspectiveCamera(90, 1, .5, 500))
            }, n.PointLight.prototype = Object.assign(Object.create(n.Light.prototype), {
                constructor: n.PointLight,
                copy: function(t) {
                    return n.Light.prototype.copy.call(this, t), this.distance = t.distance, this.decay = t.decay, this.shadow = t.shadow.clone(), this
                }
            }), n.SpotLight = function(t, e, i, r, o, a) {
                n.Light.call(this, t, e), this.type = "SpotLight", this.position.set(0, 1, 0), this.updateMatrix(), this.target = new n.Object3D, Object.defineProperty(this, "power", {
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(t) {
                        this.intensity = t / Math.PI
                    }
                }), this.distance = void 0 !== i ? i : 0, this.angle = void 0 !== r ? r : Math.PI / 3, this.penumbra = void 0 !== o ? o : 0, this.decay = void 0 !== a ? a : 1, this.shadow = new n.SpotLightShadow
            }, n.SpotLight.prototype = Object.assign(Object.create(n.Light.prototype), {
                constructor: n.SpotLight,
                copy: function(t) {
                    return n.Light.prototype.copy.call(this, t), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
                }
            }), n.SpotLightShadow = function() {
                n.LightShadow.call(this, new n.PerspectiveCamera(50, 1, .5, 500))
            }, n.SpotLightShadow.prototype = Object.assign(Object.create(n.LightShadow.prototype), {
                constructor: n.SpotLightShadow,
                update: function(t) {
                    var e = 2 * n.Math.RAD2DEG * t.angle,
                        i = this.mapSize.width / this.mapSize.height,
                        r = t.distance || 500,
                        o = this.camera;
                    e === o.fov && i === o.aspect && r === o.far || (o.fov = e, o.aspect = i, o.far = r, o.updateProjectionMatrix())
                }
            }), n.AudioLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.AudioLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = new n.XHRLoader(this.manager);
                    o.setResponseType("arraybuffer"), o.load(t, function(t) {
                        var i = n.AudioContext;
                        i.decodeAudioData(t, function(t) {
                            e(t)
                        })
                    }, i, r)
                }
            }), n.Cache = {
                enabled: !1,
                files: {},
                add: function(t, e) {
                    this.enabled !== !1 && (this.files[t] = e)
                },
                get: function(t) {
                    return this.enabled !== !1 ? this.files[t] : void 0
                },
                remove: function(t) {
                    delete this.files[t]
                },
                clear: function() {
                    this.files = {}
                }
            }, n.Loader = function() {
                this.onLoadStart = function() {}, this.onLoadProgress = function() {}, this.onLoadComplete = function() {}
            }, n.Loader.prototype = {
                constructor: n.Loader,
                crossOrigin: void 0,
                extractUrlBase: function(t) {
                    var e = t.split("/");
                    return 1 === e.length ? "./" : (e.pop(), e.join("/") + "/")
                },
                initMaterials: function(t, e, i) {
                    for (var n = [], r = 0; r < t.length; ++r) n[r] = this.createMaterial(t[r], e, i);
                    return n
                },
                createMaterial: function() {
                    var t, e, i;
                    return function(r, o, a) {
                        function s(t, i, r, s, u) {
                            var c, l = o + t,
                                p = n.Loader.Handlers.get(l);
                            null !== p ? c = p.load(l) : (e.setCrossOrigin(a), c = e.load(l)), void 0 !== i && (c.repeat.fromArray(i), 1 !== i[0] && (c.wrapS = n.RepeatWrapping), 1 !== i[1] && (c.wrapT = n.RepeatWrapping)), void 0 !== r && c.offset.fromArray(r), void 0 !== s && ("repeat" === s[0] && (c.wrapS = n.RepeatWrapping), "mirror" === s[0] && (c.wrapS = n.MirroredRepeatWrapping), "repeat" === s[1] && (c.wrapT = n.RepeatWrapping), "mirror" === s[1] && (c.wrapT = n.MirroredRepeatWrapping)), void 0 !== u && (c.anisotropy = u);
                            var d = n.Math.generateUUID();
                            return h[d] = c, d
                        }
                        void 0 === t && (t = new n.Color), void 0 === e && (e = new n.TextureLoader), void 0 === i && (i = new n.MaterialLoader);
                        var h = {},
                            u = {
                                uuid: n.Math.generateUUID(),
                                type: "MeshLambertMaterial"
                            };
                        for (var c in r) {
                            var l = r[c];
                            switch (c) {
                                case "DbgColor":
                                case "DbgIndex":
                                case "opticalDensity":
                                case "illumination":
                                    break;
                                case "DbgName":
                                    u.name = l;
                                    break;
                                case "blending":
                                    u.blending = n[l];
                                    break;
                                case "colorAmbient":
                                case "mapAmbient":
                                    break;
                                case "colorDiffuse":
                                    u.color = t.fromArray(l).getHex();
                                    break;
                                case "colorSpecular":
                                    u.specular = t.fromArray(l).getHex();
                                    break;
                                case "colorEmissive":
                                    u.emissive = t.fromArray(l).getHex();
                                    break;
                                case "specularCoef":
                                    u.shininess = l;
                                    break;
                                case "shading":
                                    "basic" === l.toLowerCase() && (u.type = "MeshBasicMaterial"), "phong" === l.toLowerCase() && (u.type = "MeshPhongMaterial"), "standard" === l.toLowerCase() && (u.type = "MeshStandardMaterial");
                                    break;
                                case "mapDiffuse":
                                    u.map = s(l, r.mapDiffuseRepeat, r.mapDiffuseOffset, r.mapDiffuseWrap, r.mapDiffuseAnisotropy);
                                    break;
                                case "mapDiffuseRepeat":
                                case "mapDiffuseOffset":
                                case "mapDiffuseWrap":
                                case "mapDiffuseAnisotropy":
                                    break;
                                case "mapEmissive":
                                    u.emissiveMap = s(l, r.mapEmissiveRepeat, r.mapEmissiveOffset, r.mapEmissiveWrap, r.mapEmissiveAnisotropy);
                                    break;
                                case "mapEmissiveRepeat":
                                case "mapEmissiveOffset":
                                case "mapEmissiveWrap":
                                case "mapEmissiveAnisotropy":
                                    break;
                                case "mapLight":
                                    u.lightMap = s(l, r.mapLightRepeat, r.mapLightOffset, r.mapLightWrap, r.mapLightAnisotropy);
                                    break;
                                case "mapLightRepeat":
                                case "mapLightOffset":
                                case "mapLightWrap":
                                case "mapLightAnisotropy":
                                    break;
                                case "mapAO":
                                    u.aoMap = s(l, r.mapAORepeat, r.mapAOOffset, r.mapAOWrap, r.mapAOAnisotropy);
                                    break;
                                case "mapAORepeat":
                                case "mapAOOffset":
                                case "mapAOWrap":
                                case "mapAOAnisotropy":
                                    break;
                                case "mapBump":
                                    u.bumpMap = s(l, r.mapBumpRepeat, r.mapBumpOffset, r.mapBumpWrap, r.mapBumpAnisotropy);
                                    break;
                                case "mapBumpScale":
                                    u.bumpScale = l;
                                    break;
                                case "mapBumpRepeat":
                                case "mapBumpOffset":
                                case "mapBumpWrap":
                                case "mapBumpAnisotropy":
                                    break;
                                case "mapNormal":
                                    u.normalMap = s(l, r.mapNormalRepeat, r.mapNormalOffset, r.mapNormalWrap, r.mapNormalAnisotropy);
                                    break;
                                case "mapNormalFactor":
                                    u.normalScale = [l, l];
                                    break;
                                case "mapNormalRepeat":
                                case "mapNormalOffset":
                                case "mapNormalWrap":
                                case "mapNormalAnisotropy":
                                    break;
                                case "mapSpecular":
                                    u.specularMap = s(l, r.mapSpecularRepeat, r.mapSpecularOffset, r.mapSpecularWrap, r.mapSpecularAnisotropy);
                                    break;
                                case "mapSpecularRepeat":
                                case "mapSpecularOffset":
                                case "mapSpecularWrap":
                                case "mapSpecularAnisotropy":
                                    break;
                                case "mapMetalness":
                                    u.metalnessMap = s(l, r.mapMetalnessRepeat, r.mapMetalnessOffset, r.mapMetalnessWrap, r.mapMetalnessAnisotropy);
                                    break;
                                case "mapMetalnessRepeat":
                                case "mapMetalnessOffset":
                                case "mapMetalnessWrap":
                                case "mapMetalnessAnisotropy":
                                    break;
                                case "mapRoughness":
                                    u.roughnessMap = s(l, r.mapRoughnessRepeat, r.mapRoughnessOffset, r.mapRoughnessWrap, r.mapRoughnessAnisotropy);
                                    break;
                                case "mapRoughnessRepeat":
                                case "mapRoughnessOffset":
                                case "mapRoughnessWrap":
                                case "mapRoughnessAnisotropy":
                                    break;
                                case "mapAlpha":
                                    u.alphaMap = s(l, r.mapAlphaRepeat, r.mapAlphaOffset, r.mapAlphaWrap, r.mapAlphaAnisotropy);
                                    break;
                                case "mapAlphaRepeat":
                                case "mapAlphaOffset":
                                case "mapAlphaWrap":
                                case "mapAlphaAnisotropy":
                                    break;
                                case "flipSided":
                                    u.side = n.BackSide;
                                    break;
                                case "doubleSided":
                                    u.side = n.DoubleSide;
                                    break;
                                case "transparency":
                                    u.opacity = l;
                                    break;
                                case "depthTest":
                                case "depthWrite":
                                case "colorWrite":
                                case "opacity":
                                case "reflectivity":
                                case "transparent":
                                case "visible":
                                case "wireframe":
                                    u[c] = l;
                                    break;
                                case "vertexColors":
                                    l === !0 && (u.vertexColors = n.VertexColors), "face" === l && (u.vertexColors = n.FaceColors)
                            }
                        }
                        return "MeshBasicMaterial" === u.type && delete u.emissive, "MeshPhongMaterial" !== u.type && delete u.specular, u.opacity < 1 && (u.transparent = !0), i.setTextures(h), i.parse(u)
                    }
                }()
            }, n.Loader.Handlers = {
                handlers: [],
                add: function(t, e) {
                    this.handlers.push(t, e)
                },
                get: function(t) {
                    for (var e = this.handlers, i = 0, n = e.length; n > i; i += 2) {
                        var r = e[i],
                            o = e[i + 1];
                        if (r.test(t)) return o
                    }
                    return null
                }
            }, n.XHRLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.XHRLoader.prototype, {
                load: function(t, e, i, r) {
                    void 0 !== this.path && (t = this.path + t);
                    var o = this,
                        a = n.Cache.get(t);
                    if (void 0 !== a) return e && setTimeout(function() {
                        e(a)
                    }, 0), a;
                    var s = new XMLHttpRequest;
                    return s.overrideMimeType("text/plain"), s.open("GET", t, !0), s.addEventListener("load", function(i) {
                        var a = i.target.response;
                        n.Cache.add(t, a), 200 === this.status ? (e && e(a), o.manager.itemEnd(t)) : 0 === this.status ? (e && e(a), o.manager.itemEnd(t)) : (r && r(i), o.manager.itemError(t))
                    }, !1), void 0 !== i && s.addEventListener("progress", function(t) {
                        i(t)
                    }, !1), s.addEventListener("error", function(e) {
                        r && r(e), o.manager.itemError(t)
                    }, !1), void 0 !== this.responseType && (s.responseType = this.responseType), void 0 !== this.withCredentials && (s.withCredentials = this.withCredentials), s.send(null), o.manager.itemStart(t), s
                },
                setPath: function(t) {
                    return this.path = t, this
                },
                setResponseType: function(t) {
                    return this.responseType = t, this
                },
                setWithCredentials: function(t) {
                    return this.withCredentials = t, this
                }
            }), n.FontLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.FontLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = this,
                        a = new n.XHRLoader(this.manager);
                    a.load(t, function(t) {
                        var i;
                        try {
                            i = JSON.parse(t)
                        } catch (n) {
                            i = JSON.parse(t.substring(65, t.length - 2))
                        }
                        var r = o.parse(i);
                        e && e(r)
                    }, i, r)
                },
                parse: function(t) {
                    return new n.Font(t)
                }
            }), n.ImageLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.ImageLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                    if (o.onload = function() {
                            URL.revokeObjectURL(o.src), e && e(o)
                        }, 0 === t.indexOf("data:")) o.src = t;
                    else {
                        var a = new n.XHRLoader(this.manager);
                        a.setPath(this.path), a.setResponseType("blob"), a.load(t, function(t) {
                            o.src = URL.createObjectURL(t)
                        }, i, r)
                    }
                    return o
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t, this
                },
                setPath: function(t) {
                    return this.path = t, this
                }
            }), n.JSONLoader = function(t) {
                "boolean" == typeof t && (t = void 0), this.manager = void 0 !== t ? t : n.DefaultLoadingManager, this.withCredentials = !1
            }, Object.assign(n.JSONLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = this,
                        a = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : n.Loader.prototype.extractUrlBase(t),
                        s = new n.XHRLoader(this.manager);
                    s.setWithCredentials(this.withCredentials), s.load(t, function(t) {
                        var i = JSON.parse(t),
                            n = i.metadata;
                        if (void 0 !== n) {
                            var r = n.type;
                            if (void 0 !== r) {
                                if ("object" === r.toLowerCase()) return;
                                if ("scene" === r.toLowerCase()) return
                            }
                        }
                        var s = o.parse(i, a);
                        e(s.geometry, s.materials)
                    }, i, r)
                },
                setTexturePath: function(t) {
                    this.texturePath = t
                },
                parse: function(t, e) {
                    function i(e) {
                        function i(t, e) {
                            return t & 1 << e
                        }
                        var r, o, a, h, u, c, l, p, d, f, m, g, v, y, _, b, x, w, M, S, T, A, E, C, P, L, R, k = t.faces,
                            I = t.vertices,
                            D = t.normals,
                            B = t.colors,
                            O = 0;
                        if (void 0 !== t.uvs) {
                            for (r = 0; r < t.uvs.length; r++) t.uvs[r].length && O++;
                            for (r = 0; O > r; r++) s.faceVertexUvs[r] = []
                        }
                        for (h = 0, u = I.length; u > h;) w = new n.Vector3, w.x = I[h++] * e, w.y = I[h++] * e, w.z = I[h++] * e, s.vertices.push(w);
                        for (h = 0, u = k.length; u > h;)
                            if (f = k[h++], m = i(f, 0), g = i(f, 1), v = i(f, 3), y = i(f, 4), _ = i(f, 5), b = i(f, 6), x = i(f, 7), m) {
                                if (S = new n.Face3, S.a = k[h], S.b = k[h + 1], S.c = k[h + 3], T = new n.Face3, T.a = k[h + 1], T.b = k[h + 2], T.c = k[h + 3], h += 4, g && (d = k[h++], S.materialIndex = d, T.materialIndex = d), a = s.faces.length, v)
                                    for (r = 0; O > r; r++)
                                        for (C = t.uvs[r], s.faceVertexUvs[r][a] = [], s.faceVertexUvs[r][a + 1] = [], o = 0; 4 > o; o++) p = k[h++], L = C[2 * p], R = C[2 * p + 1], P = new n.Vector2(L, R), 2 !== o && s.faceVertexUvs[r][a].push(P), 0 !== o && s.faceVertexUvs[r][a + 1].push(P);
                                if (y && (l = 3 * k[h++], S.normal.set(D[l++], D[l++], D[l]), T.normal.copy(S.normal)), _)
                                    for (r = 0; 4 > r; r++) l = 3 * k[h++], E = new n.Vector3(D[l++], D[l++], D[l]), 2 !== r && S.vertexNormals.push(E), 0 !== r && T.vertexNormals.push(E);
                                if (b && (c = k[h++], A = B[c], S.color.setHex(A), T.color.setHex(A)), x)
                                    for (r = 0; 4 > r; r++) c = k[h++], A = B[c], 2 !== r && S.vertexColors.push(new n.Color(A)), 0 !== r && T.vertexColors.push(new n.Color(A));
                                s.faces.push(S), s.faces.push(T)
                            } else {
                                if (M = new n.Face3, M.a = k[h++], M.b = k[h++], M.c = k[h++], g && (d = k[h++], M.materialIndex = d), a = s.faces.length, v)
                                    for (r = 0; O > r; r++)
                                        for (C = t.uvs[r], s.faceVertexUvs[r][a] = [], o = 0; 3 > o; o++) p = k[h++], L = C[2 * p], R = C[2 * p + 1], P = new n.Vector2(L, R), s.faceVertexUvs[r][a].push(P);
                                if (y && (l = 3 * k[h++], M.normal.set(D[l++], D[l++], D[l])), _)
                                    for (r = 0; 3 > r; r++) l = 3 * k[h++], E = new n.Vector3(D[l++], D[l++], D[l]), M.vertexNormals.push(E);
                                if (b && (c = k[h++], M.color.setHex(B[c])), x)
                                    for (r = 0; 3 > r; r++) c = k[h++], M.vertexColors.push(new n.Color(B[c]));
                                s.faces.push(M)
                            }
                    }

                    function r() {
                        var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                        if (t.skinWeights)
                            for (var i = 0, r = t.skinWeights.length; r > i; i += e) {
                                var o = t.skinWeights[i],
                                    a = e > 1 ? t.skinWeights[i + 1] : 0,
                                    h = e > 2 ? t.skinWeights[i + 2] : 0,
                                    u = e > 3 ? t.skinWeights[i + 3] : 0;
                                s.skinWeights.push(new n.Vector4(o, a, h, u))
                            }
                        if (t.skinIndices)
                            for (var i = 0, r = t.skinIndices.length; r > i; i += e) {
                                var c = t.skinIndices[i],
                                    l = e > 1 ? t.skinIndices[i + 1] : 0,
                                    p = e > 2 ? t.skinIndices[i + 2] : 0,
                                    d = e > 3 ? t.skinIndices[i + 3] : 0;
                                s.skinIndices.push(new n.Vector4(c, l, p, d))
                            }
                        s.bones = t.bones, s.bones && s.bones.length > 0 && (s.skinWeights.length !== s.skinIndices.length || s.skinIndices.length !== s.vertices.length)
                    }

                    function o(e) {
                        if (void 0 !== t.morphTargets)
                            for (var i = 0, r = t.morphTargets.length; r > i; i++) {
                                s.morphTargets[i] = {}, s.morphTargets[i].name = t.morphTargets[i].name, s.morphTargets[i].vertices = [];
                                for (var o = s.morphTargets[i].vertices, a = t.morphTargets[i].vertices, h = 0, u = a.length; u > h; h += 3) {
                                    var c = new n.Vector3;
                                    c.x = a[h] * e, c.y = a[h + 1] * e, c.z = a[h + 2] * e, o.push(c)
                                }
                            }
                        if (void 0 !== t.morphColors && t.morphColors.length > 0)
                            for (var l = s.faces, p = t.morphColors[0].colors, i = 0, r = l.length; r > i; i++) l[i].color.fromArray(p, 3 * i)
                    }

                    function a() {
                        var e = [],
                            i = [];
                        void 0 !== t.animation && i.push(t.animation), void 0 !== t.animations && (t.animations.length ? i = i.concat(t.animations) : i.push(t.animations));
                        for (var r = 0; r < i.length; r++) {
                            var o = n.AnimationClip.parseAnimation(i[r], s.bones);
                            o && e.push(o)
                        }
                        if (s.morphTargets) {
                            var a = n.AnimationClip.CreateClipsFromMorphTargetSequences(s.morphTargets, 10);
                            e = e.concat(a)
                        }
                        e.length > 0 && (s.animations = e)
                    }
                    var s = new n.Geometry,
                        h = void 0 !== t.scale ? 1 / t.scale : 1;
                    if (i(h), r(), o(h), a(), s.computeFaceNormals(), s.computeBoundingSphere(), void 0 === t.materials || 0 === t.materials.length) return {
                        geometry: s
                    };
                    var u = n.Loader.prototype.initMaterials(t.materials, e, this.crossOrigin);
                    return {
                        geometry: s,
                        materials: u
                    }
                }
            }), n.LoadingManager = function(t, e, i) {
                var n = this,
                    r = !1,
                    o = 0,
                    a = 0;
                this.onStart = void 0, this.onLoad = t, this.onProgress = e, this.onError = i, this.itemStart = function(t) {
                    a++, r === !1 && void 0 !== n.onStart && n.onStart(t, o, a), r = !0
                }, this.itemEnd = function(t) {
                    o++, void 0 !== n.onProgress && n.onProgress(t, o, a), o === a && (r = !1, void 0 !== n.onLoad && n.onLoad())
                }, this.itemError = function(t) {
                    void 0 !== n.onError && n.onError(t)
                }
            }, n.DefaultLoadingManager = new n.LoadingManager, n.BufferGeometryLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.BufferGeometryLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = this,
                        a = new n.XHRLoader(o.manager);
                    a.load(t, function(t) {
                        e(o.parse(JSON.parse(t)))
                    }, i, r)
                },
                parse: function(t) {
                    var e = new n.BufferGeometry,
                        i = t.data.index,
                        r = {
                            Int8Array: Int8Array,
                            Uint8Array: Uint8Array,
                            Uint8ClampedArray: Uint8ClampedArray,
                            Int16Array: Int16Array,
                            Uint16Array: Uint16Array,
                            Int32Array: Int32Array,
                            Uint32Array: Uint32Array,
                            Float32Array: Float32Array,
                            Float64Array: Float64Array
                        };
                    if (void 0 !== i) {
                        var o = new r[i.type](i.array);
                        e.setIndex(new n.BufferAttribute(o, 1))
                    }
                    var a = t.data.attributes;
                    for (var s in a) {
                        var h = a[s],
                            o = new r[h.type](h.array);
                        e.addAttribute(s, new n.BufferAttribute(o, h.itemSize, h.normalized))
                    }
                    var u = t.data.groups || t.data.drawcalls || t.data.offsets;
                    if (void 0 !== u)
                        for (var c = 0, l = u.length; c !== l; ++c) {
                            var p = u[c];
                            e.addGroup(p.start, p.count, p.materialIndex)
                        }
                    var d = t.data.boundingSphere;
                    if (void 0 !== d) {
                        var f = new n.Vector3;
                        void 0 !== d.center && f.fromArray(d.center), e.boundingSphere = new n.Sphere(f, d.radius)
                    }
                    return e
                }
            }), n.MaterialLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager, this.textures = {}
            }, Object.assign(n.MaterialLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = this,
                        a = new n.XHRLoader(o.manager);
                    a.load(t, function(t) {
                        e(o.parse(JSON.parse(t)))
                    }, i, r)
                },
                setTextures: function(t) {
                    this.textures = t
                },
                getTexture: function(t) {
                    var e = this.textures;
                    return void 0 === e[t], e[t]
                },
                parse: function(t) {
                    var e = new n[t.type];
                    if (void 0 !== t.uuid && (e.uuid = t.uuid), void 0 !== t.name && (e.name = t.name), void 0 !== t.color && e.color.setHex(t.color), void 0 !== t.roughness && (e.roughness = t.roughness), void 0 !== t.metalness && (e.metalness = t.metalness), void 0 !== t.emissive && e.emissive.setHex(t.emissive), void 0 !== t.specular && e.specular.setHex(t.specular), void 0 !== t.shininess && (e.shininess = t.shininess), void 0 !== t.uniforms && (e.uniforms = t.uniforms), void 0 !== t.vertexShader && (e.vertexShader = t.vertexShader), void 0 !== t.fragmentShader && (e.fragmentShader = t.fragmentShader), void 0 !== t.vertexColors && (e.vertexColors = t.vertexColors), void 0 !== t.shading && (e.shading = t.shading), void 0 !== t.blending && (e.blending = t.blending), void 0 !== t.side && (e.side = t.side), void 0 !== t.opacity && (e.opacity = t.opacity), void 0 !== t.transparent && (e.transparent = t.transparent), void 0 !== t.alphaTest && (e.alphaTest = t.alphaTest), void 0 !== t.depthTest && (e.depthTest = t.depthTest), void 0 !== t.depthWrite && (e.depthWrite = t.depthWrite), void 0 !== t.colorWrite && (e.colorWrite = t.colorWrite), void 0 !== t.wireframe && (e.wireframe = t.wireframe), void 0 !== t.wireframeLinewidth && (e.wireframeLinewidth = t.wireframeLinewidth), void 0 !== t.size && (e.size = t.size), void 0 !== t.sizeAttenuation && (e.sizeAttenuation = t.sizeAttenuation), void 0 !== t.map && (e.map = this.getTexture(t.map)), void 0 !== t.alphaMap && (e.alphaMap = this.getTexture(t.alphaMap), e.transparent = !0), void 0 !== t.bumpMap && (e.bumpMap = this.getTexture(t.bumpMap)), void 0 !== t.bumpScale && (e.bumpScale = t.bumpScale), void 0 !== t.normalMap && (e.normalMap = this.getTexture(t.normalMap)), void 0 !== t.normalScale) {
                        var i = t.normalScale;
                        Array.isArray(i) === !1 && (i = [i, i]), e.normalScale = (new n.Vector2).fromArray(i)
                    }
                    if (void 0 !== t.displacementMap && (e.displacementMap = this.getTexture(t.displacementMap)), void 0 !== t.displacementScale && (e.displacementScale = t.displacementScale), void 0 !== t.displacementBias && (e.displacementBias = t.displacementBias), void 0 !== t.roughnessMap && (e.roughnessMap = this.getTexture(t.roughnessMap)), void 0 !== t.metalnessMap && (e.metalnessMap = this.getTexture(t.metalnessMap)), void 0 !== t.emissiveMap && (e.emissiveMap = this.getTexture(t.emissiveMap)), void 0 !== t.emissiveIntensity && (e.emissiveIntensity = t.emissiveIntensity), void 0 !== t.specularMap && (e.specularMap = this.getTexture(t.specularMap)), void 0 !== t.envMap && (e.envMap = this.getTexture(t.envMap), e.combine = n.MultiplyOperation), void 0 !== t.reflectivity && (e.reflectivity = t.reflectivity), void 0 !== t.lightMap && (e.lightMap = this.getTexture(t.lightMap)), void 0 !== t.lightMapIntensity && (e.lightMapIntensity = t.lightMapIntensity), void 0 !== t.aoMap && (e.aoMap = this.getTexture(t.aoMap)), void 0 !== t.aoMapIntensity && (e.aoMapIntensity = t.aoMapIntensity), void 0 !== t.materials)
                        for (var r = 0, o = t.materials.length; o > r; r++) e.materials.push(this.parse(t.materials[r]));
                    return e
                }
            }), n.ObjectLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager, this.texturePath = ""
            }, Object.assign(n.ObjectLoader.prototype, {
                load: function(t, e, i, r) {
                    "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                    var o = this,
                        a = new n.XHRLoader(o.manager);
                    a.load(t, function(t) {
                        o.parse(JSON.parse(t), e)
                    }, i, r)
                },
                setTexturePath: function(t) {
                    this.texturePath = t
                },
                setCrossOrigin: function(t) {
                    this.crossOrigin = t
                },
                parse: function(t, e) {
                    var i = this.parseGeometries(t.geometries),
                        n = this.parseImages(t.images, function() {
                            void 0 !== e && e(a)
                        }),
                        r = this.parseTextures(t.textures, n),
                        o = this.parseMaterials(t.materials, r),
                        a = this.parseObject(t.object, i, o);
                    return t.animations && (a.animations = this.parseAnimations(t.animations)), void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(a), a
                },
                parseGeometries: function(t) {
                    var e = {};
                    if (void 0 !== t)
                        for (var i = new n.JSONLoader, r = new n.BufferGeometryLoader, o = 0, a = t.length; a > o; o++) {
                            var s, h = t[o];
                            switch (h.type) {
                                case "PlaneGeometry":
                                case "PlaneBufferGeometry":
                                    s = new n[h.type](h.width, h.height, h.widthSegments, h.heightSegments);
                                    break;
                                case "BoxGeometry":
                                case "BoxBufferGeometry":
                                case "CubeGeometry":
                                    s = new n[h.type](h.width, h.height, h.depth, h.widthSegments, h.heightSegments, h.depthSegments);
                                    break;
                                case "CircleGeometry":
                                case "CircleBufferGeometry":
                                    s = new n[h.type](h.radius, h.segments, h.thetaStart, h.thetaLength);
                                    break;
                                case "CylinderGeometry":
                                case "CylinderBufferGeometry":
                                    s = new n[h.type](h.radiusTop, h.radiusBottom, h.height, h.radialSegments, h.heightSegments, h.openEnded, h.thetaStart, h.thetaLength);
                                    break;
                                case "ConeGeometry":
                                case "ConeBufferGeometry":
                                    s = new n[h.type](h.radius, h.height, h.radialSegments, h.heightSegments, h.openEnded, h.thetaStart, h.thetaLength);
                                    break;
                                case "SphereGeometry":
                                case "SphereBufferGeometry":
                                    s = new n[h.type](h.radius, h.widthSegments, h.heightSegments, h.phiStart, h.phiLength, h.thetaStart, h.thetaLength);
                                    break;
                                case "DodecahedronGeometry":
                                case "IcosahedronGeometry":
                                case "OctahedronGeometry":
                                case "TetrahedronGeometry":
                                    s = new n[h.type](h.radius, h.detail);
                                    break;
                                case "RingGeometry":
                                case "RingBufferGeometry":
                                    s = new n[h.type](h.innerRadius, h.outerRadius, h.thetaSegments, h.phiSegments, h.thetaStart, h.thetaLength);
                                    break;
                                case "TorusGeometry":
                                case "TorusBufferGeometry":
                                    s = new n[h.type](h.radius, h.tube, h.radialSegments, h.tubularSegments, h.arc);
                                    break;
                                case "TorusKnotGeometry":
                                case "TorusKnotBufferGeometry":
                                    s = new n[h.type](h.radius, h.tube, h.tubularSegments, h.radialSegments, h.p, h.q);
                                    break;
                                case "LatheGeometry":
                                case "LatheBufferGeometry":
                                    s = new n[h.type](h.points, h.segments, h.phiStart, h.phiLength);
                                    break;
                                case "BufferGeometry":
                                    s = r.parse(h);
                                    break;
                                case "Geometry":
                                    s = i.parse(h.data, this.texturePath).geometry;
                                    break;
                                default:
                                    continue
                            }
                            s.uuid = h.uuid, void 0 !== h.name && (s.name = h.name), e[h.uuid] = s
                        }
                    return e
                },
                parseMaterials: function(t, e) {
                    var i = {};
                    if (void 0 !== t) {
                        var r = new n.MaterialLoader;
                        r.setTextures(e);
                        for (var o = 0, a = t.length; a > o; o++) {
                            var s = r.parse(t[o]);
                            i[s.uuid] = s
                        }
                    }
                    return i
                },
                parseAnimations: function(t) {
                    for (var e = [], i = 0; i < t.length; i++) {
                        var r = n.AnimationClip.parse(t[i]);
                        e.push(r)
                    }
                    return e
                },
                parseImages: function(t, e) {
                    function i(t) {
                        return r.manager.itemStart(t), s.load(t, function() {
                            r.manager.itemEnd(t)
                        })
                    }
                    var r = this,
                        o = {};
                    if (void 0 !== t && t.length > 0) {
                        var a = new n.LoadingManager(e),
                            s = new n.ImageLoader(a);
                        s.setCrossOrigin(this.crossOrigin);
                        for (var h = 0, u = t.length; u > h; h++) {
                            var c = t[h],
                                l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : r.texturePath + c.url;
                            o[c.uuid] = i(l)
                        }
                    }
                    return o
                },
                parseTextures: function(t, e) {
                    function i(t) {
                        return "number" == typeof t ? t : n[t]
                    }
                    var r = {};
                    if (void 0 !== t)
                        for (var o = 0, a = t.length; a > o; o++) {
                            var s = t[o];
                            void 0 === s.image, void 0 === e[s.image];
                            var h = new n.Texture(e[s.image]);
                            h.needsUpdate = !0, h.uuid = s.uuid, void 0 !== s.name && (h.name = s.name), void 0 !== s.mapping && (h.mapping = i(s.mapping)), void 0 !== s.offset && (h.offset = new n.Vector2(s.offset[0], s.offset[1])), void 0 !== s.repeat && (h.repeat = new n.Vector2(s.repeat[0], s.repeat[1])), void 0 !== s.minFilter && (h.minFilter = i(s.minFilter)), void 0 !== s.magFilter && (h.magFilter = i(s.magFilter)), void 0 !== s.anisotropy && (h.anisotropy = s.anisotropy), Array.isArray(s.wrap) && (h.wrapS = i(s.wrap[0]), h.wrapT = i(s.wrap[1])), r[s.uuid] = h
                        }
                    return r
                },
                parseObject: function() {
                    var t = new n.Matrix4;
                    return function(e, i, r) {
                        function o(t) {
                            return void 0 === i[t], i[t]
                        }

                        function a(t) {
                            return void 0 !== t ? (void 0 === r[t], r[t]) : void 0
                        }
                        var s;
                        switch (e.type) {
                            case "Scene":
                                s = new n.Scene;
                                break;
                            case "PerspectiveCamera":
                                s = new n.PerspectiveCamera(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (s.focus = e.focus), void 0 !== e.zoom && (s.zoom = e.zoom), void 0 !== e.filmGauge && (s.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (s.filmOffset = e.filmOffset), void 0 !== e.view && (s.view = Object.assign({}, e.view));
                                break;
                            case "OrthographicCamera":
                                s = new n.OrthographicCamera(e.left, e.right, e.top, e.bottom, e.near, e.far);
                                break;
                            case "AmbientLight":
                                s = new n.AmbientLight(e.color, e.intensity);
                                break;
                            case "DirectionalLight":
                                s = new n.DirectionalLight(e.color, e.intensity);
                                break;
                            case "PointLight":
                                s = new n.PointLight(e.color, e.intensity, e.distance, e.decay);
                                break;
                            case "SpotLight":
                                s = new n.SpotLight(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                                break;
                            case "HemisphereLight":
                                s = new n.HemisphereLight(e.color, e.groundColor, e.intensity);
                                break;
                            case "Mesh":
                                var h = o(e.geometry),
                                    u = a(e.material);
                                s = h.bones && h.bones.length > 0 ? new n.SkinnedMesh(h, u) : new n.Mesh(h, u);
                                break;
                            case "LOD":
                                s = new n.LOD;
                                break;
                            case "Line":
                                s = new n.Line(o(e.geometry), a(e.material), e.mode);
                                break;
                            case "PointCloud":
                            case "Points":
                                s = new n.Points(o(e.geometry), a(e.material));
                                break;
                            case "Sprite":
                                s = new n.Sprite(a(e.material));
                                break;
                            case "Group":
                                s = new n.Group;
                                break;
                            default:
                                s = new n.Object3D
                        }
                        if (s.uuid = e.uuid, void 0 !== e.name && (s.name = e.name), void 0 !== e.matrix ? (t.fromArray(e.matrix), t.decompose(s.position, s.quaternion, s.scale)) : (void 0 !== e.position && s.position.fromArray(e.position), void 0 !== e.rotation && s.rotation.fromArray(e.rotation), void 0 !== e.scale && s.scale.fromArray(e.scale)), void 0 !== e.castShadow && (s.castShadow = e.castShadow), void 0 !== e.receiveShadow && (s.receiveShadow = e.receiveShadow), void 0 !== e.visible && (s.visible = e.visible), void 0 !== e.userData && (s.userData = e.userData), void 0 !== e.children)
                            for (var c in e.children) s.add(this.parseObject(e.children[c], i, r));
                        if ("LOD" === e.type)
                            for (var l = e.levels, p = 0; p < l.length; p++) {
                                var d = l[p],
                                    c = s.getObjectByProperty("uuid", d.object);
                                void 0 !== c && s.addLevel(c, d.distance)
                            }
                        return s
                    }
                }()
            }), n.TextureLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.TextureLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = new n.Texture,
                        a = new n.ImageLoader(this.manager);
                    return a.setCrossOrigin(this.crossOrigin), a.setPath(this.path), a.load(t, function(t) {
                        o.image = t, o.needsUpdate = !0, void 0 !== e && e(o)
                    }, i, r), o
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t, this
                },
                setPath: function(t) {
                    return this.path = t, this
                }
            }), n.CubeTextureLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager
            }, Object.assign(n.CubeTextureLoader.prototype, {
                load: function(t, e, i, r) {
                    function o(i) {
                        s.load(t[i], function(t) {
                            a.images[i] = t, h++, 6 === h && (a.needsUpdate = !0, e && e(a))
                        }, void 0, r)
                    }
                    var a = new n.CubeTexture,
                        s = new n.ImageLoader(this.manager);
                    s.setCrossOrigin(this.crossOrigin), s.setPath(this.path);
                    for (var h = 0, u = 0; u < t.length; ++u) o(u);
                    return a
                },
                setCrossOrigin: function(t) {
                    return this.crossOrigin = t, this
                },
                setPath: function(t) {
                    return this.path = t, this
                }
            }), n.DataTextureLoader = n.BinaryTextureLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager, this._parser = null
            }, Object.assign(n.BinaryTextureLoader.prototype, {
                load: function(t, e, i, r) {
                    var o = this,
                        a = new n.DataTexture,
                        s = new n.XHRLoader(this.manager);
                    return s.setResponseType("arraybuffer"), s.load(t, function(t) {
                        var i = o._parser(t);
                        i && (void 0 !== i.image ? a.image = i.image : void 0 !== i.data && (a.image.width = i.width, a.image.height = i.height, a.image.data = i.data), a.wrapS = void 0 !== i.wrapS ? i.wrapS : n.ClampToEdgeWrapping, a.wrapT = void 0 !== i.wrapT ? i.wrapT : n.ClampToEdgeWrapping, a.magFilter = void 0 !== i.magFilter ? i.magFilter : n.LinearFilter, a.minFilter = void 0 !== i.minFilter ? i.minFilter : n.LinearMipMapLinearFilter, a.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1, void 0 !== i.format && (a.format = i.format), void 0 !== i.type && (a.type = i.type), void 0 !== i.mipmaps && (a.mipmaps = i.mipmaps), 1 === i.mipmapCount && (a.minFilter = n.LinearFilter), a.needsUpdate = !0, e && e(a, i))
                    }, i, r), a
                }
            }), n.CompressedTextureLoader = function(t) {
                this.manager = void 0 !== t ? t : n.DefaultLoadingManager, this._parser = null
            }, Object.assign(n.CompressedTextureLoader.prototype, {
                load: function(t, e, i, r) {
                    function o(o) {
                        u.load(t[o], function(t) {
                            var i = a._parser(t, !0);
                            s[o] = {
                                width: i.width,
                                height: i.height,
                                format: i.format,
                                mipmaps: i.mipmaps
                            }, c += 1, 6 === c && (1 === i.mipmapCount && (h.minFilter = n.LinearFilter), h.format = i.format, h.needsUpdate = !0, e && e(h))
                        }, i, r)
                    }
                    var a = this,
                        s = [],
                        h = new n.CompressedTexture;
                    h.image = s;
                    var u = new n.XHRLoader(this.manager);
                    if (u.setPath(this.path), u.setResponseType("arraybuffer"), Array.isArray(t))
                        for (var c = 0, l = 0, p = t.length; p > l; ++l) o(l);
                    else u.load(t, function(t) {
                        var i = a._parser(t, !0);
                        if (i.isCubemap)
                            for (var r = i.mipmaps.length / i.mipmapCount, o = 0; r > o; o++) {
                                s[o] = {
                                    mipmaps: []
                                };
                                for (var u = 0; u < i.mipmapCount; u++) s[o].mipmaps.push(i.mipmaps[o * i.mipmapCount + u]), s[o].format = i.format, s[o].width = i.width, s[o].height = i.height
                            } else h.image.width = i.width, h.image.height = i.height, h.mipmaps = i.mipmaps;
                        1 === i.mipmapCount && (h.minFilter = n.LinearFilter), h.format = i.format, h.needsUpdate = !0, e && e(h)
                    }, i, r);
                    return h
                },
                setPath: function(t) {
                    return this.path = t, this
                }
            }), n.Material = function() {
                Object.defineProperty(this, "id", {
                    value: n.MaterialIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = n.NormalBlending, this.side = n.FrontSide, this.shading = n.SmoothShading, this.vertexColors = n.NoColors, this.opacity = 1, this.transparent = !1, this.blendSrc = n.SrcAlphaFactor, this.blendDst = n.OneMinusSrcAlphaFactor, this.blendEquation = n.AddEquation, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = n.LessEqualDepth, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipShadows = !1, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this._needsUpdate = !0
            }, n.Material.prototype = {
                constructor: n.Material,
                get needsUpdate() {
                    return this._needsUpdate
                },
                set needsUpdate(t) {
                    t === !0 && this.update(), this._needsUpdate = t
                },
                setValues: function(t) {
                    if (void 0 !== t)
                        for (var e in t) {
                            var i = t[e];
                            if (void 0 !== i) {
                                var r = this[e];
                                void 0 !== r && (r instanceof n.Color ? r.set(i) : r instanceof n.Vector3 && i instanceof n.Vector3 ? r.copy(i) : "overdraw" === e ? this[e] = Number(i) : this[e] = i)
                            }
                        }
                },
                toJSON: function(t) {
                    function e(t) {
                        var e = [];
                        for (var i in t) {
                            var n = t[i];
                            delete n.metadata, e.push(n)
                        }
                        return e
                    }
                    var i = void 0 === t;
                    i && (t = {
                        textures: {},
                        images: {}
                    });
                    var r = {
                        metadata: {
                            version: 4.4,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), this.color instanceof n.Color && (r.color = this.color.getHex()), void 0 !== this.roughness && (r.roughness = this.roughness), void 0 !== this.metalness && (r.metalness = this.metalness), this.emissive instanceof n.Color && (r.emissive = this.emissive.getHex()), this.specular instanceof n.Color && (r.specular = this.specular.getHex()), void 0 !== this.shininess && (r.shininess = this.shininess), this.map instanceof n.Texture && (r.map = this.map.toJSON(t).uuid), this.alphaMap instanceof n.Texture && (r.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap instanceof n.Texture && (r.lightMap = this.lightMap.toJSON(t).uuid), this.bumpMap instanceof n.Texture && (r.bumpMap = this.bumpMap.toJSON(t).uuid, r.bumpScale = this.bumpScale), this.normalMap instanceof n.Texture && (r.normalMap = this.normalMap.toJSON(t).uuid, r.normalScale = this.normalScale.toArray()), this.displacementMap instanceof n.Texture && (r.displacementMap = this.displacementMap.toJSON(t).uuid, r.displacementScale = this.displacementScale, r.displacementBias = this.displacementBias), this.roughnessMap instanceof n.Texture && (r.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap instanceof n.Texture && (r.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap instanceof n.Texture && (r.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap instanceof n.Texture && (r.specularMap = this.specularMap.toJSON(t).uuid), this.envMap instanceof n.Texture && (r.envMap = this.envMap.toJSON(t).uuid, r.reflectivity = this.reflectivity), void 0 !== this.size && (r.size = this.size), void 0 !== this.sizeAttenuation && (r.sizeAttenuation = this.sizeAttenuation), this.blending !== n.NormalBlending && (r.blending = this.blending), this.shading !== n.SmoothShading && (r.shading = this.shading), this.side !== n.FrontSide && (r.side = this.side), this.vertexColors !== n.NoColors && (r.vertexColors = this.vertexColors), this.opacity < 1 && (r.opacity = this.opacity), this.transparent === !0 && (r.transparent = this.transparent), this.alphaTest > 0 && (r.alphaTest = this.alphaTest), this.premultipliedAlpha === !0 && (r.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (r.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth), i) {
                        var o = e(t.textures),
                            a = e(t.images);
                        o.length > 0 && (r.textures = o), a.length > 0 && (r.images = a)
                    }
                    return r
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    this.name = t.name, this.fog = t.fog, this.lights = t.lights, this.blending = t.blending, this.side = t.side, this.shading = t.shading, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.alphaTest = t.alphaTest, this.premultipliedAlpha = t.premultipliedAlpha, this.overdraw = t.overdraw, this.visible = t.visible, this.clipShadows = t.clipShadows;
                    var e = t.clippingPlanes,
                        i = null;
                    if (null !== e) {
                        var n = e.length;
                        i = new Array(n);
                        for (var r = 0; r !== n; ++r) i[r] = e[r].clone()
                    }
                    return this.clippingPlanes = i,
                        this
                },
                update: function() {
                    this.dispatchEvent({
                        type: "update"
                    })
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }, Object.assign(n.Material.prototype, n.EventDispatcher.prototype), n.MaterialIdCount = 0, n.LineBasicMaterial = function(t) {
                n.Material.call(this), this.type = "LineBasicMaterial", this.color = new n.Color(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(t)
            }, n.LineBasicMaterial.prototype = Object.create(n.Material.prototype), n.LineBasicMaterial.prototype.constructor = n.LineBasicMaterial, n.LineBasicMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.linecap = t.linecap, this.linejoin = t.linejoin, this
            }, n.LineDashedMaterial = function(t) {
                n.Material.call(this), this.type = "LineDashedMaterial", this.color = new n.Color(16777215), this.linewidth = 1, this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.lights = !1, this.setValues(t)
            }, n.LineDashedMaterial.prototype = Object.create(n.Material.prototype), n.LineDashedMaterial.prototype.constructor = n.LineDashedMaterial, n.LineDashedMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.scale = t.scale, this.dashSize = t.dashSize, this.gapSize = t.gapSize, this
            }, n.MeshBasicMaterial = function(t) {
                n.Material.call(this), this.type = "MeshBasicMaterial", this.color = new n.Color(16777215), this.map = null, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = n.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(t)
            }, n.MeshBasicMaterial.prototype = Object.create(n.Material.prototype), n.MeshBasicMaterial.prototype.constructor = n.MeshBasicMaterial, n.MeshBasicMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this
            }, n.MeshDepthMaterial = function(t) {
                n.Material.call(this), this.type = "MeshDepthMaterial", this.depthPacking = n.BasicDepthPacking, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(t)
            }, n.MeshDepthMaterial.prototype = Object.create(n.Material.prototype), n.MeshDepthMaterial.prototype.constructor = n.MeshDepthMaterial, n.MeshDepthMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.depthPacking = t.depthPacking, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this
            }, n.MeshLambertMaterial = function(t) {
                n.Material.call(this), this.type = "MeshLambertMaterial", this.color = new n.Color(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new n.Color(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = n.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
            }, n.MeshLambertMaterial.prototype = Object.create(n.Material.prototype), n.MeshLambertMaterial.prototype.constructor = n.MeshLambertMaterial, n.MeshLambertMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
            }, n.MeshNormalMaterial = function(t) {
                n.Material.call(this, t), this.type = "MeshNormalMaterial", this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.morphTargets = !1, this.setValues(t)
            }, n.MeshNormalMaterial.prototype = Object.create(n.Material.prototype), n.MeshNormalMaterial.prototype.constructor = n.MeshNormalMaterial, n.MeshNormalMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this
            }, n.MeshPhongMaterial = function(t) {
                n.Material.call(this), this.type = "MeshPhongMaterial", this.color = new n.Color(16777215), this.specular = new n.Color(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new n.Color(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new n.Vector2(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = n.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
            }, n.MeshPhongMaterial.prototype = Object.create(n.Material.prototype), n.MeshPhongMaterial.prototype.constructor = n.MeshPhongMaterial, n.MeshPhongMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
            }, n.MeshStandardMaterial = function(t) {
                n.Material.call(this), this.defines = {
                    STANDARD: ""
                }, this.type = "MeshStandardMaterial", this.color = new n.Color(16777215), this.roughness = .5, this.metalness = .5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new n.Color(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new n.Vector2(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
            }, n.MeshStandardMaterial.prototype = Object.create(n.Material.prototype), n.MeshStandardMaterial.prototype.constructor = n.MeshStandardMaterial, n.MeshStandardMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.defines = {
                    STANDARD: ""
                }, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
            }, n.MeshPhysicalMaterial = function(t) {
                n.MeshStandardMaterial.call(this), this.defines = {
                    PHYSICAL: ""
                }, this.type = "MeshPhysicalMaterial", this.reflectivity = .5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(t)
            }, n.MeshPhysicalMaterial.prototype = Object.create(n.MeshStandardMaterial.prototype), n.MeshPhysicalMaterial.prototype.constructor = n.MeshPhysicalMaterial, n.MeshPhysicalMaterial.prototype.copy = function(t) {
                return n.MeshStandardMaterial.prototype.copy.call(this, t), this.defines = {
                    PHYSICAL: ""
                }, this.reflectivity = t.reflectivity, this.clearCoat = t.clearCoat, this.clearCoatRoughness = t.clearCoatRoughness, this
            }, n.MultiMaterial = function(t) {
                this.uuid = n.Math.generateUUID(), this.type = "MultiMaterial", this.materials = t instanceof Array ? t : [], this.visible = !0
            }, n.MultiMaterial.prototype = {
                constructor: n.MultiMaterial,
                toJSON: function(t) {
                    for (var e = {
                            metadata: {
                                version: 4.2,
                                type: "material",
                                generator: "MaterialExporter"
                            },
                            uuid: this.uuid,
                            type: this.type,
                            materials: []
                        }, i = this.materials, n = 0, r = i.length; r > n; n++) {
                        var o = i[n].toJSON(t);
                        delete o.metadata, e.materials.push(o)
                    }
                    return e.visible = this.visible, e
                },
                clone: function() {
                    for (var t = new this.constructor, e = 0; e < this.materials.length; e++) t.materials.push(this.materials[e].clone());
                    return t.visible = this.visible, t
                }
            }, n.PointsMaterial = function(t) {
                n.Material.call(this), this.type = "PointsMaterial", this.color = new n.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.lights = !1, this.setValues(t)
            }, n.PointsMaterial.prototype = Object.create(n.Material.prototype), n.PointsMaterial.prototype.constructor = n.PointsMaterial, n.PointsMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.size = t.size, this.sizeAttenuation = t.sizeAttenuation, this
            }, n.ShaderMaterial = function(t) {
                n.Material.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                }, this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                }, this.index0AttributeName = void 0, void 0 !== t && (void 0 !== t.attributes, this.setValues(t))
            }, n.ShaderMaterial.prototype = Object.create(n.Material.prototype), n.ShaderMaterial.prototype.constructor = n.ShaderMaterial, n.ShaderMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = n.UniformsUtils.clone(t.uniforms), this.defines = t.defines, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.lights = t.lights, this.clipping = t.clipping, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this.extensions = t.extensions, this
            }, n.ShaderMaterial.prototype.toJSON = function(t) {
                var e = n.Material.prototype.toJSON.call(this, t);
                return e.uniforms = this.uniforms, e.vertexShader = this.vertexShader, e.fragmentShader = this.fragmentShader, e
            }, n.RawShaderMaterial = function(t) {
                n.ShaderMaterial.call(this, t), this.type = "RawShaderMaterial"
            }, n.RawShaderMaterial.prototype = Object.create(n.ShaderMaterial.prototype), n.RawShaderMaterial.prototype.constructor = n.RawShaderMaterial, n.SpriteMaterial = function(t) {
                n.Material.call(this), this.type = "SpriteMaterial", this.color = new n.Color(16777215), this.map = null, this.rotation = 0, this.fog = !1, this.lights = !1, this.setValues(t)
            }, n.SpriteMaterial.prototype = Object.create(n.Material.prototype), n.SpriteMaterial.prototype.constructor = n.SpriteMaterial, n.SpriteMaterial.prototype.copy = function(t) {
                return n.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.rotation = t.rotation, this
            }, n.ShadowMaterial = function() {
                n.ShaderMaterial.call(this, {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.lights, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: n.ShaderChunk.shadow_vert,
                    fragmentShader: n.ShaderChunk.shadow_frag
                }), this.lights = !0, this.transparent = !0, Object.defineProperties(this, {
                    opacity: {
                        enumerable: !0,
                        get: function() {
                            return this.uniforms.opacity.value
                        },
                        set: function(t) {
                            this.uniforms.opacity.value = t
                        }
                    }
                })
            }, n.ShadowMaterial.prototype = Object.create(n.ShaderMaterial.prototype), n.ShadowMaterial.prototype.constructor = n.ShadowMaterial, n.Texture = function(t, e, i, r, o, a, s, h, u, c) {
                Object.defineProperty(this, "id", {
                    value: n.TextureIdCount++
                }), this.uuid = n.Math.generateUUID(), this.name = "", this.sourceFile = "", this.image = void 0 !== t ? t : n.Texture.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== e ? e : n.Texture.DEFAULT_MAPPING, this.wrapS = void 0 !== i ? i : n.ClampToEdgeWrapping, this.wrapT = void 0 !== r ? r : n.ClampToEdgeWrapping, this.magFilter = void 0 !== o ? o : n.LinearFilter, this.minFilter = void 0 !== a ? a : n.LinearMipMapLinearFilter, this.anisotropy = void 0 !== u ? u : 1, this.format = void 0 !== s ? s : n.RGBAFormat, this.type = void 0 !== h ? h : n.UnsignedByteType, this.offset = new n.Vector2(0, 0), this.repeat = new n.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== c ? c : n.LinearEncoding, this.version = 0, this.onUpdate = null
            }, n.Texture.DEFAULT_IMAGE = void 0, n.Texture.DEFAULT_MAPPING = n.UVMapping, n.Texture.prototype = {
                constructor: n.Texture,
                set needsUpdate(t) {
                    t === !0 && this.version++
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.image = t.image, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this
                },
                toJSON: function(t) {
                    function e(t) {
                        var e;
                        return void 0 !== t.toDataURL ? e = t : (e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), e.width = t.width, e.height = t.height, e.getContext("2d").drawImage(t, 0, 0, t.width, t.height)), e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                    }
                    if (void 0 !== t.textures[this.uuid]) return t.textures[this.uuid];
                    var i = {
                        metadata: {
                            version: 4.4,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        wrap: [this.wrapS, this.wrapT],
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy
                    };
                    if (void 0 !== this.image) {
                        var r = this.image;
                        void 0 === r.uuid && (r.uuid = n.Math.generateUUID()), void 0 === t.images[r.uuid] && (t.images[r.uuid] = {
                            uuid: r.uuid,
                            url: e(r)
                        }), i.image = r.uuid
                    }
                    return t.textures[this.uuid] = i, i
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function(t) {
                    if (this.mapping === n.UVMapping) {
                        if (t.multiply(this.repeat), t.add(this.offset), t.x < 0 || t.x > 1) switch (this.wrapS) {
                            case n.RepeatWrapping:
                                t.x = t.x - Math.floor(t.x);
                                break;
                            case n.ClampToEdgeWrapping:
                                t.x = t.x < 0 ? 0 : 1;
                                break;
                            case n.MirroredRepeatWrapping:
                                1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                        }
                        if (t.y < 0 || t.y > 1) switch (this.wrapT) {
                            case n.RepeatWrapping:
                                t.y = t.y - Math.floor(t.y);
                                break;
                            case n.ClampToEdgeWrapping:
                                t.y = t.y < 0 ? 0 : 1;
                                break;
                            case n.MirroredRepeatWrapping:
                                1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                        }
                        this.flipY && (t.y = 1 - t.y)
                    }
                }
            }, Object.assign(n.Texture.prototype, n.EventDispatcher.prototype), n.TextureIdCount = 0, n.DepthTexture = function(t, e, i, r, o, a, s, h, u) {
                n.Texture.call(this, null, r, o, a, s, h, n.DepthFormat, i, u), this.image = {
                    width: t,
                    height: e
                }, this.type = void 0 !== i ? i : n.UnsignedShortType, this.magFilter = void 0 !== s ? s : n.NearestFilter, this.minFilter = void 0 !== h ? h : n.NearestFilter, this.flipY = !1, this.generateMipmaps = !1
            }, n.DepthTexture.prototype = Object.create(n.Texture.prototype), n.DepthTexture.prototype.constructor = n.DepthTexture, n.CanvasTexture = function(t, e, i, r, o, a, s, h, u) {
                n.Texture.call(this, t, e, i, r, o, a, s, h, u), this.needsUpdate = !0
            }, n.CanvasTexture.prototype = Object.create(n.Texture.prototype), n.CanvasTexture.prototype.constructor = n.CanvasTexture, n.CubeTexture = function(t, e, i, r, o, a, s, h, u, c) {
                t = void 0 !== t ? t : [], e = void 0 !== e ? e : n.CubeReflectionMapping, n.Texture.call(this, t, e, i, r, o, a, s, h, u, c), this.flipY = !1
            }, n.CubeTexture.prototype = Object.create(n.Texture.prototype), n.CubeTexture.prototype.constructor = n.CubeTexture, Object.defineProperty(n.CubeTexture.prototype, "images", {
                get: function() {
                    return this.image
                },
                set: function(t) {
                    this.image = t
                }
            }), n.CompressedTexture = function(t, e, i, r, o, a, s, h, u, c, l, p) {
                n.Texture.call(this, null, a, s, h, u, c, r, o, l, p), this.image = {
                    width: e,
                    height: i
                }, this.mipmaps = t, this.flipY = !1, this.generateMipmaps = !1
            }, n.CompressedTexture.prototype = Object.create(n.Texture.prototype), n.CompressedTexture.prototype.constructor = n.CompressedTexture, n.DataTexture = function(t, e, i, r, o, a, s, h, u, c, l, p) {
                n.Texture.call(this, null, a, s, h, u, c, r, o, l, p), this.image = {
                    data: t,
                    width: e,
                    height: i
                }, this.magFilter = void 0 !== u ? u : n.NearestFilter, this.minFilter = void 0 !== c ? c : n.NearestFilter, this.flipY = !1, this.generateMipmaps = !1
            }, n.DataTexture.prototype = Object.create(n.Texture.prototype), n.DataTexture.prototype.constructor = n.DataTexture, n.VideoTexture = function(t, e, i, r, o, a, s, h, u) {
                function c() {
                    requestAnimationFrame(c), t.readyState >= t.HAVE_CURRENT_DATA && (l.needsUpdate = !0)
                }
                n.Texture.call(this, t, e, i, r, o, a, s, h, u), this.generateMipmaps = !1;
                var l = this;
                c()
            }, n.VideoTexture.prototype = Object.create(n.Texture.prototype), n.VideoTexture.prototype.constructor = n.VideoTexture, n.Group = function() {
                n.Object3D.call(this), this.type = "Group"
            }, n.Group.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Group
            }), n.Points = function(t, e) {
                n.Object3D.call(this), this.type = "Points", this.geometry = void 0 !== t ? t : new n.BufferGeometry, this.material = void 0 !== e ? e : new n.PointsMaterial({
                    color: 16777215 * Math.random()
                })
            }, n.Points.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Points,
                raycast: function() {
                    var t = new n.Matrix4,
                        e = new n.Ray,
                        i = new n.Sphere;
                    return function(r, o) {
                        function a(t, i) {
                            var n = e.distanceSqToPoint(t);
                            if (p > n) {
                                var a = e.closestPointToPoint(t);
                                a.applyMatrix4(u);
                                var h = r.ray.origin.distanceTo(a);
                                if (h < r.near || h > r.far) return;
                                o.push({
                                    distance: h,
                                    distanceToRay: Math.sqrt(n),
                                    point: a.clone(),
                                    index: i,
                                    face: null,
                                    object: s
                                })
                            }
                        }
                        var s = this,
                            h = this.geometry,
                            u = this.matrixWorld,
                            c = r.params.Points.threshold;
                        if (null === h.boundingSphere && h.computeBoundingSphere(), i.copy(h.boundingSphere), i.applyMatrix4(u), r.ray.intersectsSphere(i) !== !1) {
                            t.getInverse(u), e.copy(r.ray).applyMatrix4(t);
                            var l = c / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                p = l * l,
                                d = new n.Vector3;
                            if (h instanceof n.BufferGeometry) {
                                var f = h.index,
                                    m = h.attributes,
                                    g = m.position.array;
                                if (null !== f)
                                    for (var v = f.array, y = 0, _ = v.length; _ > y; y++) {
                                        var b = v[y];
                                        d.fromArray(g, 3 * b), a(d, b)
                                    } else
                                        for (var y = 0, x = g.length / 3; x > y; y++) d.fromArray(g, 3 * y), a(d, y)
                            } else
                                for (var w = h.vertices, y = 0, x = w.length; x > y; y++) a(w[y], y)
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            }), n.Line = function(t, e, i) {
                return 1 === i ? new n.LineSegments(t, e) : (n.Object3D.call(this), this.type = "Line", this.geometry = void 0 !== t ? t : new n.BufferGeometry, void(this.material = void 0 !== e ? e : new n.LineBasicMaterial({
                    color: 16777215 * Math.random()
                })))
            }, n.Line.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Line,
                raycast: function() {
                    var t = new n.Matrix4,
                        e = new n.Ray,
                        i = new n.Sphere;
                    return function(r, o) {
                        var a = r.linePrecision,
                            s = a * a,
                            h = this.geometry,
                            u = this.matrixWorld;
                        if (null === h.boundingSphere && h.computeBoundingSphere(), i.copy(h.boundingSphere), i.applyMatrix4(u), r.ray.intersectsSphere(i) !== !1) {
                            t.getInverse(u), e.copy(r.ray).applyMatrix4(t);
                            var c = new n.Vector3,
                                l = new n.Vector3,
                                p = new n.Vector3,
                                d = new n.Vector3,
                                f = this instanceof n.LineSegments ? 2 : 1;
                            if (h instanceof n.BufferGeometry) {
                                var m = h.index,
                                    g = h.attributes,
                                    v = g.position.array;
                                if (null !== m)
                                    for (var y = m.array, _ = 0, b = y.length - 1; b > _; _ += f) {
                                        var x = y[_],
                                            w = y[_ + 1];
                                        c.fromArray(v, 3 * x), l.fromArray(v, 3 * w);
                                        var M = e.distanceSqToSegment(c, l, d, p);
                                        if (!(M > s)) {
                                            d.applyMatrix4(this.matrixWorld);
                                            var S = r.ray.origin.distanceTo(d);
                                            S < r.near || S > r.far || o.push({
                                                distance: S,
                                                point: p.clone().applyMatrix4(this.matrixWorld),
                                                index: _,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    } else
                                        for (var _ = 0, b = v.length / 3 - 1; b > _; _ += f) {
                                            c.fromArray(v, 3 * _), l.fromArray(v, 3 * _ + 3);
                                            var M = e.distanceSqToSegment(c, l, d, p);
                                            if (!(M > s)) {
                                                d.applyMatrix4(this.matrixWorld);
                                                var S = r.ray.origin.distanceTo(d);
                                                S < r.near || S > r.far || o.push({
                                                    distance: S,
                                                    point: p.clone().applyMatrix4(this.matrixWorld),
                                                    index: _,
                                                    face: null,
                                                    faceIndex: null,
                                                    object: this
                                                })
                                            }
                                        }
                            } else if (h instanceof n.Geometry)
                                for (var T = h.vertices, A = T.length, _ = 0; A - 1 > _; _ += f) {
                                    var M = e.distanceSqToSegment(T[_], T[_ + 1], d, p);
                                    if (!(M > s)) {
                                        d.applyMatrix4(this.matrixWorld);
                                        var S = r.ray.origin.distanceTo(d);
                                        S < r.near || S > r.far || o.push({
                                            distance: S,
                                            point: p.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            }), n.LineSegments = function(t, e) {
                n.Line.call(this, t, e), this.type = "LineSegments"
            }, n.LineSegments.prototype = Object.assign(Object.create(n.Line.prototype), {
                constructor: n.LineSegments
            }), n.Mesh = function(t, e) {
                n.Object3D.call(this), this.type = "Mesh", this.geometry = void 0 !== t ? t : new n.BufferGeometry, this.material = void 0 !== e ? e : new n.MeshBasicMaterial({
                    color: 16777215 * Math.random()
                }), this.drawMode = n.TrianglesDrawMode, this.updateMorphTargets()
            }, n.Mesh.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Mesh,
                setDrawMode: function(t) {
                    this.drawMode = t
                },
                copy: function(t) {
                    return n.Object3D.prototype.copy.call(this, t), this.drawMode = t.drawMode, this
                },
                updateMorphTargets: function() {
                    if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
                        this.morphTargetBase = -1, this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                        for (var t = 0, e = this.geometry.morphTargets.length; e > t; t++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[t].name] = t
                    }
                },
                getMorphTargetIndexByName: function(t) {
                    return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : 0
                },
                raycast: function() {
                    function t(t, e, i, r, o, a, s) {
                        return n.Triangle.barycoordFromPoint(t, e, i, r, g), o.multiplyScalar(g.x), a.multiplyScalar(g.y), s.multiplyScalar(g.z), o.add(a).add(s), o.clone()
                    }

                    function e(t, e, i, r, o, a, s) {
                        var h, u = t.material;
                        if (h = u.side === n.BackSide ? i.intersectTriangle(a, o, r, !0, s) : i.intersectTriangle(r, o, a, u.side !== n.DoubleSide, s), null === h) return null;
                        y.copy(s), y.applyMatrix4(t.matrixWorld);
                        var c = e.ray.origin.distanceTo(y);
                        return c < e.near || c > e.far ? null : {
                            distance: c,
                            point: y.clone(),
                            object: t
                        }
                    }

                    function i(i, r, o, a, c, l, p, g) {
                        s.fromArray(a, 3 * l), h.fromArray(a, 3 * p), u.fromArray(a, 3 * g);
                        var y = e(i, r, o, s, h, u, v);
                        return y && (c && (d.fromArray(c, 2 * l), f.fromArray(c, 2 * p), m.fromArray(c, 2 * g), y.uv = t(v, s, h, u, d, f, m)), y.face = new n.Face3(l, p, g, n.Triangle.normal(s, h, u)), y.faceIndex = l), y
                    }
                    var r = new n.Matrix4,
                        o = new n.Ray,
                        a = new n.Sphere,
                        s = new n.Vector3,
                        h = new n.Vector3,
                        u = new n.Vector3,
                        c = new n.Vector3,
                        l = new n.Vector3,
                        p = new n.Vector3,
                        d = new n.Vector2,
                        f = new n.Vector2,
                        m = new n.Vector2,
                        g = new n.Vector3,
                        v = new n.Vector3,
                        y = new n.Vector3;
                    return function(g, y) {
                        var _ = this.geometry,
                            b = this.material,
                            x = this.matrixWorld;
                        if (void 0 !== b && (null === _.boundingSphere && _.computeBoundingSphere(), a.copy(_.boundingSphere), a.applyMatrix4(x), g.ray.intersectsSphere(a) !== !1 && (r.getInverse(x), o.copy(g.ray).applyMatrix4(r), null === _.boundingBox || o.intersectsBox(_.boundingBox) !== !1))) {
                            var w, M;
                            if (_ instanceof n.BufferGeometry) {
                                var S, T, A, E = _.index,
                                    C = _.attributes,
                                    P = C.position.array;
                                if (void 0 !== C.uv && (w = C.uv.array), null !== E)
                                    for (var L = E.array, R = 0, k = L.length; k > R; R += 3) S = L[R], T = L[R + 1], A = L[R + 2], M = i(this, g, o, P, w, S, T, A), M && (M.faceIndex = Math.floor(R / 3), y.push(M));
                                else
                                    for (var R = 0, k = P.length; k > R; R += 9) S = R / 3, T = S + 1, A = S + 2, M = i(this, g, o, P, w, S, T, A), M && (M.index = S, y.push(M))
                            } else if (_ instanceof n.Geometry) {
                                var I, D, B, O = b instanceof n.MultiMaterial,
                                    j = O === !0 ? b.materials : null,
                                    U = _.vertices,
                                    N = _.faces,
                                    F = _.faceVertexUvs[0];
                                F.length > 0 && (w = F);
                                for (var V = 0, G = N.length; G > V; V++) {
                                    var z = N[V],
                                        H = O === !0 ? j[z.materialIndex] : b;
                                    if (void 0 !== H) {
                                        if (I = U[z.a], D = U[z.b], B = U[z.c], H.morphTargets === !0) {
                                            var W = _.morphTargets,
                                                X = this.morphTargetInfluences;
                                            s.set(0, 0, 0), h.set(0, 0, 0), u.set(0, 0, 0);
                                            for (var q = 0, Y = W.length; Y > q; q++) {
                                                var Z = X[q];
                                                if (0 !== Z) {
                                                    var K = W[q].vertices;
                                                    s.addScaledVector(c.subVectors(K[z.a], I), Z), h.addScaledVector(l.subVectors(K[z.b], D), Z), u.addScaledVector(p.subVectors(K[z.c], B), Z)
                                                }
                                            }
                                            s.add(I), h.add(D), u.add(B), I = s, D = h, B = u
                                        }
                                        if (M = e(this, g, o, I, D, B, v)) {
                                            if (w) {
                                                var J = w[V];
                                                d.copy(J[0]), f.copy(J[1]), m.copy(J[2]), M.uv = t(v, I, D, B, d, f, m)
                                            }
                                            M.face = z, M.faceIndex = V, y.push(M)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            }), n.Bone = function(t) {
                n.Object3D.call(this), this.type = "Bone", this.skin = t
            }, n.Bone.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Bone,
                copy: function(t) {
                    return n.Object3D.prototype.copy.call(this, t), this.skin = t.skin, this
                }
            }), n.Skeleton = function(t, e, i) {
                if (this.useVertexTexture = void 0 !== i ? i : !0, this.identityMatrix = new n.Matrix4, t = t || [], this.bones = t.slice(0), this.useVertexTexture) {
                    var r = Math.sqrt(4 * this.bones.length);
                    r = n.Math.nextPowerOfTwo(Math.ceil(r)), r = Math.max(r, 4), this.boneTextureWidth = r, this.boneTextureHeight = r, this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new n.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, n.RGBAFormat, n.FloatType)
                } else this.boneMatrices = new Float32Array(16 * this.bones.length);
                if (void 0 === e) this.calculateInverses();
                else if (this.bones.length === e.length) this.boneInverses = e.slice(0);
                else {
                    this.boneInverses = [];
                    for (var o = 0, a = this.bones.length; a > o; o++) this.boneInverses.push(new n.Matrix4)
                }
            }, Object.assign(n.Skeleton.prototype, {
                calculateInverses: function() {
                    this.boneInverses = [];
                    for (var t = 0, e = this.bones.length; e > t; t++) {
                        var i = new n.Matrix4;
                        this.bones[t] && i.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(i)
                    }
                },
                pose: function() {
                    for (var t, e = 0, i = this.bones.length; i > e; e++) t = this.bones[e], t && t.matrixWorld.getInverse(this.boneInverses[e]);
                    for (var e = 0, i = this.bones.length; i > e; e++) t = this.bones[e], t && (t.parent instanceof n.Bone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale))
                },
                update: function() {
                    var t = new n.Matrix4;
                    return function() {
                        for (var e = 0, i = this.bones.length; i > e; e++) {
                            var n = this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix;
                            t.multiplyMatrices(n, this.boneInverses[e]), t.toArray(this.boneMatrices, 16 * e)
                        }
                        this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
                    }
                }(),
                clone: function() {
                    return new n.Skeleton(this.bones, this.boneInverses, this.useVertexTexture)
                }
            }), n.SkinnedMesh = function(t, e, i) {
                n.Mesh.call(this, t, e), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new n.Matrix4, this.bindMatrixInverse = new n.Matrix4;
                var r = [];
                if (this.geometry && void 0 !== this.geometry.bones) {
                    for (var o, a, s = 0, h = this.geometry.bones.length; h > s; ++s) a = this.geometry.bones[s], o = new n.Bone(this), r.push(o), o.name = a.name, o.position.fromArray(a.pos), o.quaternion.fromArray(a.rotq), void 0 !== a.scl && o.scale.fromArray(a.scl);
                    for (var s = 0, h = this.geometry.bones.length; h > s; ++s) a = this.geometry.bones[s], -1 !== a.parent && null !== a.parent && void 0 !== r[a.parent] ? r[a.parent].add(r[s]) : this.add(r[s])
                }
                this.normalizeSkinWeights(), this.updateMatrixWorld(!0), this.bind(new n.Skeleton(r, void 0, i), this.matrixWorld)
            }, n.SkinnedMesh.prototype = Object.assign(Object.create(n.Mesh.prototype), {
                constructor: n.SkinnedMesh,
                bind: function(t, e) {
                    this.skeleton = t, void 0 === e && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), e = this.matrixWorld), this.bindMatrix.copy(e), this.bindMatrixInverse.getInverse(e)
                },
                pose: function() {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function() {
                    if (this.geometry instanceof n.Geometry)
                        for (var t = 0; t < this.geometry.skinWeights.length; t++) {
                            var e = this.geometry.skinWeights[t],
                                i = 1 / e.lengthManhattan();
                            i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0)
                        } else if (this.geometry instanceof n.BufferGeometry)
                            for (var r = new n.Vector4, o = this.geometry.attributes.skinWeight, t = 0; t < o.count; t++) {
                                r.x = o.getX(t), r.y = o.getY(t), r.z = o.getZ(t), r.w = o.getW(t);
                                var i = 1 / r.lengthManhattan();
                                i !== 1 / 0 ? r.multiplyScalar(i) : r.set(1, 0, 0, 0), o.setXYZW(t, r.x, r.y, r.z, r.w)
                            }
                },
                updateMatrixWorld: function(t) {
                    n.Mesh.prototype.updateMatrixWorld.call(this, !0), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode && this.bindMatrixInverse.getInverse(this.bindMatrix)
                },
                clone: function() {
                    return new this.constructor(this.geometry, this.material, this.skeleton.useVertexTexture).copy(this)
                }
            }), n.LOD = function() {
                n.Object3D.call(this), this.type = "LOD", Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                })
            }, n.LOD.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.LOD,
                copy: function(t) {
                    n.Object3D.prototype.copy.call(this, t, !1);
                    for (var e = t.levels, i = 0, r = e.length; r > i; i++) {
                        var o = e[i];
                        this.addLevel(o.object.clone(), o.distance)
                    }
                    return this
                },
                addLevel: function(t, e) {
                    void 0 === e && (e = 0), e = Math.abs(e);
                    for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++);
                    i.splice(n, 0, {
                        distance: e,
                        object: t
                    }), this.add(t)
                },
                getObjectForDistance: function(t) {
                    for (var e = this.levels, i = 1, n = e.length; n > i && !(t < e[i].distance); i++);
                    return e[i - 1].object
                },
                raycast: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        t.setFromMatrixPosition(this.matrixWorld);
                        var n = e.ray.origin.distanceTo(t);
                        this.getObjectForDistance(n).raycast(e, i)
                    }
                }(),
                update: function() {
                    var t = new n.Vector3,
                        e = new n.Vector3;
                    return function(i) {
                        var n = this.levels;
                        if (n.length > 1) {
                            t.setFromMatrixPosition(i.matrixWorld), e.setFromMatrixPosition(this.matrixWorld);
                            var r = t.distanceTo(e);
                            n[0].object.visible = !0;
                            for (var o = 1, a = n.length; a > o && r >= n[o].distance; o++) n[o - 1].object.visible = !1, n[o].object.visible = !0;
                            for (; a > o; o++) n[o].object.visible = !1
                        }
                    }
                }(),
                toJSON: function(t) {
                    var e = n.Object3D.prototype.toJSON.call(this, t);
                    e.object.levels = [];
                    for (var i = this.levels, r = 0, o = i.length; o > r; r++) {
                        var a = i[r];
                        e.object.levels.push({
                            object: a.object.uuid,
                            distance: a.distance
                        })
                    }
                    return e
                }
            }), n.Sprite = function(t) {
                n.Object3D.call(this), this.type = "Sprite", this.material = void 0 !== t ? t : new n.SpriteMaterial
            }, n.Sprite.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.Sprite,
                raycast: function() {
                    var t = new n.Vector3;
                    return function(e, i) {
                        t.setFromMatrixPosition(this.matrixWorld);
                        var n = e.ray.distanceSqToPoint(t),
                            r = this.scale.x * this.scale.y / 4;
                        n > r || i.push({
                            distance: Math.sqrt(n),
                            point: this.position,
                            face: null,
                            object: this
                        })
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.material).copy(this)
                }
            }), n.LensFlare = function(t, e, i, r, o) {
                n.Object3D.call(this), this.lensFlares = [], this.positionScreen = new n.Vector3, this.customUpdateCallback = void 0, void 0 !== t && this.add(t, e, i, r, o)
            }, n.LensFlare.prototype = Object.assign(Object.create(n.Object3D.prototype), {
                constructor: n.LensFlare,
                copy: function(t) {
                    n.Object3D.prototype.copy.call(this, t), this.positionScreen.copy(t.positionScreen), this.customUpdateCallback = t.customUpdateCallback;
                    for (var e = 0, i = t.lensFlares.length; i > e; e++) this.lensFlares.push(t.lensFlares[e]);
                    return this
                },
                add: function(t, e, i, r, o, a) {
                    void 0 === e && (e = -1), void 0 === i && (i = 0), void 0 === a && (a = 1), void 0 === o && (o = new n.Color(16777215)), void 0 === r && (r = n.NormalBlending), i = Math.min(i, Math.max(0, i)), this.lensFlares.push({
                        texture: t,
                        size: e,
                        distance: i,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 0,
                        opacity: a,
                        color: o,
                        blending: r
                    })
                },
                updateLensFlares: function() {
                    var t, e, i = this.lensFlares.length,
                        n = 2 * -this.positionScreen.x,
                        r = 2 * -this.positionScreen.y;
                    for (t = 0; i > t; t++) e = this.lensFlares[t], e.x = this.positionScreen.x + n * e.distance, e.y = this.positionScreen.y + r * e.distance, e.wantedRotation = e.x * Math.PI * .25, e.rotation += .25 * (e.wantedRotation - e.rotation)
                }
            }), n.Scene = function() {
                n.Object3D.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0
            }, n.Scene.prototype = Object.create(n.Object3D.prototype), n.Scene.prototype.constructor = n.Scene, n.Scene.prototype.copy = function(t, e) {
                return n.Object3D.prototype.copy.call(this, t, e), null !== t.background && (this.background = t.background.clone()), null !== t.fog && (this.fog = t.fog.clone()), null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this
            }, n.Fog = function(t, e, i) {
                this.name = "", this.color = new n.Color(t), this.near = void 0 !== e ? e : 1, this.far = void 0 !== i ? i : 1e3
            }, n.Fog.prototype.clone = function() {
                return new n.Fog(this.color.getHex(), this.near, this.far)
            }, n.FogExp2 = function(t, e) {
                this.name = "", this.color = new n.Color(t), this.density = void 0 !== e ? e : 25e-5
            }, n.FogExp2.prototype.clone = function() {
                return new n.FogExp2(this.color.getHex(), this.density)
            }, n.ShaderChunk = {}, n.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n", n.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n", n.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n", n.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n", n.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif", n.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n", n.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n", n.ShaderChunk.bsdfs = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n		if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n			return distanceFalloff * maxDistanceCutoffFactor;\n#else\n			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n		}\n		return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n", n.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n", n.ShaderChunk.clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n	for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n		vec4 plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n#endif\n", n.ShaderChunk.clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( PHYSICAL ) && ! defined( PHONG )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n", n.ShaderChunk.clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	varying vec3 vViewPosition;\n#endif\n", n.ShaderChunk.clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	vViewPosition = - mvPosition.xyz;\n#endif\n", n.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif", n.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n", n.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif", n.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif", n.ShaderChunk.common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n", n.ShaderChunk.cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif\n", n.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n", n.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n", n.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n", n.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n", n.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n", n.ShaderChunk.encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n", n.ShaderChunk.encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n", n.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n", n.ShaderChunk.envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n	uniform float reflectivity;\n	uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n		varying vec3 vWorldPosition;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n", n.ShaderChunk.envmap_pars_vertex = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif\n", n.ShaderChunk.envmap_vertex = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif\n", n.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n", n.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif", n.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n", n.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif", n.ShaderChunk.lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n", n.ShaderChunk.lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n			directLight.color = pointLight.color;\n			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		#include <normal_flip>\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		#include <normal_flip>\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n",
            n.ShaderChunk.lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n", n.ShaderChunk.lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n", n.ShaderChunk.lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n", n.ShaderChunk.lights_physical_pars_fragment = "struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n	#ifndef STANDARD\n		float clearCoat;\n		float clearCoatRoughness;\n	#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	#ifndef STANDARD\n		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n	#ifndef STANDARD\n		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n", n.ShaderChunk.lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	#ifndef STANDARD\n		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n	#else\n		vec3 clearCoatRadiance = vec3( 0.0 );\n	#endif\n		\n	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n", n.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif", n.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n", n.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif", n.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif\n", n.ShaderChunk.map_fragment = "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n", n.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n", n.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n", n.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n#endif\n", n.ShaderChunk.metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.r;\n#endif\n", n.ShaderChunk.metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif", n.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n", n.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif", n.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n", n.ShaderChunk.normal_flip = "#ifdef DOUBLE_SIDED\n	float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n	float flipNormal = 1.0;\n#endif\n", n.ShaderChunk.normal_fragment = "#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n", n.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n", n.ShaderChunk.packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n", n.ShaderChunk.premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n", n.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n	vec4 mvPosition = modelViewMatrix * skinned;\n#else\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n", n.ShaderChunk.roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.r;\n#endif\n", n.ShaderChunk.roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif", n.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return 1.0;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		vec3 bd3D = normalize( lightToPosition );\n		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n", n.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n", n.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n", n.ShaderChunk.shadowmask_pars_fragment = "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n", n.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif", n.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n", n.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n#endif\n", n.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n", n.ShaderChunk.specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif", n.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif", n.ShaderChunk.tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n", n.ShaderChunk.tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n", n.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif", n.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif", n.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif", n.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif", n.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif\n", n.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif", n.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#else\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n	#endif\n#endif\n", n.UniformsUtils = {
                merge: function(t) {
                    for (var e = {}, i = 0; i < t.length; i++) {
                        var n = this.clone(t[i]);
                        for (var r in n) e[r] = n[r]
                    }
                    return e
                },
                clone: function(t) {
                    var e = {};
                    for (var i in t) {
                        e[i] = {};
                        for (var r in t[i]) {
                            var o = t[i][r];
                            o instanceof n.Color || o instanceof n.Vector2 || o instanceof n.Vector3 || o instanceof n.Vector4 || o instanceof n.Matrix3 || o instanceof n.Matrix4 || o instanceof n.Texture ? e[i][r] = o.clone() : Array.isArray(o) ? e[i][r] = o.slice() : e[i][r] = o
                        }
                    }
                    return e
                }
            }, n.UniformsLib = {
                common: {
                    diffuse: {
                        value: new n.Color(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new n.Vector4(0, 0, 1, 1)
                    },
                    specularMap: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new n.Vector2(1, 1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new n.Color(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new n.Color(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new n.Vector4(0, 0, 1, 1)
                    }
                }
            }, n.ShaderChunk.cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	#include <logdepthbuf_fragment>\n}\n", n.ShaderChunk.cube_vert = "varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n", n.ShaderChunk.depth_frag = "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}\n", n.ShaderChunk.depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",
            n.ShaderChunk.distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n", n.ShaderChunk.distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition;\n}\n", n.ShaderChunk.equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <logdepthbuf_fragment>\n}\n", n.ShaderChunk.equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n", n.ShaderChunk.linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n", n.ShaderChunk.meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight;\n	reflectedLight.directDiffuse = vec3( 0.0 );\n	reflectedLight.directSpecular = vec3( 0.0 );\n	reflectedLight.indirectDiffuse = diffuseColor.rgb;\n	reflectedLight.indirectSpecular = vec3( 0.0 );\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n}\n", n.ShaderChunk.meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n}\n", n.ShaderChunk.meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n}\n", n.ShaderChunk.meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n	uniform float clearCoat;\n	uniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n", n.ShaderChunk.normal_frag = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n	#include <logdepthbuf_fragment>\n}\n", n.ShaderChunk.normal_vert = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vNormal = normalize( normalMatrix * normal );\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n", n.ShaderChunk.points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n", n.ShaderChunk.points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n", n.ShaderChunk.shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n", n.ShaderChunk.shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n", n.ShaderLib = {
                basic: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.fog]),
                    vertexShader: n.ShaderChunk.meshbasic_vert,
                    fragmentShader: n.ShaderChunk.meshbasic_frag
                },
                lambert: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.fog, n.UniformsLib.lights, {
                        emissive: {
                            value: new n.Color(0)
                        }
                    }]),
                    vertexShader: n.ShaderChunk.meshlambert_vert,
                    fragmentShader: n.ShaderChunk.meshlambert_frag
                },
                phong: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.bumpmap, n.UniformsLib.normalmap, n.UniformsLib.displacementmap, n.UniformsLib.fog, n.UniformsLib.lights, {
                        emissive: {
                            value: new n.Color(0)
                        },
                        specular: {
                            value: new n.Color(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: n.ShaderChunk.meshphong_vert,
                    fragmentShader: n.ShaderChunk.meshphong_frag
                },
                standard: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.aomap, n.UniformsLib.lightmap, n.UniformsLib.emissivemap, n.UniformsLib.bumpmap, n.UniformsLib.normalmap, n.UniformsLib.displacementmap, n.UniformsLib.roughnessmap, n.UniformsLib.metalnessmap, n.UniformsLib.fog, n.UniformsLib.lights, {
                        emissive: {
                            value: new n.Color(0)
                        },
                        roughness: {
                            value: .5
                        },
                        metalness: {
                            value: 0
                        },
                        envMapIntensity: {
                            value: 1
                        }
                    }]),
                    vertexShader: n.ShaderChunk.meshphysical_vert,
                    fragmentShader: n.ShaderChunk.meshphysical_frag
                },
                points: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.points, n.UniformsLib.fog]),
                    vertexShader: n.ShaderChunk.points_vert,
                    fragmentShader: n.ShaderChunk.points_frag
                },
                dashed: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.fog, {
                        scale: {
                            value: 1
                        },
                        dashSize: {
                            value: 1
                        },
                        totalSize: {
                            value: 2
                        }
                    }]),
                    vertexShader: n.ShaderChunk.linedashed_vert,
                    fragmentShader: n.ShaderChunk.linedashed_frag
                },
                depth: {
                    uniforms: n.UniformsUtils.merge([n.UniformsLib.common, n.UniformsLib.displacementmap]),
                    vertexShader: n.ShaderChunk.depth_vert,
                    fragmentShader: n.ShaderChunk.depth_frag
                },
                normal: {
                    uniforms: {
                        opacity: {
                            value: 1
                        }
                    },
                    vertexShader: n.ShaderChunk.normal_vert,
                    fragmentShader: n.ShaderChunk.normal_frag
                },
                cube: {
                    uniforms: {
                        tCube: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        }
                    },
                    vertexShader: n.ShaderChunk.cube_vert,
                    fragmentShader: n.ShaderChunk.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        }
                    },
                    vertexShader: n.ShaderChunk.equirect_vert,
                    fragmentShader: n.ShaderChunk.equirect_frag
                },
                distanceRGBA: {
                    uniforms: {
                        lightPos: {
                            value: new n.Vector3
                        }
                    },
                    vertexShader: n.ShaderChunk.distanceRGBA_vert,
                    fragmentShader: n.ShaderChunk.distanceRGBA_frag
                }
            }, n.ShaderLib.physical = {
                uniforms: n.UniformsUtils.merge([n.ShaderLib.standard.uniforms, {
                    clearCoat: {
                        value: 0
                    },
                    clearCoatRoughness: {
                        value: 0
                    }
                }]),
                vertexShader: n.ShaderChunk.meshphysical_vert,
                fragmentShader: n.ShaderChunk.meshphysical_frag
            }, n.WebGLRenderer = function(t) {
                function e() {
                    return null === et ? ft : 1
                }

                function i(t, e, i, n) {
                    z === !0 && (t *= n, e *= n, i *= n), kt.clearColor(t, e, i, n)
                }

                function r() {
                    kt.init(), kt.scissor(at.copy(mt).multiplyScalar(ft)), kt.viewport(ht.copy(vt).multiplyScalar(ft)), i(ct.r, ct.g, ct.b, lt)
                }

                function o() {
                    tt = null, ot = null, rt = "", nt = -1, kt.reset()
                }

                function a(t) {
                    t.preventDefault(), o(), r(), It.clear()
                }

                function s(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", s), h(e)
                }

                function h(t) {
                    u(t), It["delete"](t)
                }

                function u(t) {
                    var e = It.get(t).program;
                    t.program = void 0, void 0 !== e && Ot.releaseProgram(e)
                }

                function c(t, e, i, r) {
                    var o;
                    if (!(i instanceof n.InstancedBufferGeometry && (o = Lt.get("ANGLE_instanced_arrays"), null === o))) {
                        void 0 === r && (r = 0), kt.initAttributes();
                        var a = i.attributes,
                            s = e.getAttributes(),
                            h = t.defaultAttributeValues;
                        for (var u in s) {
                            var c = s[u];
                            if (c >= 0) {
                                var l = a[u];
                                if (void 0 !== l) {
                                    var p = Et.FLOAT,
                                        d = l.array,
                                        f = l.normalized;
                                    d instanceof Float32Array ? p = Et.FLOAT : d instanceof Float64Array || (d instanceof Uint16Array ? p = Et.UNSIGNED_SHORT : d instanceof Int16Array ? p = Et.SHORT : d instanceof Uint32Array ? p = Et.UNSIGNED_INT : d instanceof Int32Array ? p = Et.INT : d instanceof Int8Array ? p = Et.BYTE : d instanceof Uint8Array && (p = Et.UNSIGNED_BYTE));
                                    var m = l.itemSize,
                                        g = Bt.getAttributeBuffer(l);
                                    if (l instanceof n.InterleavedBufferAttribute) {
                                        var v = l.data,
                                            y = v.stride,
                                            _ = l.offset;
                                        v instanceof n.InstancedInterleavedBuffer ? (kt.enableAttributeAndDivisor(c, v.meshPerAttribute, o), void 0 === i.maxInstancedCount && (i.maxInstancedCount = v.meshPerAttribute * v.count)) : kt.enableAttribute(c), Et.bindBuffer(Et.ARRAY_BUFFER, g), Et.vertexAttribPointer(c, m, p, f, y * v.array.BYTES_PER_ELEMENT, (r * y + _) * v.array.BYTES_PER_ELEMENT)
                                    } else l instanceof n.InstancedBufferAttribute ? (kt.enableAttributeAndDivisor(c, l.meshPerAttribute, o), void 0 === i.maxInstancedCount && (i.maxInstancedCount = l.meshPerAttribute * l.count)) : kt.enableAttribute(c), Et.bindBuffer(Et.ARRAY_BUFFER, g), Et.vertexAttribPointer(c, m, p, f, 0, r * m * l.array.BYTES_PER_ELEMENT)
                                } else if (void 0 !== h) {
                                    var b = h[u];
                                    if (void 0 !== b) switch (b.length) {
                                        case 2:
                                            Et.vertexAttrib2fv(c, b);
                                            break;
                                        case 3:
                                            Et.vertexAttrib3fv(c, b);
                                            break;
                                        case 4:
                                            Et.vertexAttrib4fv(c, b);
                                            break;
                                        default:
                                            Et.vertexAttrib1fv(c, b)
                                    }
                                }
                            }
                        }
                        kt.disableUnusedAttributes()
                    }
                }

                function l(t, e) {
                    return Math.abs(e[0]) - Math.abs(t[0])
                }

                function p(t, e) {
                    return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
                }

                function d(t, e) {
                    return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
                }

                function f(t, e, i, n, r) {
                    var o, a;
                    i.transparent ? (o = Y, a = ++Z) : (o = X, a = ++q);
                    var s = o[a];
                    void 0 !== s ? (s.id = t.id, s.object = t, s.geometry = e, s.material = i, s.z = St.z, s.group = r) : (s = {
                        id: t.id,
                        object: t,
                        geometry: e,
                        material: i,
                        z: St.z,
                        group: r
                    }, o.push(s))
                }

                function m(t) {
                    var e = t.geometry;
                    return null === e.boundingSphere && e.computeBoundingSphere(), wt.copy(e.boundingSphere).applyMatrix4(t.matrixWorld), v(wt)
                }

                function g(t) {
                    return wt.center.set(0, 0, 0), wt.radius = .7071067811865476, wt.applyMatrix4(t.matrixWorld), v(wt)
                }

                function v(t) {
                    if (!yt.intersectsSphere(t)) return !1;
                    var e = _t.numPlanes;
                    if (0 === e) return !0;
                    var i = $.clippingPlanes,
                        n = t.center,
                        r = -t.radius,
                        o = 0;
                    do
                        if (i[o].distanceToPoint(n) < r) return !1;
                    while (++o !== e);
                    return !0
                }

                function y(t, e) {
                    if (t.visible !== !1) {
                        if (t.layers.test(e.layers))
                            if (t instanceof n.Light) W.push(t);
                            else if (t instanceof n.Sprite) t.frustumCulled !== !1 && g(t) !== !0 || J.push(t);
                        else if (t instanceof n.LensFlare) Q.push(t);
                        else if (t instanceof n.ImmediateRenderObject) $.sortObjects === !0 && (St.setFromMatrixPosition(t.matrixWorld), St.applyProjection(Mt)), f(t, null, t.material, St.z, null);
                        else if ((t instanceof n.Mesh || t instanceof n.Line || t instanceof n.Points) && (t instanceof n.SkinnedMesh && t.skeleton.update(), t.frustumCulled === !1 || m(t) === !0)) {
                            var i = t.material;
                            if (i.visible === !0) {
                                $.sortObjects === !0 && (St.setFromMatrixPosition(t.matrixWorld), St.applyProjection(Mt));
                                var r = Bt.update(t);
                                if (i instanceof n.MultiMaterial)
                                    for (var o = r.groups, a = i.materials, s = 0, h = o.length; h > s; s++) {
                                        var u = o[s],
                                            c = a[u.materialIndex];
                                        c.visible === !0 && f(t, r, c, St.z, u)
                                    } else f(t, r, i, St.z, null)
                            }
                        }
                        for (var l = t.children, s = 0, h = l.length; h > s; s++) y(l[s], e)
                    }
                }

                function _(t, e, i, r) {
                    for (var o = 0, a = t.length; a > o; o++) {
                        var s = t[o],
                            h = s.object,
                            u = s.geometry,
                            c = void 0 === r ? s.material : r,
                            l = s.group;
                        if (h.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, h.matrixWorld), h.normalMatrix.getNormalMatrix(h.modelViewMatrix), h instanceof n.ImmediateRenderObject) {
                            x(c);
                            var p = w(e, i, c, h);
                            rt = "", h.render(function(t) {
                                $.renderBufferImmediate(t, p, c)
                            })
                        } else $.renderBufferDirect(e, i, u, c, h, l)
                    }
                }

                function b(t, e, i) {
                    var r = It.get(t),
                        o = Ot.getParameters(t, Tt, e, _t.numPlanes, i),
                        a = Ot.getProgramCode(t, o),
                        h = r.program,
                        c = !0;
                    if (void 0 === h) t.addEventListener("dispose", s);
                    else if (h.code !== a) u(t);
                    else {
                        if (void 0 !== o.shaderID) return;
                        c = !1
                    }
                    if (c) {
                        if (o.shaderID) {
                            var l = n.ShaderLib[o.shaderID];
                            r.__webglShader = {
                                name: t.type,
                                uniforms: n.UniformsUtils.clone(l.uniforms),
                                vertexShader: l.vertexShader,
                                fragmentShader: l.fragmentShader
                            }
                        } else r.__webglShader = {
                            name: t.type,
                            uniforms: t.uniforms,
                            vertexShader: t.vertexShader,
                            fragmentShader: t.fragmentShader
                        };
                        t.__webglShader = r.__webglShader, h = Ot.acquireProgram(t, o, a), r.program = h, t.program = h
                    }
                    var p = h.getAttributes();
                    if (t.morphTargets) {
                        t.numSupportedMorphTargets = 0;
                        for (var d = 0; d < $.maxMorphTargets; d++) p["morphTarget" + d] >= 0 && t.numSupportedMorphTargets++
                    }
                    if (t.morphNormals) {
                        t.numSupportedMorphNormals = 0;
                        for (var d = 0; d < $.maxMorphNormals; d++) p["morphNormal" + d] >= 0 && t.numSupportedMorphNormals++
                    }
                    var f = r.__webglShader.uniforms;
                    (t instanceof n.ShaderMaterial || t instanceof n.RawShaderMaterial) && t.clipping !== !0 || (r.numClippingPlanes = _t.numPlanes, f.clippingPlanes = _t.uniform), t.lights && (r.lightsHash = Tt.hash, f.ambientLightColor.value = Tt.ambient, f.directionalLights.value = Tt.directional, f.spotLights.value = Tt.spot, f.pointLights.value = Tt.point, f.hemisphereLights.value = Tt.hemi, f.directionalShadowMap.value = Tt.directionalShadowMap, f.directionalShadowMatrix.value = Tt.directionalShadowMatrix, f.spotShadowMap.value = Tt.spotShadowMap, f.spotShadowMatrix.value = Tt.spotShadowMatrix, f.pointShadowMap.value = Tt.pointShadowMap, f.pointShadowMatrix.value = Tt.pointShadowMatrix);
                    var m = r.program.getUniforms(),
                        g = n.WebGLUniforms.seqWithValue(m.seq, f);
                    r.uniformsList = g, r.dynamicUniforms = n.WebGLUniforms.splitDynamic(g, f)
                }

                function x(t) {
                    t.side !== n.DoubleSide ? kt.enable(Et.CULL_FACE) : kt.disable(Et.CULL_FACE), kt.setFlipSided(t.side === n.BackSide), t.transparent === !0 ? kt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : kt.setBlending(n.NoBlending), kt.setDepthFunc(t.depthFunc), kt.setDepthTest(t.depthTest), kt.setDepthWrite(t.depthWrite), kt.setColorWrite(t.colorWrite), kt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
                }

                function w(t, e, i, r) {
                    ut = 0;
                    var o = It.get(i);
                    if (bt) {
                        if (xt || t !== ot) {
                            var a = t === ot && i.id === nt;
                            _t.setState(i.clippingPlanes, i.clipShadows, t, o, a)
                        }
                        void 0 !== o.numClippingPlanes && o.numClippingPlanes !== _t.numPlanes && (i.needsUpdate = !0)
                    }
                    void 0 === o.program && (i.needsUpdate = !0), void 0 !== o.lightsHash && o.lightsHash !== Tt.hash && (i.needsUpdate = !0), i.needsUpdate && (b(i, e, r), i.needsUpdate = !1);
                    var s = !1,
                        h = !1,
                        u = !1,
                        c = o.program,
                        l = c.getUniforms(),
                        p = o.__webglShader.uniforms;
                    if (c.id !== tt && (Et.useProgram(c.program), tt = c.id, s = !0, h = !0, u = !0), i.id !== nt && (nt = i.id, h = !0), s || t !== ot) {
                        if (l.set(Et, t, "projectionMatrix"), Rt.logarithmicDepthBuffer && l.setValue(Et, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)), t !== ot && (ot = t, h = !0, u = !0), i instanceof n.ShaderMaterial || i instanceof n.MeshPhongMaterial || i instanceof n.MeshStandardMaterial || i.envMap) {
                            var d = l.map.cameraPosition;
                            void 0 !== d && d.setValue(Et, St.setFromMatrixPosition(t.matrixWorld))
                        }(i instanceof n.MeshPhongMaterial || i instanceof n.MeshLambertMaterial || i instanceof n.MeshBasicMaterial || i instanceof n.MeshStandardMaterial || i instanceof n.ShaderMaterial || i.skinning) && l.setValue(Et, "viewMatrix", t.matrixWorldInverse), l.set(Et, $, "toneMappingExposure"), l.set(Et, $, "toneMappingWhitePoint")
                    }
                    if (i.skinning) {
                        l.setOptional(Et, r, "bindMatrix"), l.setOptional(Et, r, "bindMatrixInverse");
                        var f = r.skeleton;
                        f && (Rt.floatVertexTextures && f.useVertexTexture ? (l.set(Et, f, "boneTexture"), l.set(Et, f, "boneTextureWidth"), l.set(Et, f, "boneTextureHeight")) : l.setOptional(Et, f, "boneMatrices"))
                    }
                    h && (i.lights && k(p, u), e && i.fog && E(p, e), (i instanceof n.MeshBasicMaterial || i instanceof n.MeshLambertMaterial || i instanceof n.MeshPhongMaterial || i instanceof n.MeshStandardMaterial || i instanceof n.MeshDepthMaterial) && M(p, i), i instanceof n.LineBasicMaterial ? S(p, i) : i instanceof n.LineDashedMaterial ? (S(p, i), T(p, i)) : i instanceof n.PointsMaterial ? A(p, i) : i instanceof n.MeshLambertMaterial ? C(p, i) : i instanceof n.MeshPhongMaterial ? P(p, i) : i instanceof n.MeshPhysicalMaterial ? R(p, i) : i instanceof n.MeshStandardMaterial ? L(p, i) : i instanceof n.MeshDepthMaterial ? i.displacementMap && (p.displacementMap.value = i.displacementMap, p.displacementScale.value = i.displacementScale, p.displacementBias.value = i.displacementBias) : i instanceof n.MeshNormalMaterial && (p.opacity.value = i.opacity), n.WebGLUniforms.upload(Et, o.uniformsList, p, $)), l.set(Et, r, "modelViewMatrix"), l.set(Et, r, "normalMatrix"), l.setValue(Et, "modelMatrix", r.matrixWorld);
                    var m = o.dynamicUniforms;
                    return null !== m && (n.WebGLUniforms.evalDynamic(m, p, r, t), n.WebGLUniforms.upload(Et, m, p, $)), c
                }

                function M(t, e) {
                    t.opacity.value = e.opacity, t.diffuse.value = e.color, e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity), t.map.value = e.map, t.specularMap.value = e.specularMap, t.alphaMap.value = e.alphaMap, e.aoMap && (t.aoMap.value = e.aoMap, t.aoMapIntensity.value = e.aoMapIntensity);
                    var i;
                    if (e.map ? i = e.map : e.specularMap ? i = e.specularMap : e.displacementMap ? i = e.displacementMap : e.normalMap ? i = e.normalMap : e.bumpMap ? i = e.bumpMap : e.roughnessMap ? i = e.roughnessMap : e.metalnessMap ? i = e.metalnessMap : e.alphaMap ? i = e.alphaMap : e.emissiveMap && (i = e.emissiveMap), void 0 !== i) {
                        i instanceof n.WebGLRenderTarget && (i = i.texture);
                        var r = i.offset,
                            o = i.repeat;
                        t.offsetRepeat.value.set(r.x, r.y, o.x, o.y)
                    }
                    t.envMap.value = e.envMap, t.flipEnvMap.value = e.envMap instanceof n.CubeTexture ? -1 : 1, t.reflectivity.value = e.reflectivity, t.refractionRatio.value = e.refractionRatio
                }

                function S(t, e) {
                    t.diffuse.value = e.color, t.opacity.value = e.opacity
                }

                function T(t, e) {
                    t.dashSize.value = e.dashSize, t.totalSize.value = e.dashSize + e.gapSize, t.scale.value = e.scale
                }

                function A(t, e) {
                    if (t.diffuse.value = e.color, t.opacity.value = e.opacity, t.size.value = e.size * ft, t.scale.value = .5 * j.clientHeight, t.map.value = e.map, null !== e.map) {
                        var i = e.map.offset,
                            n = e.map.repeat;
                        t.offsetRepeat.value.set(i.x, i.y, n.x, n.y)
                    }
                }

                function E(t, e) {
                    t.fogColor.value = e.color, e instanceof n.Fog ? (t.fogNear.value = e.near, t.fogFar.value = e.far) : e instanceof n.FogExp2 && (t.fogDensity.value = e.density)
                }

                function C(t, e) {
                    e.lightMap && (t.lightMap.value = e.lightMap, t.lightMapIntensity.value = e.lightMapIntensity), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
                }

                function P(t, e) {
                    t.specular.value = e.specular, t.shininess.value = Math.max(e.shininess, 1e-4), e.lightMap && (t.lightMap.value = e.lightMap, t.lightMapIntensity.value = e.lightMapIntensity), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap), e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale), e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale)), e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias)
                }

                function L(t, e) {
                    t.roughness.value = e.roughness, t.metalness.value = e.metalness, e.roughnessMap && (t.roughnessMap.value = e.roughnessMap), e.metalnessMap && (t.metalnessMap.value = e.metalnessMap), e.lightMap && (t.lightMap.value = e.lightMap, t.lightMapIntensity.value = e.lightMapIntensity), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap), e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale), e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale)), e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias),
                        e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
                }

                function R(t, e) {
                    t.clearCoat.value = e.clearCoat, t.clearCoatRoughness.value = e.clearCoatRoughness, L(t, e)
                }

                function k(t, e) {
                    t.ambientLightColor.needsUpdate = e, t.directionalLights.needsUpdate = e, t.pointLights.needsUpdate = e, t.spotLights.needsUpdate = e, t.hemisphereLights.needsUpdate = e
                }

                function I(t) {
                    for (var e = 0, i = 0, n = t.length; n > i; i++) {
                        var r = t[i];
                        r.castShadow && (Tt.shadows[e++] = r)
                    }
                    Tt.shadows.length = e
                }

                function D(t, e) {
                    var i, r, o, a, s, h, u, c = 0,
                        l = 0,
                        p = 0,
                        d = e.matrixWorldInverse,
                        f = 0,
                        m = 0,
                        g = 0,
                        v = 0;
                    for (i = 0, r = t.length; r > i; i++)
                        if (o = t[i], a = o.color, s = o.intensity, h = o.distance, u = o.shadow && o.shadow.map ? o.shadow.map.texture : null, o instanceof n.AmbientLight) c += a.r * s, l += a.g * s, p += a.b * s;
                        else if (o instanceof n.DirectionalLight) {
                        var y = jt.get(o);
                        y.color.copy(o.color).multiplyScalar(o.intensity), y.direction.setFromMatrixPosition(o.matrixWorld), St.setFromMatrixPosition(o.target.matrixWorld), y.direction.sub(St), y.direction.transformDirection(d), y.shadow = o.castShadow, o.castShadow && (y.shadowBias = o.shadow.bias, y.shadowRadius = o.shadow.radius, y.shadowMapSize = o.shadow.mapSize), Tt.directionalShadowMap[f] = u, Tt.directionalShadowMatrix[f] = o.shadow.matrix, Tt.directional[f++] = y
                    } else if (o instanceof n.SpotLight) {
                        var y = jt.get(o);
                        y.position.setFromMatrixPosition(o.matrixWorld), y.position.applyMatrix4(d), y.color.copy(a).multiplyScalar(s), y.distance = h, y.direction.setFromMatrixPosition(o.matrixWorld), St.setFromMatrixPosition(o.target.matrixWorld), y.direction.sub(St), y.direction.transformDirection(d), y.coneCos = Math.cos(o.angle), y.penumbraCos = Math.cos(o.angle * (1 - o.penumbra)), y.decay = 0 === o.distance ? 0 : o.decay, y.shadow = o.castShadow, o.castShadow && (y.shadowBias = o.shadow.bias, y.shadowRadius = o.shadow.radius, y.shadowMapSize = o.shadow.mapSize), Tt.spotShadowMap[g] = u, Tt.spotShadowMatrix[g] = o.shadow.matrix, Tt.spot[g++] = y
                    } else if (o instanceof n.PointLight) {
                        var y = jt.get(o);
                        y.position.setFromMatrixPosition(o.matrixWorld), y.position.applyMatrix4(d), y.color.copy(o.color).multiplyScalar(o.intensity), y.distance = o.distance, y.decay = 0 === o.distance ? 0 : o.decay, y.shadow = o.castShadow, o.castShadow && (y.shadowBias = o.shadow.bias, y.shadowRadius = o.shadow.radius, y.shadowMapSize = o.shadow.mapSize), Tt.pointShadowMap[m] = u, void 0 === Tt.pointShadowMatrix[m] && (Tt.pointShadowMatrix[m] = new n.Matrix4), St.setFromMatrixPosition(o.matrixWorld).negate(), Tt.pointShadowMatrix[m].identity().setPosition(St), Tt.point[m++] = y
                    } else if (o instanceof n.HemisphereLight) {
                        var y = jt.get(o);
                        y.direction.setFromMatrixPosition(o.matrixWorld), y.direction.transformDirection(d), y.direction.normalize(), y.skyColor.copy(o.color).multiplyScalar(s), y.groundColor.copy(o.groundColor).multiplyScalar(s), Tt.hemi[v++] = y
                    }
                    Tt.ambient[0] = c, Tt.ambient[1] = l, Tt.ambient[2] = p, Tt.directional.length = f, Tt.spot.length = g, Tt.point.length = m, Tt.hemi.length = v, Tt.hash = f + "," + m + "," + g + "," + v + "," + Tt.shadows.length
                }

                function B() {
                    var t = ut;
                    return t >= Rt.maxTextures, ut += 1, t
                }

                function O(t) {
                    var e;
                    if (t === n.RepeatWrapping) return Et.REPEAT;
                    if (t === n.ClampToEdgeWrapping) return Et.CLAMP_TO_EDGE;
                    if (t === n.MirroredRepeatWrapping) return Et.MIRRORED_REPEAT;
                    if (t === n.NearestFilter) return Et.NEAREST;
                    if (t === n.NearestMipMapNearestFilter) return Et.NEAREST_MIPMAP_NEAREST;
                    if (t === n.NearestMipMapLinearFilter) return Et.NEAREST_MIPMAP_LINEAR;
                    if (t === n.LinearFilter) return Et.LINEAR;
                    if (t === n.LinearMipMapNearestFilter) return Et.LINEAR_MIPMAP_NEAREST;
                    if (t === n.LinearMipMapLinearFilter) return Et.LINEAR_MIPMAP_LINEAR;
                    if (t === n.UnsignedByteType) return Et.UNSIGNED_BYTE;
                    if (t === n.UnsignedShort4444Type) return Et.UNSIGNED_SHORT_4_4_4_4;
                    if (t === n.UnsignedShort5551Type) return Et.UNSIGNED_SHORT_5_5_5_1;
                    if (t === n.UnsignedShort565Type) return Et.UNSIGNED_SHORT_5_6_5;
                    if (t === n.ByteType) return Et.BYTE;
                    if (t === n.ShortType) return Et.SHORT;
                    if (t === n.UnsignedShortType) return Et.UNSIGNED_SHORT;
                    if (t === n.IntType) return Et.INT;
                    if (t === n.UnsignedIntType) return Et.UNSIGNED_INT;
                    if (t === n.FloatType) return Et.FLOAT;
                    if (e = Lt.get("OES_texture_half_float"), null !== e && t === n.HalfFloatType) return e.HALF_FLOAT_OES;
                    if (t === n.AlphaFormat) return Et.ALPHA;
                    if (t === n.RGBFormat) return Et.RGB;
                    if (t === n.RGBAFormat) return Et.RGBA;
                    if (t === n.LuminanceFormat) return Et.LUMINANCE;
                    if (t === n.LuminanceAlphaFormat) return Et.LUMINANCE_ALPHA;
                    if (t === n.DepthFormat) return Et.DEPTH_COMPONENT;
                    if (t === n.AddEquation) return Et.FUNC_ADD;
                    if (t === n.SubtractEquation) return Et.FUNC_SUBTRACT;
                    if (t === n.ReverseSubtractEquation) return Et.FUNC_REVERSE_SUBTRACT;
                    if (t === n.ZeroFactor) return Et.ZERO;
                    if (t === n.OneFactor) return Et.ONE;
                    if (t === n.SrcColorFactor) return Et.SRC_COLOR;
                    if (t === n.OneMinusSrcColorFactor) return Et.ONE_MINUS_SRC_COLOR;
                    if (t === n.SrcAlphaFactor) return Et.SRC_ALPHA;
                    if (t === n.OneMinusSrcAlphaFactor) return Et.ONE_MINUS_SRC_ALPHA;
                    if (t === n.DstAlphaFactor) return Et.DST_ALPHA;
                    if (t === n.OneMinusDstAlphaFactor) return Et.ONE_MINUS_DST_ALPHA;
                    if (t === n.DstColorFactor) return Et.DST_COLOR;
                    if (t === n.OneMinusDstColorFactor) return Et.ONE_MINUS_DST_COLOR;
                    if (t === n.SrcAlphaSaturateFactor) return Et.SRC_ALPHA_SATURATE;
                    if (e = Lt.get("WEBGL_compressed_texture_s3tc"), null !== e) {
                        if (t === n.RGB_S3TC_DXT1_Format) return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
                        if (t === n.RGBA_S3TC_DXT1_Format) return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                        if (t === n.RGBA_S3TC_DXT3_Format) return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                        if (t === n.RGBA_S3TC_DXT5_Format) return e.COMPRESSED_RGBA_S3TC_DXT5_EXT
                    }
                    if (e = Lt.get("WEBGL_compressed_texture_pvrtc"), null !== e) {
                        if (t === n.RGB_PVRTC_4BPPV1_Format) return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                        if (t === n.RGB_PVRTC_2BPPV1_Format) return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                        if (t === n.RGBA_PVRTC_4BPPV1_Format) return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                        if (t === n.RGBA_PVRTC_2BPPV1_Format) return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                    }
                    if (e = Lt.get("WEBGL_compressed_texture_etc1"), null !== e && t === n.RGB_ETC1_Format) return e.COMPRESSED_RGB_ETC1_WEBGL;
                    if (e = Lt.get("EXT_blend_minmax"), null !== e) {
                        if (t === n.MinEquation) return e.MIN_EXT;
                        if (t === n.MaxEquation) return e.MAX_EXT
                    }
                    return 0
                }
                t = t || {};
                var j = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                    U = void 0 !== t.context ? t.context : null,
                    N = void 0 !== t.alpha ? t.alpha : !1,
                    F = void 0 !== t.depth ? t.depth : !0,
                    V = void 0 !== t.stencil ? t.stencil : !0,
                    G = void 0 !== t.antialias ? t.antialias : !1,
                    z = void 0 !== t.premultipliedAlpha ? t.premultipliedAlpha : !0,
                    H = void 0 !== t.preserveDrawingBuffer ? t.preserveDrawingBuffer : !1,
                    W = [],
                    X = [],
                    q = -1,
                    Y = [],
                    Z = -1,
                    K = new Float32Array(8),
                    J = [],
                    Q = [];
                this.domElement = j, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = n.LinearToneMapping, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
                var $ = this,
                    tt = null,
                    et = null,
                    it = null,
                    nt = -1,
                    rt = "",
                    ot = null,
                    at = new n.Vector4,
                    st = null,
                    ht = new n.Vector4,
                    ut = 0,
                    ct = new n.Color(0),
                    lt = 0,
                    pt = j.width,
                    dt = j.height,
                    ft = 1,
                    mt = new n.Vector4(0, 0, pt, dt),
                    gt = !1,
                    vt = new n.Vector4(0, 0, pt, dt),
                    yt = new n.Frustum,
                    _t = new n.WebGLClipping,
                    bt = !1,
                    xt = !1,
                    wt = new n.Sphere,
                    Mt = new n.Matrix4,
                    St = new n.Vector3,
                    Tt = {
                        hash: "",
                        ambient: [0, 0, 0],
                        directional: [],
                        directionalShadowMap: [],
                        directionalShadowMatrix: [],
                        spot: [],
                        spotShadowMap: [],
                        spotShadowMatrix: [],
                        point: [],
                        pointShadowMap: [],
                        pointShadowMatrix: [],
                        hemi: [],
                        shadows: []
                    },
                    At = {
                        calls: 0,
                        vertices: 0,
                        faces: 0,
                        points: 0
                    };
                this.info = {
                    render: At,
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    programs: null
                };
                var Et;
                try {
                    var Ct = {
                        alpha: N,
                        depth: F,
                        stencil: V,
                        antialias: G,
                        premultipliedAlpha: z,
                        preserveDrawingBuffer: H
                    };
                    if (Et = U || j.getContext("webgl", Ct) || j.getContext("experimental-webgl", Ct), null === Et) throw null !== j.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                    void 0 === Et.getShaderPrecisionFormat && (Et.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    }), j.addEventListener("webglcontextlost", a, !1)
                } catch (Pt) {}
                var Lt = new n.WebGLExtensions(Et);
                Lt.get("WEBGL_depth_texture"), Lt.get("OES_texture_float"), Lt.get("OES_texture_float_linear"), Lt.get("OES_texture_half_float"), Lt.get("OES_texture_half_float_linear"), Lt.get("OES_standard_derivatives"), Lt.get("ANGLE_instanced_arrays"), Lt.get("OES_element_index_uint") && (n.BufferGeometry.MaxIndex = 4294967296);
                var Rt = new n.WebGLCapabilities(Et, Lt, t),
                    kt = new n.WebGLState(Et, Lt, O),
                    It = new n.WebGLProperties,
                    Dt = new n.WebGLTextures(Et, Lt, kt, It, Rt, O, this.info),
                    Bt = new n.WebGLObjects(Et, It, this.info),
                    Ot = new n.WebGLPrograms(this, Rt),
                    jt = new n.WebGLLights;
                this.info.programs = Ot.programs;
                var Ut = new n.WebGLBufferRenderer(Et, Lt, At),
                    Nt = new n.WebGLIndexedBufferRenderer(Et, Lt, At),
                    Ft = new n.OrthographicCamera(-1, 1, 1, -1, 0, 1),
                    Vt = new n.PerspectiveCamera,
                    Gt = new n.Mesh(new n.PlaneBufferGeometry(2, 2), new n.MeshBasicMaterial({
                        depthTest: !1,
                        depthWrite: !1
                    })),
                    zt = n.ShaderLib.cube,
                    Ht = new n.Mesh(new n.BoxBufferGeometry(5, 5, 5), new n.ShaderMaterial({
                        uniforms: zt.uniforms,
                        vertexShader: zt.vertexShader,
                        fragmentShader: zt.fragmentShader,
                        depthTest: !1,
                        depthWrite: !1,
                        side: n.BackSide
                    }));
                Bt.update(Gt), Bt.update(Ht), r(), this.context = Et, this.capabilities = Rt, this.extensions = Lt, this.properties = It, this.state = kt;
                var Wt = new n.WebGLShadowMap(this, Tt, Bt);
                this.shadowMap = Wt;
                var Xt = new n.SpritePlugin(this, J),
                    qt = new n.LensFlarePlugin(this, Q);
                this.getContext = function() {
                    return Et
                }, this.getContextAttributes = function() {
                    return Et.getContextAttributes()
                }, this.forceContextLoss = function() {
                    Lt.get("WEBGL_lose_context").loseContext()
                }, this.getMaxAnisotropy = function() {
                    return Rt.getMaxAnisotropy()
                }, this.getPrecision = function() {
                    return Rt.precision
                }, this.getPixelRatio = function() {
                    return ft
                }, this.setPixelRatio = function(t) {
                    void 0 !== t && (ft = t, this.setSize(vt.z, vt.w, !1))
                }, this.getSize = function() {
                    return {
                        width: pt,
                        height: dt
                    }
                }, this.setSize = function(t, e, i) {
                    pt = t, dt = e, j.width = t * ft, j.height = e * ft, i !== !1 && (j.style.width = t + "px", j.style.height = e + "px"), this.setViewport(0, 0, t, e)
                }, this.setViewport = function(t, e, i, n) {
                    kt.viewport(vt.set(t, e, i, n))
                }, this.setScissor = function(t, e, i, n) {
                    kt.scissor(mt.set(t, e, i, n))
                }, this.setScissorTest = function(t) {
                    kt.setScissorTest(gt = t)
                }, this.getClearColor = function() {
                    return ct
                }, this.setClearColor = function(t, e) {
                    ct.set(t), lt = void 0 !== e ? e : 1, i(ct.r, ct.g, ct.b, lt)
                }, this.getClearAlpha = function() {
                    return lt
                }, this.setClearAlpha = function(t) {
                    lt = t, i(ct.r, ct.g, ct.b, lt)
                }, this.clear = function(t, e, i) {
                    var n = 0;
                    (void 0 === t || t) && (n |= Et.COLOR_BUFFER_BIT), (void 0 === e || e) && (n |= Et.DEPTH_BUFFER_BIT), (void 0 === i || i) && (n |= Et.STENCIL_BUFFER_BIT), Et.clear(n)
                }, this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }, this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }, this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }, this.clearTarget = function(t, e, i, n) {
                    this.setRenderTarget(t), this.clear(e, i, n)
                }, this.resetGLState = o, this.dispose = function() {
                    Y = [], Z = -1, X = [], q = -1, j.removeEventListener("webglcontextlost", a, !1)
                }, this.renderBufferImmediate = function(t, e, i) {
                    kt.initAttributes();
                    var r = It.get(t);
                    t.hasPositions && !r.position && (r.position = Et.createBuffer()), t.hasNormals && !r.normal && (r.normal = Et.createBuffer()), t.hasUvs && !r.uv && (r.uv = Et.createBuffer()), t.hasColors && !r.color && (r.color = Et.createBuffer());
                    var o = e.getAttributes();
                    if (t.hasPositions && (Et.bindBuffer(Et.ARRAY_BUFFER, r.position), Et.bufferData(Et.ARRAY_BUFFER, t.positionArray, Et.DYNAMIC_DRAW), kt.enableAttribute(o.position), Et.vertexAttribPointer(o.position, 3, Et.FLOAT, !1, 0, 0)), t.hasNormals) {
                        if (Et.bindBuffer(Et.ARRAY_BUFFER, r.normal), "MeshPhongMaterial" !== i.type && "MeshStandardMaterial" !== i.type && "MeshPhysicalMaterial" !== i.type && i.shading === n.FlatShading)
                            for (var a = 0, s = 3 * t.count; s > a; a += 9) {
                                var h = t.normalArray,
                                    u = (h[a + 0] + h[a + 3] + h[a + 6]) / 3,
                                    c = (h[a + 1] + h[a + 4] + h[a + 7]) / 3,
                                    l = (h[a + 2] + h[a + 5] + h[a + 8]) / 3;
                                h[a + 0] = u, h[a + 1] = c, h[a + 2] = l, h[a + 3] = u, h[a + 4] = c, h[a + 5] = l, h[a + 6] = u, h[a + 7] = c, h[a + 8] = l
                            }
                        Et.bufferData(Et.ARRAY_BUFFER, t.normalArray, Et.DYNAMIC_DRAW), kt.enableAttribute(o.normal), Et.vertexAttribPointer(o.normal, 3, Et.FLOAT, !1, 0, 0)
                    }
                    t.hasUvs && i.map && (Et.bindBuffer(Et.ARRAY_BUFFER, r.uv), Et.bufferData(Et.ARRAY_BUFFER, t.uvArray, Et.DYNAMIC_DRAW), kt.enableAttribute(o.uv), Et.vertexAttribPointer(o.uv, 2, Et.FLOAT, !1, 0, 0)), t.hasColors && i.vertexColors !== n.NoColors && (Et.bindBuffer(Et.ARRAY_BUFFER, r.color), Et.bufferData(Et.ARRAY_BUFFER, t.colorArray, Et.DYNAMIC_DRAW), kt.enableAttribute(o.color), Et.vertexAttribPointer(o.color, 3, Et.FLOAT, !1, 0, 0)), kt.disableUnusedAttributes(), Et.drawArrays(Et.TRIANGLES, 0, t.count), t.count = 0
                }, this.renderBufferDirect = function(t, i, r, o, a, s) {
                    x(o);
                    var h = w(t, i, o, a),
                        u = !1,
                        p = r.id + "_" + h.id + "_" + o.wireframe;
                    p !== rt && (rt = p, u = !0);
                    var d = a.morphTargetInfluences;
                    if (void 0 !== d) {
                        for (var f = [], m = 0, g = d.length; g > m; m++) {
                            var v = d[m];
                            f.push([v, m])
                        }
                        f.sort(l), f.length > 8 && (f.length = 8);
                        for (var y = r.morphAttributes, m = 0, g = f.length; g > m; m++) {
                            var v = f[m];
                            if (K[m] = v[0], 0 !== v[0]) {
                                var _ = v[1];
                                o.morphTargets === !0 && y.position && r.addAttribute("morphTarget" + m, y.position[_]), o.morphNormals === !0 && y.normal && r.addAttribute("morphNormal" + m, y.normal[_])
                            } else o.morphTargets === !0 && r.removeAttribute("morphTarget" + m), o.morphNormals === !0 && r.removeAttribute("morphNormal" + m)
                        }
                        h.getUniforms().setValue(Et, "morphTargetInfluences", K), u = !0
                    }
                    var _ = r.index,
                        b = r.attributes.position;
                    o.wireframe === !0 && (_ = Bt.getWireframeAttribute(r));
                    var M;
                    null !== _ ? (M = Nt, M.setIndex(_)) : M = Ut, u && (c(o, h, r), null !== _ && Et.bindBuffer(Et.ELEMENT_ARRAY_BUFFER, Bt.getAttributeBuffer(_)));
                    var S = 0,
                        T = 1 / 0;
                    null !== _ ? T = _.count : void 0 !== b && (T = b.count);
                    var A = r.drawRange.start,
                        E = r.drawRange.count,
                        C = null !== s ? s.start : 0,
                        P = null !== s ? s.count : 1 / 0,
                        L = Math.max(S, A, C),
                        R = Math.min(S + T, A + E, C + P) - 1,
                        k = Math.max(0, R - L + 1);
                    if (a instanceof n.Mesh)
                        if (o.wireframe === !0) kt.setLineWidth(o.wireframeLinewidth * e()), M.setMode(Et.LINES);
                        else switch (a.drawMode) {
                            case n.TrianglesDrawMode:
                                M.setMode(Et.TRIANGLES);
                                break;
                            case n.TriangleStripDrawMode:
                                M.setMode(Et.TRIANGLE_STRIP);
                                break;
                            case n.TriangleFanDrawMode:
                                M.setMode(Et.TRIANGLE_FAN)
                        } else if (a instanceof n.Line) {
                            var I = o.linewidth;
                            void 0 === I && (I = 1), kt.setLineWidth(I * e()), a instanceof n.LineSegments ? M.setMode(Et.LINES) : M.setMode(Et.LINE_STRIP)
                        } else a instanceof n.Points && M.setMode(Et.POINTS);
                    r instanceof n.InstancedBufferGeometry ? r.maxInstancedCount > 0 && M.renderInstances(r, L, k) : M.render(L, k)
                }, this.render = function(t, e, r, o) {
                    if (e instanceof n.Camera != !1) {
                        var a = t.fog;
                        rt = "", nt = -1, ot = null, t.autoUpdate === !0 && t.updateMatrixWorld(), null === e.parent && e.updateMatrixWorld(), e.matrixWorldInverse.getInverse(e.matrixWorld), Mt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse), yt.setFromMatrix(Mt), W.length = 0, q = -1, Z = -1, J.length = 0, Q.length = 0, xt = this.localClippingEnabled, bt = _t.init(this.clippingPlanes, xt, e), y(t, e), X.length = q + 1, Y.length = Z + 1, $.sortObjects === !0 && (X.sort(p), Y.sort(d)), bt && _t.beginShadows(), I(W), Wt.render(t, e), D(W, e), bt && _t.endShadows(), At.calls = 0, At.vertices = 0, At.faces = 0, At.points = 0, void 0 === r && (r = null), this.setRenderTarget(r);
                        var s = t.background;
                        if (null === s ? i(ct.r, ct.g, ct.b, lt) : s instanceof n.Color && i(s.r, s.g, s.b, 1), (this.autoClear || o) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil), s instanceof n.CubeTexture ? (Vt.projectionMatrix.copy(e.projectionMatrix), Vt.matrixWorld.extractRotation(e.matrixWorld), Vt.matrixWorldInverse.getInverse(Vt.matrixWorld), Ht.material.uniforms.tCube.value = s, Ht.modelViewMatrix.multiplyMatrices(Vt.matrixWorldInverse, Ht.matrixWorld), $.renderBufferDirect(Vt, null, Ht.geometry, Ht.material, Ht, null)) : s instanceof n.Texture && (Gt.material.map = s, $.renderBufferDirect(Ft, null, Gt.geometry, Gt.material, Gt, null)), t.overrideMaterial) {
                            var h = t.overrideMaterial;
                            _(X, e, a, h), _(Y, e, a, h)
                        } else kt.setBlending(n.NoBlending), _(X, e, a), _(Y, e, a);
                        Xt.render(t, e), qt.render(t, e, ht), r && Dt.updateRenderTargetMipmap(r), kt.setDepthTest(!0), kt.setDepthWrite(!0), kt.setColorWrite(!0)
                    }
                }, this.setFaceCulling = function(t, e) {
                    kt.setCullFace(t), kt.setFlipSided(e === n.FrontFaceDirectionCW)
                }, this.allocTextureUnit = B, this.setTexture2D = function() {
                    var t = !1;
                    return function(e, i) {
                        e instanceof n.WebGLRenderTarget && (t || (t = !0), e = e.texture), Dt.setTexture2D(e, i)
                    }
                }(), this.setTexture = function() {
                    var t = !1;
                    return function(e, i) {
                        t || (t = !0), Dt.setTexture2D(e, i)
                    }
                }(), this.setTextureCube = function() {
                    var t = !1;
                    return function(e, i) {
                        e instanceof n.WebGLRenderTargetCube && (t || (t = !0), e = e.texture), e instanceof n.CubeTexture || Array.isArray(e.image) && 6 === e.image.length ? Dt.setTextureCube(e, i) : Dt.setTextureCubeDynamic(e, i)
                    }
                }(), this.getCurrentRenderTarget = function() {
                    return et
                }, this.setRenderTarget = function(t) {
                    et = t, t && void 0 === It.get(t).__webglFramebuffer && Dt.setupRenderTarget(t);
                    var e, i = t instanceof n.WebGLRenderTargetCube;
                    if (t) {
                        var r = It.get(t);
                        e = i ? r.__webglFramebuffer[t.activeCubeFace] : r.__webglFramebuffer, at.copy(t.scissor), st = t.scissorTest, ht.copy(t.viewport)
                    } else e = null, at.copy(mt).multiplyScalar(ft), st = gt, ht.copy(vt).multiplyScalar(ft);
                    if (it !== e && (Et.bindFramebuffer(Et.FRAMEBUFFER, e), it = e), kt.scissor(at), kt.setScissorTest(st), kt.viewport(ht), i) {
                        var o = It.get(t.texture);
                        Et.framebufferTexture2D(Et.FRAMEBUFFER, Et.COLOR_ATTACHMENT0, Et.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, o.__webglTexture, t.activeMipMapLevel)
                    }
                }, this.readRenderTargetPixels = function(t, e, i, r, o, a) {
                    if (t instanceof n.WebGLRenderTarget != !1) {
                        var s = It.get(t).__webglFramebuffer;
                        if (s) {
                            var h = !1;
                            s !== it && (Et.bindFramebuffer(Et.FRAMEBUFFER, s), h = !0);
                            try {
                                var u = t.texture;
                                if (u.format !== n.RGBAFormat && O(u.format) !== Et.getParameter(Et.IMPLEMENTATION_COLOR_READ_FORMAT)) return;
                                if (!(u.type === n.UnsignedByteType || O(u.type) === Et.getParameter(Et.IMPLEMENTATION_COLOR_READ_TYPE) || u.type === n.FloatType && Lt.get("WEBGL_color_buffer_float") || u.type === n.HalfFloatType && Lt.get("EXT_color_buffer_half_float"))) return;
                                Et.checkFramebufferStatus(Et.FRAMEBUFFER) === Et.FRAMEBUFFER_COMPLETE && e >= 0 && e <= t.width - r && i >= 0 && i <= t.height - o && Et.readPixels(e, i, r, o, O(u.format), O(u.type), a)
                            } finally {
                                h && Et.bindFramebuffer(Et.FRAMEBUFFER, it)
                            }
                        }
                    }
                }
            }, n.WebGLRenderTarget = function(t, e, i) {
                this.uuid = n.Math.generateUUID(), this.width = t, this.height = e, this.scissor = new n.Vector4(0, 0, t, e), this.scissorTest = !1, this.viewport = new n.Vector4(0, 0, t, e), i = i || {}, void 0 === i.minFilter && (i.minFilter = n.LinearFilter), this.texture = new n.Texture(void 0, void 0, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding), this.depthBuffer = void 0 !== i.depthBuffer ? i.depthBuffer : !0, this.stencilBuffer = void 0 !== i.stencilBuffer ? i.stencilBuffer : !0, this.depthTexture = null
            }, Object.assign(n.WebGLRenderTarget.prototype, n.EventDispatcher.prototype, {
                setSize: function(t, e) {
                    this.width === t && this.height === e || (this.width = t, this.height = e, this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(t) {
                    return this.width = t.width, this.height = t.height, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), n.WebGLRenderTargetCube = function(t, e, i) {
                n.WebGLRenderTarget.call(this, t, e, i), this.activeCubeFace = 0, this.activeMipMapLevel = 0
            }, n.WebGLRenderTargetCube.prototype = Object.create(n.WebGLRenderTarget.prototype), n.WebGLRenderTargetCube.prototype.constructor = n.WebGLRenderTargetCube, n.WebGLBufferRenderer = function(t, e, i) {
                function r(t) {
                    s = t
                }

                function o(e, n) {
                    t.drawArrays(s, e, n), i.calls++, i.vertices += n, s === t.TRIANGLES && (i.faces += n / 3)
                }

                function a(r) {
                    var o = e.get("ANGLE_instanced_arrays");
                    if (null !== o) {
                        var a = r.attributes.position,
                            h = 0;
                        a instanceof n.InterleavedBufferAttribute ? (h = a.data.count, o.drawArraysInstancedANGLE(s, 0, h, r.maxInstancedCount)) : (h = a.count, o.drawArraysInstancedANGLE(s, 0, h, r.maxInstancedCount)), i.calls++, i.vertices += h * r.maxInstancedCount, s === t.TRIANGLES && (i.faces += r.maxInstancedCount * h / 3)
                    }
                }
                var s;
                this.setMode = r, this.render = o, this.renderInstances = a
            }, n.WebGLClipping = function() {
                function t() {
                    c.value !== r && (c.value = r, c.needsUpdate = o > 0), i.numPlanes = o
                }

                function e(t, e, n, r) {
                    var o = null !== t ? t.length : 0,
                        a = null;
                    if (0 !== o) {
                        if (a = c.value, r !== !0 || null === a) {
                            var s = n + 4 * o,
                                l = e.matrixWorldInverse;
                            u.getNormalMatrix(l), (null === a || a.length < s) && (a = new Float32Array(s));
                            for (var p = 0, d = n; p !== o; ++p, d += 4) h.copy(t[p]).applyMatrix4(l, u), h.normal.toArray(a, d), a[d + 3] = h.constant
                        }
                        c.value = a, c.needsUpdate = !0
                    }
                    return i.numPlanes = o, a
                }
                var i = this,
                    r = null,
                    o = 0,
                    a = !1,
                    s = !1,
                    h = new n.Plane,
                    u = new n.Matrix3,
                    c = {
                        value: null,
                        needsUpdate: !1
                    };
                this.uniform = c, this.numPlanes = 0, this.init = function(t, i, n) {
                    var s = 0 !== t.length || i || 0 !== o || a;
                    return a = i, r = e(t, n, 0), o = t.length, s
                }, this.beginShadows = function() {
                    s = !0, e(null)
                }, this.endShadows = function() {
                    s = !1, t()
                }, this.setState = function(i, n, h, u, l) {
                    if (!a || null === i || 0 === i.length || s && !n) s ? e(null) : t();
                    else {
                        var p = s ? 0 : o,
                            d = 4 * p,
                            f = u.clippingState || null;
                        c.value = f, f = e(i, h, d, l);
                        for (var m = 0; m !== d; ++m) f[m] = r[m];
                        u.clippingState = f, this.numPlanes += p
                    }
                }
            }, n.WebGLIndexedBufferRenderer = function(t, e, i) {
                function n(t) {
                    s = t
                }

                function r(i) {
                    i.array instanceof Uint32Array && e.get("OES_element_index_uint") ? (h = t.UNSIGNED_INT, u = 4) : (h = t.UNSIGNED_SHORT, u = 2)
                }

                function o(e, n) {
                    t.drawElements(s, n, h, e * u), i.calls++, i.vertices += n, s === t.TRIANGLES && (i.faces += n / 3)
                }

                function a(n, r, o) {
                    var a = e.get("ANGLE_instanced_arrays");
                    null !== a && (a.drawElementsInstancedANGLE(s, o, h, r * u, n.maxInstancedCount), i.calls++, i.vertices += o * n.maxInstancedCount, s === t.TRIANGLES && (i.faces += n.maxInstancedCount * o / 3))
                }
                var s, h, u;
                this.setMode = n, this.setIndex = r, this.render = o, this.renderInstances = a
            }, n.WebGLExtensions = function(t) {
                var e = {};
                this.get = function(i) {
                    if (void 0 !== e[i]) return e[i];
                    var n;
                    switch (i) {
                        case "WEBGL_depth_texture":
                            n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        case "WEBGL_compressed_texture_etc1":
                            n = t.getExtension("WEBGL_compressed_texture_etc1");
                            break;
                        default:
                            n = t.getExtension(i)
                    }
                    return e[i] = n, n
                }
            }, n.WebGLCapabilities = function(t, e, i) {
                function n() {
                    if (void 0 !== o) return o;
                    var i = e.get("EXT_texture_filter_anisotropic");
                    return o = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                }

                function r(e) {
                    if ("highp" === e) {
                        if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) return "highp";
                        e = "mediump"
                    }
                    return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
                }
                var o;
                this.getMaxAnisotropy = n, this.getMaxPrecision = r, this.precision = void 0 !== i.precision ? i.precision : "highp", this.logarithmicDepthBuffer = void 0 !== i.logarithmicDepthBuffer ? i.logarithmicDepthBuffer : !1, this.maxTextures = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS), this.maxVertexTextures = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this.maxTextureSize = t.getParameter(t.MAX_TEXTURE_SIZE), this.maxCubemapSize = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE), this.maxAttributes = t.getParameter(t.MAX_VERTEX_ATTRIBS), this.maxVertexUniforms = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS), this.maxVaryings = t.getParameter(t.MAX_VARYING_VECTORS), this.maxFragmentUniforms = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS), this.vertexTextures = this.maxVertexTextures > 0, this.floatFragmentTextures = !!e.get("OES_texture_float"), this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;
                var a = r(this.precision);
                a !== this.precision && (this.precision = a), this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!e.get("EXT_frag_depth"))
            }, n.WebGLGeometries = function(t, e, i) {
                function r(t) {
                    var e = t.geometry;
                    if (void 0 !== c[e.id]) return c[e.id];
                    e.addEventListener("dispose", o);
                    var r;
                    return e instanceof n.BufferGeometry ? r = e : e instanceof n.Geometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new n.BufferGeometry).setFromObject(t)), r = e._bufferGeometry), c[e.id] = r, i.memory.geometries++, r
                }

                function o(t) {
                    var n = t.target,
                        r = c[n.id];
                    null !== r.index && s(r.index), h(r.attributes), n.removeEventListener("dispose", o), delete c[n.id];
                    var a = e.get(n);
                    a.wireframe && s(a.wireframe), e["delete"](n);
                    var u = e.get(r);
                    u.wireframe && s(u.wireframe), e["delete"](r), i.memory.geometries--
                }

                function a(t) {
                    return t instanceof n.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
                }

                function s(e) {
                    var i = a(e);
                    void 0 !== i && (t.deleteBuffer(i), u(e))
                }

                function h(t) {
                    for (var e in t) s(t[e])
                }

                function u(t) {
                    t instanceof n.InterleavedBufferAttribute ? e["delete"](t.data) : e["delete"](t)
                }
                var c = {};
                this.get = r
            }, n.WebGLLights = function() {
                var t = {};
                this.get = function(e) {
                    if (void 0 !== t[e.id]) return t[e.id];
                    var i;
                    switch (e.type) {
                        case "DirectionalLight":
                            i = {
                                direction: new n.Vector3,
                                color: new n.Color,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n.Vector2
                            };
                            break;
                        case "SpotLight":
                            i = {
                                position: new n.Vector3,
                                direction: new n.Vector3,
                                color: new n.Color,
                                distance: 0,
                                coneCos: 0,
                                penumbraCos: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n.Vector2
                            };
                            break;
                        case "PointLight":
                            i = {
                                position: new n.Vector3,
                                color: new n.Color,
                                distance: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new n.Vector2
                            };
                            break;
                        case "HemisphereLight":
                            i = {
                                direction: new n.Vector3,
                                skyColor: new n.Color,
                                groundColor: new n.Color
                            }
                    }
                    return t[e.id] = i, i
                }
            }, n.WebGLObjects = function(t, e, i) {
                function r(e) {
                    var i = l.get(e);
                    e.geometry instanceof n.Geometry && i.updateFromObject(e);
                    var r = i.index,
                        a = i.attributes;
                    null !== r && o(r, t.ELEMENT_ARRAY_BUFFER);
                    for (var s in a) o(a[s], t.ARRAY_BUFFER);
                    var h = i.morphAttributes;
                    for (var s in h)
                        for (var u = h[s], c = 0, p = u.length; p > c; c++) o(u[c], t.ARRAY_BUFFER);
                    return i
                }

                function o(t, i) {
                    var r = t instanceof n.InterleavedBufferAttribute ? t.data : t,
                        o = e.get(r);
                    void 0 === o.__webglBuffer ? a(o, r, i) : o.version !== r.version && s(o, r, i)
                }

                function a(e, i, n) {
                    e.__webglBuffer = t.createBuffer(), t.bindBuffer(n, e.__webglBuffer);
                    var r = i.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW;
                    t.bufferData(n, i.array, r), e.version = i.version
                }

                function s(e, i, n) {
                    t.bindBuffer(n, e.__webglBuffer), i.dynamic === !1 || -1 === i.updateRange.count ? t.bufferSubData(n, 0, i.array) : 0 === i.updateRange.count || (t.bufferSubData(n, i.updateRange.offset * i.array.BYTES_PER_ELEMENT, i.array.subarray(i.updateRange.offset, i.updateRange.offset + i.updateRange.count)), i.updateRange.count = 0), e.version = i.version
                }

                function h(t) {
                    return t instanceof n.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
                }

                function u(i) {
                    var r = e.get(i);
                    if (void 0 !== r.wireframe) return r.wireframe;
                    var a = [],
                        s = i.index,
                        h = i.attributes,
                        u = h.position;
                    if (null !== s)
                        for (var l = {}, p = s.array, d = 0, f = p.length; f > d; d += 3) {
                            var m = p[d + 0],
                                g = p[d + 1],
                                v = p[d + 2];
                            c(l, m, g) && a.push(m, g), c(l, g, v) && a.push(g, v), c(l, v, m) && a.push(v, m)
                        } else
                            for (var p = h.position.array, d = 0, f = p.length / 3 - 1; f > d; d += 3) {
                                var m = d + 0,
                                    g = d + 1,
                                    v = d + 2;
                                a.push(m, g, g, v, v, m)
                            }
                    var y = u.count > 65535 ? Uint32Array : Uint16Array,
                        _ = new n.BufferAttribute(new y(a), 1);
                    return o(_, t.ELEMENT_ARRAY_BUFFER), r.wireframe = _, _
                }

                function c(t, e, i) {
                    if (e > i) {
                        var n = e;
                        e = i, i = n
                    }
                    var r = t[e];
                    return void 0 === r ? (t[e] = [i], !0) : -1 === r.indexOf(i) ? (r.push(i), !0) : !1
                }
                var l = new n.WebGLGeometries(t, e, i);
                this.getAttributeBuffer = h, this.getWireframeAttribute = u, this.update = r
            }, n.WebGLProgram = function() {
                function t(t) {
                    switch (t) {
                        case n.LinearEncoding:
                            return ["Linear", "( value )"];
                        case n.sRGBEncoding:
                            return ["sRGB", "( value )"];
                        case n.RGBEEncoding:
                            return ["RGBE", "( value )"];
                        case n.RGBM7Encoding:
                            return ["RGBM", "( value, 7.0 )"];
                        case n.RGBM16Encoding:
                            return ["RGBM", "( value, 16.0 )"];
                        case n.RGBDEncoding:
                            return ["RGBD", "( value, 256.0 )"];
                        case n.GammaEncoding:
                            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                        default:
                            throw new Error("unsupported encoding: " + t)
                    }
                }

                function e(e, i) {
                    var n = t(i);
                    return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
                }

                function i(e, i) {
                    var n = t(i);
                    return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
                }

                function r(t, e) {
                    var i;
                    switch (e) {
                        case n.LinearToneMapping:
                            i = "Linear";
                            break;
                        case n.ReinhardToneMapping:
                            i = "Reinhard";
                            break;
                        case n.Uncharted2ToneMapping:
                            i = "Uncharted2";
                            break;
                        case n.CineonToneMapping:
                            i = "OptimizedCineon";
                            break;
                        default:
                            throw new Error("unsupported toneMapping: " + e)
                    }
                    return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
                }

                function o(t, e, i) {
                    t = t || {};
                    var n = [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""];
                    return n.filter(h).join("\n")
                }

                function a(t) {
                    var e = [];
                    for (var i in t) {
                        var n = t[i];
                        n !== !1 && e.push("#define " + i + " " + n)
                    }
                    return e.join("\n")
                }

                function s(t, e, i) {
                    for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), o = 0; r > o; o++) {
                        var a = t.getActiveAttrib(e, o),
                            s = a.name;
                        n[s] = t.getAttribLocation(e, s)
                    }
                    return n
                }

                function h(t) {
                    return "" !== t
                }

                function u(t, e) {
                    return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
                }

                function c(t) {
                    function e(t, e) {
                        var i = n.ShaderChunk[e];
                        if (void 0 === i) throw new Error("Can not resolve #include <" + e + ">");
                        return c(i)
                    }
                    var i = /#include +<([\w\d.]+)>/g;
                    return t.replace(i, e)
                }

                function l(t) {
                    function e(t, e, i, n) {
                        for (var r = "", o = parseInt(e); o < parseInt(i); o++) r += n.replace(/\[ i \]/g, "[ " + o + " ]");
                        return r
                    }
                    var i = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                    return t.replace(i, e)
                }
                var p = 0;
                return function(t, d, f, m) {
                    var g = t.context,
                        v = f.extensions,
                        y = f.defines,
                        _ = f.__webglShader.vertexShader,
                        b = f.__webglShader.fragmentShader,
                        x = "SHADOWMAP_TYPE_BASIC";
                    m.shadowMapType === n.PCFShadowMap ? x = "SHADOWMAP_TYPE_PCF" : m.shadowMapType === n.PCFSoftShadowMap && (x = "SHADOWMAP_TYPE_PCF_SOFT");
                    var w = "ENVMAP_TYPE_CUBE",
                        M = "ENVMAP_MODE_REFLECTION",
                        S = "ENVMAP_BLENDING_MULTIPLY";
                    if (m.envMap) {
                        switch (f.envMap.mapping) {
                            case n.CubeReflectionMapping:
                            case n.CubeRefractionMapping:
                                w = "ENVMAP_TYPE_CUBE";
                                break;
                            case n.CubeUVReflectionMapping:
                            case n.CubeUVRefractionMapping:
                                w = "ENVMAP_TYPE_CUBE_UV";
                                break;
                            case n.EquirectangularReflectionMapping:
                            case n.EquirectangularRefractionMapping:
                                w = "ENVMAP_TYPE_EQUIREC";
                                break;
                            case n.SphericalReflectionMapping:
                                w = "ENVMAP_TYPE_SPHERE"
                        }
                        switch (f.envMap.mapping) {
                            case n.CubeRefractionMapping:
                            case n.EquirectangularRefractionMapping:
                                M = "ENVMAP_MODE_REFRACTION"
                        }
                        switch (f.combine) {
                            case n.MultiplyOperation:
                                S = "ENVMAP_BLENDING_MULTIPLY";
                                break;
                            case n.MixOperation:
                                S = "ENVMAP_BLENDING_MIX";
                                break;
                            case n.AddOperation:
                                S = "ENVMAP_BLENDING_ADD"
                        }
                    }
                    var T, A, E = t.gammaFactor > 0 ? t.gammaFactor : 1,
                        C = o(v, m, t.extensions),
                        P = a(y),
                        L = g.createProgram();
                    f instanceof n.RawShaderMaterial ? (T = [P].filter(h).join("\n"), A = [P].filter(h).join("\n")) : (T = ["precision " + m.precision + " float;", "precision " + m.precision + " int;", "#define SHADER_NAME " + f.__webglShader.name, P, m.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + E, "#define MAX_BONES " + m.maxBones, m.map ? "#define USE_MAP" : "", m.envMap ? "#define USE_ENVMAP" : "", m.envMap ? "#define " + M : "", m.lightMap ? "#define USE_LIGHTMAP" : "", m.aoMap ? "#define USE_AOMAP" : "", m.emissiveMap ? "#define USE_EMISSIVEMAP" : "", m.bumpMap ? "#define USE_BUMPMAP" : "", m.normalMap ? "#define USE_NORMALMAP" : "", m.displacementMap && m.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", m.specularMap ? "#define USE_SPECULARMAP" : "", m.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", m.metalnessMap ? "#define USE_METALNESSMAP" : "", m.alphaMap ? "#define USE_ALPHAMAP" : "", m.vertexColors ? "#define USE_COLOR" : "", m.flatShading ? "#define FLAT_SHADED" : "", m.skinning ? "#define USE_SKINNING" : "", m.useVertexTexture ? "#define BONE_TEXTURE" : "", m.morphTargets ? "#define USE_MORPHTARGETS" : "", m.morphNormals && m.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", m.doubleSided ? "#define DOUBLE_SIDED" : "", m.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + m.numClippingPlanes, m.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", m.shadowMapEnabled ? "#define " + x : "", m.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", m.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", m.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter(h).join("\n"),
                        A = [C, "precision " + m.precision + " float;", "precision " + m.precision + " int;", "#define SHADER_NAME " + f.__webglShader.name, P, m.alphaTest ? "#define ALPHATEST " + m.alphaTest : "", "#define GAMMA_FACTOR " + E, m.useFog && m.fog ? "#define USE_FOG" : "", m.useFog && m.fogExp ? "#define FOG_EXP2" : "", m.map ? "#define USE_MAP" : "", m.envMap ? "#define USE_ENVMAP" : "", m.envMap ? "#define " + w : "", m.envMap ? "#define " + M : "", m.envMap ? "#define " + S : "", m.lightMap ? "#define USE_LIGHTMAP" : "", m.aoMap ? "#define USE_AOMAP" : "", m.emissiveMap ? "#define USE_EMISSIVEMAP" : "", m.bumpMap ? "#define USE_BUMPMAP" : "", m.normalMap ? "#define USE_NORMALMAP" : "", m.specularMap ? "#define USE_SPECULARMAP" : "", m.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", m.metalnessMap ? "#define USE_METALNESSMAP" : "", m.alphaMap ? "#define USE_ALPHAMAP" : "", m.vertexColors ? "#define USE_COLOR" : "", m.flatShading ? "#define FLAT_SHADED" : "", m.doubleSided ? "#define DOUBLE_SIDED" : "", m.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + m.numClippingPlanes, m.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", m.shadowMapEnabled ? "#define " + x : "", m.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", m.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", m.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", m.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", m.envMap && t.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", m.toneMapping !== n.NoToneMapping ? "#define TONE_MAPPING" : "", m.toneMapping !== n.NoToneMapping ? n.ShaderChunk.tonemapping_pars_fragment : "", m.toneMapping !== n.NoToneMapping ? r("toneMapping", m.toneMapping) : "", m.outputEncoding || m.mapEncoding || m.envMapEncoding || m.emissiveMapEncoding ? n.ShaderChunk.encodings_pars_fragment : "", m.mapEncoding ? e("mapTexelToLinear", m.mapEncoding) : "", m.envMapEncoding ? e("envMapTexelToLinear", m.envMapEncoding) : "", m.emissiveMapEncoding ? e("emissiveMapTexelToLinear", m.emissiveMapEncoding) : "", m.outputEncoding ? i("linearToOutputTexel", m.outputEncoding) : "", m.depthPacking ? "#define DEPTH_PACKING " + f.depthPacking : "", "\n"].filter(h).join("\n")), _ = c(_, m), _ = u(_, m), b = c(b, m), b = u(b, m), f instanceof n.ShaderMaterial == !1 && (_ = l(_), b = l(b));
                    var R = T + _,
                        k = A + b,
                        I = n.WebGLShader(g, g.VERTEX_SHADER, R),
                        D = n.WebGLShader(g, g.FRAGMENT_SHADER, k);
                    g.attachShader(L, I), g.attachShader(L, D), void 0 !== f.index0AttributeName ? g.bindAttribLocation(L, 0, f.index0AttributeName) : m.morphTargets === !0 && g.bindAttribLocation(L, 0, "position"), g.linkProgram(L);
                    var B = g.getProgramInfoLog(L),
                        O = g.getShaderInfoLog(I),
                        j = g.getShaderInfoLog(D),
                        U = !0,
                        N = !0;
                    g.getProgramParameter(L, g.LINK_STATUS) === !1 ? U = !1 : "" !== B || "" !== O && "" !== j || (N = !1), N && (this.diagnostics = {
                        runnable: U,
                        material: f,
                        programLog: B,
                        vertexShader: {
                            log: O,
                            prefix: T
                        },
                        fragmentShader: {
                            log: j,
                            prefix: A
                        }
                    }), g.deleteShader(I), g.deleteShader(D);
                    var F;
                    this.getUniforms = function() {
                        return void 0 === F && (F = new n.WebGLUniforms(g, L, t)), F
                    };
                    var V;
                    return this.getAttributes = function() {
                        return void 0 === V && (V = s(g, L)), V
                    }, this.destroy = function() {
                        g.deleteProgram(L), this.program = void 0
                    }, Object.defineProperties(this, {
                        uniforms: {
                            get: function() {
                                return this.getUniforms()
                            }
                        },
                        attributes: {
                            get: function() {
                                return this.getAttributes()
                            }
                        }
                    }), this.id = p++, this.code = d, this.usedTimes = 1, this.program = L, this.vertexShader = I, this.fragmentShader = D, this
                }
            }(), n.WebGLPrograms = function(t, e) {
                function i(t) {
                    if (e.floatVertexTextures && t && t.skeleton && t.skeleton.useVertexTexture) return 1024;
                    var i = e.maxVertexUniforms,
                        r = Math.floor((i - 20) / 4),
                        o = r;
                    return void 0 !== t && t instanceof n.SkinnedMesh && (o = Math.min(t.skeleton.bones.length, o), o < t.skeleton.bones.length), o
                }

                function r(t, e) {
                    var i;
                    return t ? t instanceof n.Texture ? i = t.encoding : t instanceof n.WebGLRenderTarget && (i = t.texture.encoding) : i = n.LinearEncoding, i === n.LinearEncoding && e && (i = n.GammaEncoding), i
                }
                var o = [],
                    a = {
                        MeshDepthMaterial: "depth",
                        MeshNormalMaterial: "normal",
                        MeshBasicMaterial: "basic",
                        MeshLambertMaterial: "lambert",
                        MeshPhongMaterial: "phong",
                        MeshStandardMaterial: "physical",
                        MeshPhysicalMaterial: "physical",
                        LineBasicMaterial: "basic",
                        LineDashedMaterial: "dashed",
                        PointsMaterial: "points"
                    },
                    s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "depthPacking"];
                this.getParameters = function(o, s, h, u, c) {
                    var l = a[o.type],
                        p = i(c),
                        d = t.getPrecision();
                    null !== o.precision && (d = e.getMaxPrecision(o.precision), d !== o.precision);
                    var f = t.getCurrentRenderTarget(),
                        m = {
                            shaderID: l,
                            precision: d,
                            supportsVertexTextures: e.vertexTextures,
                            outputEncoding: r(f ? f.texture : null, t.gammaOutput),
                            map: !!o.map,
                            mapEncoding: r(o.map, t.gammaInput),
                            envMap: !!o.envMap,
                            envMapMode: o.envMap && o.envMap.mapping,
                            envMapEncoding: r(o.envMap, t.gammaInput),
                            envMapCubeUV: !!o.envMap && (o.envMap.mapping === n.CubeUVReflectionMapping || o.envMap.mapping === n.CubeUVRefractionMapping),
                            lightMap: !!o.lightMap,
                            aoMap: !!o.aoMap,
                            emissiveMap: !!o.emissiveMap,
                            emissiveMapEncoding: r(o.emissiveMap, t.gammaInput),
                            bumpMap: !!o.bumpMap,
                            normalMap: !!o.normalMap,
                            displacementMap: !!o.displacementMap,
                            roughnessMap: !!o.roughnessMap,
                            metalnessMap: !!o.metalnessMap,
                            specularMap: !!o.specularMap,
                            alphaMap: !!o.alphaMap,
                            combine: o.combine,
                            vertexColors: o.vertexColors,
                            fog: h,
                            useFog: o.fog,
                            fogExp: h instanceof n.FogExp2,
                            flatShading: o.shading === n.FlatShading,
                            sizeAttenuation: o.sizeAttenuation,
                            logarithmicDepthBuffer: e.logarithmicDepthBuffer,
                            skinning: o.skinning,
                            maxBones: p,
                            useVertexTexture: e.floatVertexTextures && c && c.skeleton && c.skeleton.useVertexTexture,
                            morphTargets: o.morphTargets,
                            morphNormals: o.morphNormals,
                            maxMorphTargets: t.maxMorphTargets,
                            maxMorphNormals: t.maxMorphNormals,
                            numDirLights: s.directional.length,
                            numPointLights: s.point.length,
                            numSpotLights: s.spot.length,
                            numHemiLights: s.hemi.length,
                            numClippingPlanes: u,
                            shadowMapEnabled: t.shadowMap.enabled && c.receiveShadow && s.shadows.length > 0,
                            shadowMapType: t.shadowMap.type,
                            toneMapping: t.toneMapping,
                            physicallyCorrectLights: t.physicallyCorrectLights,
                            premultipliedAlpha: o.premultipliedAlpha,
                            alphaTest: o.alphaTest,
                            doubleSided: o.side === n.DoubleSide,
                            flipSided: o.side === n.BackSide,
                            depthPacking: void 0 !== o.depthPacking ? o.depthPacking : !1
                        };
                    return m
                }, this.getProgramCode = function(t, e) {
                    var i = [];
                    if (e.shaderID ? i.push(e.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), void 0 !== t.defines)
                        for (var n in t.defines) i.push(n), i.push(t.defines[n]);
                    for (var r = 0; r < s.length; r++) i.push(e[s[r]]);
                    return i.join()
                }, this.acquireProgram = function(e, i, r) {
                    for (var a, s = 0, h = o.length; h > s; s++) {
                        var u = o[s];
                        if (u.code === r) {
                            a = u, ++a.usedTimes;
                            break
                        }
                    }
                    return void 0 === a && (a = new n.WebGLProgram(t, r, e, i), o.push(a)), a
                }, this.releaseProgram = function(t) {
                    if (0 === --t.usedTimes) {
                        var e = o.indexOf(t);
                        o[e] = o[o.length - 1], o.pop(), t.destroy()
                    }
                }, this.programs = o
            }, n.WebGLProperties = function() {
                var t = {};
                this.get = function(e) {
                    var i = e.uuid,
                        n = t[i];
                    return void 0 === n && (n = {}, t[i] = n), n
                }, this["delete"] = function(e) {
                    delete t[e.uuid]
                }, this.clear = function() {
                    t = {}
                }
            }, n.WebGLShader = function() {
                return function(t, e, i) {
                    var n = t.createShader(e);
                    return t.shaderSource(n, i), t.compileShader(n), t.getShaderParameter(n, t.COMPILE_STATUS) === !1, "" !== t.getShaderInfoLog(n), n
                }
            }(), n.WebGLShadowMap = function(t, e, i) {
                function r(e, i, r, o) {
                    var a = e.geometry,
                        s = null,
                        h = y,
                        u = e.customDepthMaterial;
                    if (r && (h = _, u = e.customDistanceMaterial), u) s = u;
                    else {
                        var c = void 0 !== a.morphTargets && a.morphTargets.length > 0 && i.morphTargets,
                            l = e instanceof n.SkinnedMesh && i.skinning,
                            p = 0;
                        c && (p |= m), l && (p |= g), s = h[p]
                    }
                    if (t.localClippingEnabled && i.clipShadows === !0 && 0 !== i.clippingPlanes.length) {
                        var d = s.uuid,
                            f = i.uuid,
                            v = b[d];
                        void 0 === v && (v = {}, b[d] = v);
                        var x = v[f];
                        void 0 === x && (x = s.clone(), v[f] = x), s = x
                    }
                    s.visible = i.visible, s.wireframe = i.wireframe;
                    var w = i.side;
                    return k.renderSingleSided && w == n.DoubleSide && (w = n.FrontSide), k.renderReverseSided && (w === n.FrontSide ? w = n.BackSide : w === n.BackSide && (w = n.FrontSide)), s.side = w, s.clipShadows = i.clipShadows, s.clippingPlanes = i.clippingPlanes, s.wireframeLinewidth = i.wireframeLinewidth, s.linewidth = i.linewidth, r && void 0 !== s.uniforms.lightPos && s.uniforms.lightPos.value.copy(o), s
                }

                function o(t, e, i) {
                    if (t.visible !== !1) {
                        if (t.layers.test(e.layers) && (t instanceof n.Mesh || t instanceof n.Line || t instanceof n.Points) && t.castShadow && (t.frustumCulled === !1 || h.intersectsObject(t) === !0)) {
                            var r = t.material;
                            r.visible === !0 && (t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld), f.push(t))
                        }
                        for (var a = t.children, s = 0, u = a.length; u > s; s++) o(a[s], e, i)
                    }
                }
                var a = t.context,
                    s = t.state,
                    h = new n.Frustum,
                    u = new n.Matrix4,
                    c = e.shadows,
                    l = new n.Vector2,
                    p = new n.Vector3,
                    d = new n.Vector3,
                    f = [],
                    m = 1,
                    g = 2,
                    v = (m | g) + 1,
                    y = new Array(v),
                    _ = new Array(v),
                    b = {},
                    x = [new n.Vector3(1, 0, 0), new n.Vector3(-1, 0, 0), new n.Vector3(0, 0, 1), new n.Vector3(0, 0, -1), new n.Vector3(0, 1, 0), new n.Vector3(0, -1, 0)],
                    w = [new n.Vector3(0, 1, 0), new n.Vector3(0, 1, 0), new n.Vector3(0, 1, 0), new n.Vector3(0, 1, 0), new n.Vector3(0, 0, 1), new n.Vector3(0, 0, -1)],
                    M = [new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4, new n.Vector4],
                    S = new n.MeshDepthMaterial;
                S.depthPacking = n.RGBADepthPacking, S.clipping = !0;
                for (var T = n.ShaderLib.distanceRGBA, A = n.UniformsUtils.clone(T.uniforms), E = 0; E !== v; ++E) {
                    var C = 0 !== (E & m),
                        P = 0 !== (E & g),
                        L = S.clone();
                    L.morphTargets = C, L.skinning = P, y[E] = L;
                    var R = new n.ShaderMaterial({
                        defines: {
                            USE_SHADOWMAP: ""
                        },
                        uniforms: A,
                        vertexShader: T.vertexShader,
                        fragmentShader: T.fragmentShader,
                        morphTargets: C,
                        skinning: P,
                        clipping: !0
                    });
                    _[E] = R
                }
                var k = this;
                this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = n.PCFShadowMap, this.renderReverseSided = !0, this.renderSingleSided = !0, this.render = function(e, m) {
                    if (k.enabled !== !1 && (k.autoUpdate !== !1 || k.needsUpdate !== !1) && 0 !== c.length) {
                        s.clearColor(1, 1, 1, 1), s.disable(a.BLEND), s.setDepthTest(!0), s.setScissorTest(!1);
                        for (var g, v, y = 0, _ = c.length; _ > y; y++) {
                            var b = c[y],
                                S = b.shadow;
                            if (void 0 !== S) {
                                var T = S.camera;
                                if (l.copy(S.mapSize), b instanceof n.PointLight) {
                                    g = 6, v = !0;
                                    var A = l.x,
                                        E = l.y;
                                    M[0].set(2 * A, E, A, E), M[1].set(0, E, A, E), M[2].set(3 * A, E, A, E), M[3].set(A, E, A, E), M[4].set(3 * A, 0, A, E), M[5].set(A, 0, A, E), l.x *= 4, l.y *= 2
                                } else g = 1, v = !1;
                                if (null === S.map) {
                                    var C = {
                                        minFilter: n.NearestFilter,
                                        magFilter: n.NearestFilter,
                                        format: n.RGBAFormat
                                    };
                                    S.map = new n.WebGLRenderTarget(l.x, l.y, C), T.updateProjectionMatrix()
                                }
                                S instanceof n.SpotLightShadow && S.update(b);
                                var P = S.map,
                                    L = S.matrix;
                                d.setFromMatrixPosition(b.matrixWorld), T.position.copy(d), t.setRenderTarget(P), t.clear();
                                for (var R = 0; g > R; R++) {
                                    if (v) {
                                        p.copy(T.position), p.add(x[R]), T.up.copy(w[R]), T.lookAt(p);
                                        var I = M[R];
                                        s.viewport(I)
                                    } else p.setFromMatrixPosition(b.target.matrixWorld), T.lookAt(p);
                                    T.updateMatrixWorld(), T.matrixWorldInverse.getInverse(T.matrixWorld), L.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), L.multiply(T.projectionMatrix), L.multiply(T.matrixWorldInverse), u.multiplyMatrices(T.projectionMatrix, T.matrixWorldInverse), h.setFromMatrix(u), f.length = 0, o(e, m, T);
                                    for (var D = 0, B = f.length; B > D; D++) {
                                        var O = f[D],
                                            j = i.update(O),
                                            U = O.material;
                                        if (U instanceof n.MultiMaterial)
                                            for (var N = j.groups, F = U.materials, V = 0, G = N.length; G > V; V++) {
                                                var z = N[V],
                                                    H = F[z.materialIndex];
                                                if (H.visible === !0) {
                                                    var W = r(O, H, v, d);
                                                    t.renderBufferDirect(T, null, j, W, O, z)
                                                }
                                            } else {
                                                var W = r(O, U, v, d);
                                                t.renderBufferDirect(T, null, j, W, O, null)
                                            }
                                    }
                                }
                            }
                        }
                        var X = t.getClearColor(),
                            q = t.getClearAlpha();
                        t.setClearColor(X, q), k.needsUpdate = !1
                    }
                }
            }, n.WebGLState = function(t, e, i) {
                function r(e, i, n) {
                    var r = new Uint8Array(4),
                        o = t.createTexture();
                    t.bindTexture(e, o), t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
                    for (var a = 0; n > a; a++) t.texImage2D(i + a, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
                    return o
                }
                var o = this;
                this.buffers = {
                    color: new n.WebGLColorBuffer(t, this),
                    depth: new n.WebGLDepthBuffer(t, this),
                    stencil: new n.WebGLStencilBuffer(t, this)
                };
                var a = t.getParameter(t.MAX_VERTEX_ATTRIBS),
                    s = new Uint8Array(a),
                    h = new Uint8Array(a),
                    u = new Uint8Array(a),
                    c = {},
                    l = null,
                    p = null,
                    d = null,
                    f = null,
                    m = null,
                    g = null,
                    v = null,
                    y = null,
                    _ = !1,
                    b = null,
                    x = null,
                    w = null,
                    M = null,
                    S = null,
                    T = null,
                    A = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
                    E = null,
                    C = {},
                    P = new n.Vector4,
                    L = new n.Vector4,
                    R = {};
                R[t.TEXTURE_2D] = r(t.TEXTURE_2D, t.TEXTURE_2D, 1), R[t.TEXTURE_CUBE_MAP] = r(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6), this.init = function() {
                    this.clearColor(0, 0, 0, 1), this.clearDepth(1), this.clearStencil(0), this.enable(t.DEPTH_TEST), this.setDepthFunc(n.LessEqualDepth), this.setFlipSided(!1), this.setCullFace(n.CullFaceBack), this.enable(t.CULL_FACE), this.enable(t.BLEND), this.setBlending(n.NormalBlending)
                }, this.initAttributes = function() {
                    for (var t = 0, e = s.length; e > t; t++) s[t] = 0
                }, this.enableAttribute = function(i) {
                    if (s[i] = 1, 0 === h[i] && (t.enableVertexAttribArray(i), h[i] = 1), 0 !== u[i]) {
                        var n = e.get("ANGLE_instanced_arrays");
                        n.vertexAttribDivisorANGLE(i, 0), u[i] = 0
                    }
                }, this.enableAttributeAndDivisor = function(e, i, n) {
                    s[e] = 1, 0 === h[e] && (t.enableVertexAttribArray(e), h[e] = 1), u[e] !== i && (n.vertexAttribDivisorANGLE(e, i), u[e] = i)
                }, this.disableUnusedAttributes = function() {
                    for (var e = 0, i = h.length; e !== i; ++e) h[e] !== s[e] && (t.disableVertexAttribArray(e), h[e] = 0)
                }, this.enable = function(e) {
                    c[e] !== !0 && (t.enable(e), c[e] = !0)
                }, this.disable = function(e) {
                    c[e] !== !1 && (t.disable(e), c[e] = !1)
                }, this.getCompressedTextureFormats = function() {
                    if (null === l && (l = [], e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                        for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++) l.push(i[n]);
                    return l
                }, this.setBlending = function(e, r, o, a, s, h, u, c) {
                    return e === n.NoBlending ? (this.disable(t.BLEND), void(p = e)) : (this.enable(t.BLEND), e === p && c === _ || (e === n.AdditiveBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE)) : e === n.SubtractiveBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : e === n.MultiplyBlending ? c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.SRC_COLOR)) : c ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)), p = e, _ = c), void(e === n.CustomBlending ? (s = s || r, h = h || o, u = u || a, r === d && s === g || (t.blendEquationSeparate(i(r), i(s)), d = r, g = s), o === f && a === m && h === v && u === y || (t.blendFuncSeparate(i(o), i(a), i(h), i(u)), f = o, m = a, v = h, y = u)) : (d = null, f = null, m = null, g = null, v = null, y = null)))
                }, this.setColorWrite = function(t) {
                    this.buffers.color.setMask(t)
                }, this.setDepthTest = function(t) {
                    this.buffers.depth.setTest(t)
                }, this.setDepthWrite = function(t) {
                    this.buffers.depth.setMask(t)
                }, this.setDepthFunc = function(t) {
                    this.buffers.depth.setFunc(t)
                }, this.setStencilTest = function(t) {
                    this.buffers.stencil.setTest(t)
                }, this.setStencilWrite = function(t) {
                    this.buffers.stencil.setMask(t)
                }, this.setStencilFunc = function(t, e, i) {
                    this.buffers.stencil.setFunc(t, e, i)
                }, this.setStencilOp = function(t, e, i) {
                    this.buffers.stencil.setOp(t, e, i)
                }, this.setFlipSided = function(e) {
                    b !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), b = e)
                }, this.setCullFace = function(e) {
                    e !== n.CullFaceNone ? (this.enable(t.CULL_FACE), e !== x && (e === n.CullFaceBack ? t.cullFace(t.BACK) : e === n.CullFaceFront ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : this.disable(t.CULL_FACE), x = e
                }, this.setLineWidth = function(e) {
                    e !== w && (t.lineWidth(e), w = e)
                }, this.setPolygonOffset = function(e, i, n) {
                    e ? (this.enable(t.POLYGON_OFFSET_FILL), M === i && S === n || (t.polygonOffset(i, n), M = i, S = n)) : this.disable(t.POLYGON_OFFSET_FILL)
                }, this.getScissorTest = function() {
                    return T
                }, this.setScissorTest = function(e) {
                    T = e, e ? this.enable(t.SCISSOR_TEST) : this.disable(t.SCISSOR_TEST)
                }, this.activeTexture = function(e) {
                    void 0 === e && (e = t.TEXTURE0 + A - 1), E !== e && (t.activeTexture(e), E = e)
                }, this.bindTexture = function(e, i) {
                    null === E && o.activeTexture();
                    var n = C[E];
                    void 0 === n && (n = {
                        type: void 0,
                        texture: void 0
                    }, C[E] = n), n.type === e && n.texture === i || (t.bindTexture(e, i || R[e]), n.type = e, n.texture = i)
                }, this.compressedTexImage2D = function() {
                    try {
                        t.compressedTexImage2D.apply(t, arguments)
                    } catch (e) {}
                }, this.texImage2D = function() {
                    try {
                        t.texImage2D.apply(t, arguments)
                    } catch (e) {}
                }, this.clearColor = function(t, e, i, n) {
                    this.buffers.color.setClear(t, e, i, n)
                }, this.clearDepth = function(t) {
                    this.buffers.depth.setClear(t)
                }, this.clearStencil = function(t) {
                    this.buffers.stencil.setClear(t)
                }, this.scissor = function(e) {
                    P.equals(e) === !1 && (t.scissor(e.x, e.y, e.z, e.w), P.copy(e))
                }, this.viewport = function(e) {
                    L.equals(e) === !1 && (t.viewport(e.x, e.y, e.z, e.w), L.copy(e))
                }, this.reset = function() {
                    for (var e = 0; e < h.length; e++) 1 === h[e] && (t.disableVertexAttribArray(e), h[e] = 0);
                    c = {}, l = null, E = null, C = {}, p = null, b = null, x = null, this.buffers.color.reset(), this.buffers.depth.reset(), this.buffers.stencil.reset()
                }
            }, n.WebGLColorBuffer = function(t, e) {
                var i = !1,
                    r = new n.Vector4,
                    o = null,
                    a = new n.Vector4;
                this.setMask = function(e) {
                    o === e || i || (t.colorMask(e, e, e, e), o = e)
                }, this.setLocked = function(t) {
                    i = t
                }, this.setClear = function(e, i, n, o) {
                    r.set(e, i, n, o), a.equals(r) === !1 && (t.clearColor(e, i, n, o), a.copy(r))
                }, this.reset = function() {
                    i = !1, o = null, a = new n.Vector4
                }
            }, n.WebGLDepthBuffer = function(t, e) {
                var i = !1,
                    r = null,
                    o = null,
                    a = null;
                this.setTest = function(i) {
                    i ? e.enable(t.DEPTH_TEST) : e.disable(t.DEPTH_TEST)
                }, this.setMask = function(e) {
                    r === e || i || (t.depthMask(e), r = e)
                }, this.setFunc = function(e) {
                    if (o !== e) {
                        if (e) switch (e) {
                            case n.NeverDepth:
                                t.depthFunc(t.NEVER);
                                break;
                            case n.AlwaysDepth:
                                t.depthFunc(t.ALWAYS);
                                break;
                            case n.LessDepth:
                                t.depthFunc(t.LESS);
                                break;
                            case n.LessEqualDepth:
                                t.depthFunc(t.LEQUAL);
                                break;
                            case n.EqualDepth:
                                t.depthFunc(t.EQUAL);
                                break;
                            case n.GreaterEqualDepth:
                                t.depthFunc(t.GEQUAL);
                                break;
                            case n.GreaterDepth:
                                t.depthFunc(t.GREATER);
                                break;
                            case n.NotEqualDepth:
                                t.depthFunc(t.NOTEQUAL);
                                break;
                            default:
                                t.depthFunc(t.LEQUAL)
                        } else t.depthFunc(t.LEQUAL);
                        o = e
                    }
                }, this.setLocked = function(t) {
                    i = t
                }, this.setClear = function(e) {
                    a !== e && (t.clearDepth(e), a = e)
                }, this.reset = function() {
                    i = !1, r = null, o = null, a = null
                }
            }, n.WebGLStencilBuffer = function(t, e) {
                var i = !1,
                    n = null,
                    r = null,
                    o = null,
                    a = null,
                    s = null,
                    h = null,
                    u = null,
                    c = null;
                this.setTest = function(i) {
                    i ? e.enable(t.STENCIL_TEST) : e.disable(t.STENCIL_TEST)
                }, this.setMask = function(e) {
                    n === e || i || (t.stencilMask(e), n = e)
                }, this.setFunc = function(e, i, n) {
                    r === e && o === i && a === n || (t.stencilFunc(e, i, n), r = e, o = i, a = n)
                }, this.setOp = function(e, i, n) {
                    s === e && h === i && u === n || (t.stencilOp(e, i, n), s = e, h = i, u = n)
                }, this.setLocked = function(t) {
                    i = t
                }, this.setClear = function(e) {
                    c !== e && (t.clearStencil(e), c = e)
                }, this.reset = function() {
                    i = !1, n = null, r = null, o = null, a = null, s = null, h = null, u = null, c = null
                }
            }, n.WebGLTextures = function(t, e, i, r, o, a, s) {
                function h(t, e) {
                    if (t.width > e || t.height > e) {
                        var i = e / Math.max(t.width, t.height),
                            n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        n.width = Math.floor(t.width * i), n.height = Math.floor(t.height * i);
                        var r = n.getContext("2d");
                        return r.drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height), n
                    }
                    return t
                }

                function u(t) {
                    return n.Math.isPowerOfTwo(t.width) && n.Math.isPowerOfTwo(t.height)
                }

                function c(t) {
                    if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                        var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        e.width = n.Math.nearestPowerOfTwo(t.width), e.height = n.Math.nearestPowerOfTwo(t.height);
                        var i = e.getContext("2d");
                        return i.drawImage(t, 0, 0, e.width, e.height), e
                    }
                    return t
                }

                function l(t) {
                    return t.wrapS !== n.ClampToEdgeWrapping || t.wrapT !== n.ClampToEdgeWrapping ? !0 : t.minFilter !== n.NearestFilter && t.minFilter !== n.LinearFilter
                }

                function p(e) {
                    return e === n.NearestFilter || e === n.NearestMipMapNearestFilter || e === n.NearestMipMapLinearFilter ? t.NEAREST : t.LINEAR
                }

                function d(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", d), m(e), C.textures--
                }

                function f(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", f), g(e), C.textures--
                }

                function m(e) {
                    var i = r.get(e);
                    if (e.image && i.__image__webglTextureCube) t.deleteTexture(i.__image__webglTextureCube);
                    else {
                        if (void 0 === i.__webglInit) return;
                        t.deleteTexture(i.__webglTexture)
                    }
                    r["delete"](e)
                }

                function g(e) {
                    var i = r.get(e),
                        o = r.get(e.texture);
                    if (e) {
                        if (void 0 !== o.__webglTexture && t.deleteTexture(o.__webglTexture), e.depthTexture && e.depthTexture.dispose(), e instanceof n.WebGLRenderTargetCube)
                            for (var a = 0; 6 > a; a++) t.deleteFramebuffer(i.__webglFramebuffer[a]), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[a]);
                        else t.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
                        r["delete"](e.texture), r["delete"](e)
                    }
                }

                function v(e, n) {
                    var o = r.get(e);
                    if (e.version > 0 && o.__version !== e.version) {
                        var a = e.image;
                        if (void 0 === a);
                        else if (a.complete !== !1) return void x(o, e, n)
                    }
                    i.activeTexture(t.TEXTURE0 + n), i.bindTexture(t.TEXTURE_2D, o.__webglTexture)
                }

                function y(e, s) {
                    var c = r.get(e);
                    if (6 === e.image.length)
                        if (e.version > 0 && c.__version !== e.version) {
                            c.__image__webglTextureCube || (e.addEventListener("dispose", d), c.__image__webglTextureCube = t.createTexture(), C.textures++), i.activeTexture(t.TEXTURE0 + s), i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                            for (var l = e instanceof n.CompressedTexture, p = e.image[0] instanceof n.DataTexture, f = [], m = 0; 6 > m; m++) l || p ? f[m] = p ? e.image[m].image : e.image[m] : f[m] = h(e.image[m], o.maxCubemapSize);
                            var g = f[0],
                                v = u(g),
                                y = a(e.format),
                                _ = a(e.type);
                            b(t.TEXTURE_CUBE_MAP, e, v);
                            for (var m = 0; 6 > m; m++)
                                if (l)
                                    for (var x, w = f[m].mipmaps, M = 0, S = w.length; S > M; M++) x = w[M], e.format !== n.RGBAFormat && e.format !== n.RGBFormat ? i.getCompressedTextureFormats().indexOf(y) > -1 && i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, x.width, x.height, 0, x.data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, x.width, x.height, 0, y, _, x.data);
                                else p ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, f[m].width, f[m].height, 0, y, _, f[m].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, y, _, f[m]);
                            e.generateMipmaps && v && t.generateMipmap(t.TEXTURE_CUBE_MAP), c.__version = e.version, e.onUpdate && e.onUpdate(e)
                        } else i.activeTexture(t.TEXTURE0 + s), i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube)
                }

                function _(e, n) {
                    i.activeTexture(t.TEXTURE0 + n), i.bindTexture(t.TEXTURE_CUBE_MAP, r.get(e).__webglTexture)
                }

                function b(i, s, h) {
                    var u;
                    if (h ? (t.texParameteri(i, t.TEXTURE_WRAP_S, a(s.wrapS)), t.texParameteri(i, t.TEXTURE_WRAP_T, a(s.wrapT)), t.texParameteri(i, t.TEXTURE_MAG_FILTER, a(s.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, a(s.minFilter))) : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), s.wrapS !== n.ClampToEdgeWrapping || s.wrapT !== n.ClampToEdgeWrapping, t.texParameteri(i, t.TEXTURE_MAG_FILTER, p(s.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, p(s.minFilter)), s.minFilter !== n.NearestFilter && s.minFilter !== n.LinearFilter), u = e.get("EXT_texture_filter_anisotropic")) {
                        if (s.type === n.FloatType && null === e.get("OES_texture_float_linear")) return;
                        if (s.type === n.HalfFloatType && null === e.get("OES_texture_half_float_linear")) return;
                        (s.anisotropy > 1 || r.get(s).__currentAnisotropy) && (t.texParameterf(i, u.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.anisotropy, o.getMaxAnisotropy())), r.get(s).__currentAnisotropy = s.anisotropy)
                    }
                }

                function x(e, r, s) {
                    void 0 === e.__webglInit && (e.__webglInit = !0, r.addEventListener("dispose", d), e.__webglTexture = t.createTexture(), C.textures++), i.activeTexture(t.TEXTURE0 + s), i.bindTexture(t.TEXTURE_2D, e.__webglTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, r.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, r.unpackAlignment);
                    var p = h(r.image, o.maxTextureSize);
                    l(r) && u(p) === !1 && (p = c(p));
                    var f = u(p),
                        m = a(r.format),
                        g = a(r.type);
                    b(t.TEXTURE_2D, r, f);
                    var v, y = r.mipmaps;
                    if (r instanceof n.DepthTexture) {
                        var _ = t.DEPTH_COMPONENT;
                        if (r.type === n.FloatType) {
                            if (!P) throw new Error("Float Depth Texture only supported in WebGL2.0");
                            _ = t.DEPTH_COMPONENT32F
                        } else P && (_ = t.DEPTH_COMPONENT16);
                        i.texImage2D(t.TEXTURE_2D, 0, _, p.width, p.height, 0, m, g, null)
                    } else if (r instanceof n.DataTexture)
                        if (y.length > 0 && f) {
                            for (var x = 0, w = y.length; w > x; x++) v = y[x], i.texImage2D(t.TEXTURE_2D, x, m, v.width, v.height, 0, m, g, v.data);
                            r.generateMipmaps = !1
                        } else i.texImage2D(t.TEXTURE_2D, 0, m, p.width, p.height, 0, m, g, p.data);
                    else if (r instanceof n.CompressedTexture)
                        for (var x = 0, w = y.length; w > x; x++) v = y[x], r.format !== n.RGBAFormat && r.format !== n.RGBFormat ? i.getCompressedTextureFormats().indexOf(m) > -1 && i.compressedTexImage2D(t.TEXTURE_2D, x, m, v.width, v.height, 0, v.data) : i.texImage2D(t.TEXTURE_2D, x, m, v.width, v.height, 0, m, g, v.data);
                    else if (y.length > 0 && f) {
                        for (var x = 0, w = y.length; w > x; x++) v = y[x], i.texImage2D(t.TEXTURE_2D, x, m, m, g, v);
                        r.generateMipmaps = !1
                    } else i.texImage2D(t.TEXTURE_2D, 0, m, m, g, p);
                    r.generateMipmaps && f && t.generateMipmap(t.TEXTURE_2D), e.__version = r.version, r.onUpdate && r.onUpdate(r)
                }

                function w(e, n, o, s) {
                    var h = a(n.texture.format),
                        u = a(n.texture.type);
                    i.texImage2D(s, 0, h, n.width, n.height, 0, h, u, null), t.bindFramebuffer(t.FRAMEBUFFER, e), t.framebufferTexture2D(t.FRAMEBUFFER, o, s, r.get(n.texture).__webglTexture, 0), t.bindFramebuffer(t.FRAMEBUFFER, null)
                }

                function M(e, i) {
                    t.bindRenderbuffer(t.RENDERBUFFER, e), i.depthBuffer && !i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : i.depthBuffer && i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height), t.bindRenderbuffer(t.RENDERBUFFER, null)
                }

                function S(e, i) {
                    var o = i instanceof n.WebGLRenderTargetCube;
                    if (o) throw new Error("Depth Texture with cube render targets is not supported!");
                    if (t.bindFramebuffer(t.FRAMEBUFFER, e), !(i.depthTexture instanceof n.DepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    r.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width, i.depthTexture.image.height = i.height, i.depthTexture.needsUpdate = !0), v(i.depthTexture, 0);
                    var a = r.get(i.depthTexture).__webglTexture;
                    t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, a, 0)
                }

                function T(e) {
                    var i = r.get(e),
                        o = e instanceof n.WebGLRenderTargetCube;
                    if (e.depthTexture) {
                        if (o) throw new Error("target.depthTexture not supported in Cube render targets");
                        S(i.__webglFramebuffer, e)
                    } else if (o) {
                        i.__webglDepthbuffer = [];
                        for (var a = 0; 6 > a; a++) t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer[a]), i.__webglDepthbuffer[a] = t.createRenderbuffer(), M(i.__webglDepthbuffer[a], e)
                    } else t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer), i.__webglDepthbuffer = t.createRenderbuffer(), M(i.__webglDepthbuffer, e);
                    t.bindFramebuffer(t.FRAMEBUFFER, null)
                }

                function A(e) {
                    var o = r.get(e),
                        a = r.get(e.texture);
                    e.addEventListener("dispose", f), a.__webglTexture = t.createTexture(), C.textures++;
                    var s = e instanceof n.WebGLRenderTargetCube,
                        h = u(e);
                    if (s) {
                        o.__webglFramebuffer = [];
                        for (var c = 0; 6 > c; c++) o.__webglFramebuffer[c] = t.createFramebuffer()
                    } else o.__webglFramebuffer = t.createFramebuffer();
                    if (s) {
                        i.bindTexture(t.TEXTURE_CUBE_MAP, a.__webglTexture), b(t.TEXTURE_CUBE_MAP, e.texture, h);
                        for (var c = 0; 6 > c; c++) w(o.__webglFramebuffer[c], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + c);
                        e.texture.generateMipmaps && h && t.generateMipmap(t.TEXTURE_CUBE_MAP), i.bindTexture(t.TEXTURE_CUBE_MAP, null)
                    } else i.bindTexture(t.TEXTURE_2D, a.__webglTexture), b(t.TEXTURE_2D, e.texture, h), w(o.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D), e.texture.generateMipmaps && h && t.generateMipmap(t.TEXTURE_2D), i.bindTexture(t.TEXTURE_2D, null);
                    e.depthBuffer && T(e)
                }

                function E(e) {
                    var o = e.texture;
                    if (o.generateMipmaps && u(e) && o.minFilter !== n.NearestFilter && o.minFilter !== n.LinearFilter) {
                        var a = e instanceof n.WebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D,
                            s = r.get(o).__webglTexture;
                        i.bindTexture(a, s), t.generateMipmap(a), i.bindTexture(a, null)
                    }
                }
                var C = s.memory,
                    P = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
                this.setTexture2D = v, this.setTextureCube = y, this.setTextureCubeDynamic = _, this.setupRenderTarget = A, this.updateRenderTargetMipmap = E
            }, n.WebGLUniforms = function() {
                var t = new n.Texture,
                    e = new n.CubeTexture,
                    i = function() {
                        this.seq = [], this.map = {}
                    },
                    r = [],
                    o = [],
                    a = function(t, e, i) {
                        var n = t[0];
                        if (0 >= n || n > 0) return t;
                        var o = e * i,
                            a = r[o];
                        if (void 0 === a && (a = new Float32Array(o), r[o] = a), 0 !== e) {
                            n.toArray(a, 0);
                            for (var s = 1, h = 0; s !== e; ++s) h += i, t[s].toArray(a, h)
                        }
                        return a
                    },
                    s = function(t, e) {
                        var i = o[e];
                        void 0 === i && (i = new Int32Array(e), o[e] = i);
                        for (var n = 0; n !== e; ++n) i[n] = t.allocTextureUnit();
                        return i
                    },
                    h = function(t, e) {
                        t.uniform1f(this.addr, e)
                    },
                    u = function(t, e) {
                        t.uniform1i(this.addr, e)
                    },
                    c = function(t, e) {
                        void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
                    },
                    l = function(t, e) {
                        void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
                    },
                    p = function(t, e) {
                        void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
                    },
                    d = function(t, e) {
                        t.uniformMatrix2fv(this.addr, !1, e.elements || e)
                    },
                    f = function(t, e) {
                        t.uniformMatrix3fv(this.addr, !1, e.elements || e)
                    },
                    m = function(t, e) {
                        t.uniformMatrix4fv(this.addr, !1, e.elements || e)
                    },
                    g = function(e, i, n) {
                        var r = n.allocTextureUnit();
                        e.uniform1i(this.addr, r), n.setTexture2D(i || t, r)
                    },
                    v = function(t, i, n) {
                        var r = n.allocTextureUnit();
                        t.uniform1i(this.addr, r), n.setTextureCube(i || e, r)
                    },
                    y = function(t, e) {
                        t.uniform2iv(this.addr, e)
                    },
                    _ = function(t, e) {
                        t.uniform3iv(this.addr, e)
                    },
                    b = function(t, e) {
                        t.uniform4iv(this.addr, e)
                    },
                    x = function(t) {
                        switch (t) {
                            case 5126:
                                return h;
                            case 35664:
                                return c;
                            case 35665:
                                return l;
                            case 35666:
                                return p;
                            case 35674:
                                return d;
                            case 35675:
                                return f;
                            case 35676:
                                return m;
                            case 35678:
                                return g;
                            case 35680:
                                return v;
                            case 5124:
                            case 35670:
                                return u;
                            case 35667:
                            case 35671:
                                return y;
                            case 35668:
                            case 35672:
                                return _;
                            case 35669:
                            case 35673:
                                return b
                        }
                    },
                    w = function(t, e) {
                        t.uniform1fv(this.addr, e)
                    },
                    M = function(t, e) {
                        t.uniform1iv(this.addr, e)
                    },
                    S = function(t, e) {
                        t.uniform2fv(this.addr, a(e, this.size, 2))
                    },
                    T = function(t, e) {
                        t.uniform3fv(this.addr, a(e, this.size, 3))
                    },
                    A = function(t, e) {
                        t.uniform4fv(this.addr, a(e, this.size, 4))
                    },
                    E = function(t, e) {
                        t.uniformMatrix2fv(this.addr, !1, a(e, this.size, 4))
                    },
                    C = function(t, e) {
                        t.uniformMatrix3fv(this.addr, !1, a(e, this.size, 9))
                    },
                    P = function(t, e) {
                        t.uniformMatrix4fv(this.addr, !1, a(e, this.size, 16))
                    },
                    L = function(e, i, n) {
                        var r = i.length,
                            o = s(n, r);
                        e.uniform1iv(this.addr, o);
                        for (var a = 0; a !== r; ++a) n.setTexture2D(i[a] || t, o[a])
                    },
                    R = function(t, i, n) {
                        var r = i.length,
                            o = s(n, r);
                        t.uniform1iv(this.addr, o);
                        for (var a = 0; a !== r; ++a) n.setTextureCube(i[a] || e, o[a])
                    },
                    k = function(t) {
                        switch (t) {
                            case 5126:
                                return w;
                            case 35664:
                                return S;
                            case 35665:
                                return T;
                            case 35666:
                                return A;
                            case 35674:
                                return E;
                            case 35675:
                                return C;
                            case 35676:
                                return P;
                            case 35678:
                                return L;
                            case 35680:
                                return R;
                            case 5124:
                            case 35670:
                                return M;
                            case 35667:
                            case 35671:
                                return y;
                            case 35668:
                            case 35672:
                                return _;
                            case 35669:
                            case 35673:
                                return b
                        }
                    },
                    I = function(t, e, i) {
                        this.id = t, this.addr = i, this.setValue = x(e.type)
                    },
                    D = function(t, e, i) {
                        this.id = t, this.addr = i, this.size = e.size, this.setValue = k(e.type)
                    },
                    B = function(t) {
                        this.id = t, i.call(this)
                    };
                B.prototype.setValue = function(t, e) {
                    for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
                        var o = i[n];
                        o.setValue(t, e[o.id])
                    }
                };
                var O = /([\w\d_]+)(\])?(\[|\.)?/g,
                    j = function(t, e) {
                        t.seq.push(e), t.map[e.id] = e
                    },
                    U = function(t, e, i) {
                        var n = t.name,
                            r = n.length;
                        for (O.lastIndex = 0;;) {
                            var o = O.exec(n),
                                a = O.lastIndex,
                                s = o[1],
                                h = "]" === o[2],
                                u = o[3];
                            if (h && (s = 0 | s), void 0 === u || "[" === u && a + 2 === r) {
                                j(i, void 0 === u ? new I(s, t, e) : new D(s, t, e));
                                break
                            }
                            var c = i.map,
                                l = c[s];
                            void 0 === l && (l = new B(s), j(i, l)), i = l
                        }
                    },
                    N = function(t, e, n) {
                        i.call(this), this.renderer = n;
                        for (var r = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), o = 0; o !== r; ++o) {
                            var a = t.getActiveUniform(e, o),
                                s = a.name,
                                h = t.getUniformLocation(e, s);
                            U(a, h, this)
                        }
                    };
                return N.prototype.setValue = function(t, e, i) {
                    var n = this.map[e];
                    void 0 !== n && n.setValue(t, i, this.renderer)
                }, N.prototype.set = function(t, e, i) {
                    var n = this.map[i];
                    void 0 !== n && n.setValue(t, e[i], this.renderer);
                }, N.prototype.setOptional = function(t, e, i) {
                    var n = e[i];
                    void 0 !== n && this.setValue(t, i, n)
                }, N.upload = function(t, e, i, n) {
                    for (var r = 0, o = e.length; r !== o; ++r) {
                        var a = e[r],
                            s = i[a.id];
                        s.needsUpdate !== !1 && a.setValue(t, s.value, n)
                    }
                }, N.seqWithValue = function(t, e) {
                    for (var i = [], n = 0, r = t.length; n !== r; ++n) {
                        var o = t[n];
                        o.id in e && i.push(o)
                    }
                    return i
                }, N.splitDynamic = function(t, e) {
                    for (var i = null, n = t.length, r = 0, o = 0; o !== n; ++o) {
                        var a = t[o],
                            s = e[a.id];
                        s && s.dynamic === !0 ? (null === i && (i = []), i.push(a)) : (o > r && (t[r] = a), ++r)
                    }
                    return n > r && (t.length = r), i
                }, N.evalDynamic = function(t, e, i, n) {
                    for (var r = 0, o = t.length; r !== o; ++r) {
                        var a = e[t[r].id],
                            s = a.onUpdateCallback;
                        void 0 !== s && s.call(a, i, n)
                    }
                }, N
            }(), n.LensFlarePlugin = function(t, e) {
                function i() {
                    var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]),
                        e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    o = d.createBuffer(), a = d.createBuffer(), d.bindBuffer(d.ARRAY_BUFFER, o), d.bufferData(d.ARRAY_BUFFER, t, d.STATIC_DRAW), d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, a), d.bufferData(d.ELEMENT_ARRAY_BUFFER, e, d.STATIC_DRAW), l = d.createTexture(), p = d.createTexture(), f.bindTexture(d.TEXTURE_2D, l), d.texImage2D(d.TEXTURE_2D, 0, d.RGB, 16, 16, 0, d.RGB, d.UNSIGNED_BYTE, null), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_S, d.CLAMP_TO_EDGE), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_T, d.CLAMP_TO_EDGE), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST), f.bindTexture(d.TEXTURE_2D, p), d.texImage2D(d.TEXTURE_2D, 0, d.RGBA, 16, 16, 0, d.RGBA, d.UNSIGNED_BYTE, null), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_S, d.CLAMP_TO_EDGE), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_WRAP_T, d.CLAMP_TO_EDGE), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.NEAREST), s = {
                        vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                        fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                    }, h = r(s), u = {
                        vertex: d.getAttribLocation(h, "position"),
                        uv: d.getAttribLocation(h, "uv")
                    }, c = {
                        renderType: d.getUniformLocation(h, "renderType"),
                        map: d.getUniformLocation(h, "map"),
                        occlusionMap: d.getUniformLocation(h, "occlusionMap"),
                        opacity: d.getUniformLocation(h, "opacity"),
                        color: d.getUniformLocation(h, "color"),
                        scale: d.getUniformLocation(h, "scale"),
                        rotation: d.getUniformLocation(h, "rotation"),
                        screenPosition: d.getUniformLocation(h, "screenPosition")
                    }
                }

                function r(e) {
                    var i = d.createProgram(),
                        n = d.createShader(d.FRAGMENT_SHADER),
                        r = d.createShader(d.VERTEX_SHADER),
                        o = "precision " + t.getPrecision() + " float;\n";
                    return d.shaderSource(n, o + e.fragmentShader), d.shaderSource(r, o + e.vertexShader), d.compileShader(n), d.compileShader(r), d.attachShader(i, n), d.attachShader(i, r), d.linkProgram(i), i
                }
                var o, a, s, h, u, c, l, p, d = t.context,
                    f = t.state;
                this.render = function(r, s, m) {
                    if (0 !== e.length) {
                        var g = new n.Vector3,
                            v = m.w / m.z,
                            y = .5 * m.z,
                            _ = .5 * m.w,
                            b = 16 / m.w,
                            x = new n.Vector2(b * v, b),
                            w = new n.Vector3(1, 1, 0),
                            M = new n.Vector2(1, 1),
                            S = new n.Box2;
                        S.min.set(0, 0), S.max.set(m.z - 16, m.w - 16), void 0 === h && i(), d.useProgram(h), f.initAttributes(), f.enableAttribute(u.vertex), f.enableAttribute(u.uv), f.disableUnusedAttributes(), d.uniform1i(c.occlusionMap, 0), d.uniform1i(c.map, 1), d.bindBuffer(d.ARRAY_BUFFER, o), d.vertexAttribPointer(u.vertex, 2, d.FLOAT, !1, 16, 0), d.vertexAttribPointer(u.uv, 2, d.FLOAT, !1, 16, 8), d.bindBuffer(d.ELEMENT_ARRAY_BUFFER, a), f.disable(d.CULL_FACE), f.setDepthWrite(!1);
                        for (var T = 0, A = e.length; A > T; T++) {
                            b = 16 / m.w, x.set(b * v, b);
                            var E = e[T];
                            if (g.set(E.matrixWorld.elements[12], E.matrixWorld.elements[13], E.matrixWorld.elements[14]), g.applyMatrix4(s.matrixWorldInverse), g.applyProjection(s.projectionMatrix), w.copy(g), M.x = m.x + w.x * y + y - 8, M.y = m.y + w.y * _ + _ - 8, S.containsPoint(M) === !0) {
                                f.activeTexture(d.TEXTURE0), f.bindTexture(d.TEXTURE_2D, null), f.activeTexture(d.TEXTURE1), f.bindTexture(d.TEXTURE_2D, l), d.copyTexImage2D(d.TEXTURE_2D, 0, d.RGB, M.x, M.y, 16, 16, 0), d.uniform1i(c.renderType, 0), d.uniform2f(c.scale, x.x, x.y), d.uniform3f(c.screenPosition, w.x, w.y, w.z), f.disable(d.BLEND), f.enable(d.DEPTH_TEST), d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0), f.activeTexture(d.TEXTURE0), f.bindTexture(d.TEXTURE_2D, p), d.copyTexImage2D(d.TEXTURE_2D, 0, d.RGBA, M.x, M.y, 16, 16, 0), d.uniform1i(c.renderType, 1), f.disable(d.DEPTH_TEST), f.activeTexture(d.TEXTURE1), f.bindTexture(d.TEXTURE_2D, l), d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0), E.positionScreen.copy(w), E.customUpdateCallback ? E.customUpdateCallback(E) : E.updateLensFlares(), d.uniform1i(c.renderType, 2), f.enable(d.BLEND);
                                for (var C = 0, P = E.lensFlares.length; P > C; C++) {
                                    var L = E.lensFlares[C];
                                    L.opacity > .001 && L.scale > .001 && (w.x = L.x, w.y = L.y, w.z = L.z, b = L.size * L.scale / m.w, x.x = b * v, x.y = b, d.uniform3f(c.screenPosition, w.x, w.y, w.z), d.uniform2f(c.scale, x.x, x.y), d.uniform1f(c.rotation, L.rotation), d.uniform1f(c.opacity, L.opacity), d.uniform3f(c.color, L.color.r, L.color.g, L.color.b), f.setBlending(L.blending, L.blendEquation, L.blendSrc, L.blendDst), t.setTexture2D(L.texture, 1), d.drawElements(d.TRIANGLES, 6, d.UNSIGNED_SHORT, 0))
                                }
                            }
                        }
                        f.enable(d.CULL_FACE), f.enable(d.DEPTH_TEST), f.setDepthWrite(!0), t.resetGLState()
                    }
                }
            }, n.SpritePlugin = function(t, e) {
                function i() {
                    var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),
                        e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    a = p.createBuffer(), s = p.createBuffer(), p.bindBuffer(p.ARRAY_BUFFER, a), p.bufferData(p.ARRAY_BUFFER, t, p.STATIC_DRAW), p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s), p.bufferData(p.ELEMENT_ARRAY_BUFFER, e, p.STATIC_DRAW), h = r(), u = {
                        position: p.getAttribLocation(h, "position"),
                        uv: p.getAttribLocation(h, "uv")
                    }, c = {
                        uvOffset: p.getUniformLocation(h, "uvOffset"),
                        uvScale: p.getUniformLocation(h, "uvScale"),
                        rotation: p.getUniformLocation(h, "rotation"),
                        scale: p.getUniformLocation(h, "scale"),
                        color: p.getUniformLocation(h, "color"),
                        map: p.getUniformLocation(h, "map"),
                        opacity: p.getUniformLocation(h, "opacity"),
                        modelViewMatrix: p.getUniformLocation(h, "modelViewMatrix"),
                        projectionMatrix: p.getUniformLocation(h, "projectionMatrix"),
                        fogType: p.getUniformLocation(h, "fogType"),
                        fogDensity: p.getUniformLocation(h, "fogDensity"),
                        fogNear: p.getUniformLocation(h, "fogNear"),
                        fogFar: p.getUniformLocation(h, "fogFar"),
                        fogColor: p.getUniformLocation(h, "fogColor"),
                        alphaTest: p.getUniformLocation(h, "alphaTest")
                    };
                    var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    i.width = 8, i.height = 8;
                    var o = i.getContext("2d");
                    o.fillStyle = "white", o.fillRect(0, 0, 8, 8), l = new n.Texture(i), l.needsUpdate = !0
                }

                function r() {
                    var e = p.createProgram(),
                        i = p.createShader(p.VERTEX_SHADER),
                        n = p.createShader(p.FRAGMENT_SHADER);
                    return p.shaderSource(i, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")), p.shaderSource(n, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")), p.compileShader(i), p.compileShader(n), p.attachShader(e, i), p.attachShader(e, n), p.linkProgram(e), e
                }

                function o(t, e) {
                    return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
                }
                var a, s, h, u, c, l, p = t.context,
                    d = t.state,
                    f = new n.Vector3,
                    m = new n.Quaternion,
                    g = new n.Vector3;
                this.render = function(r, v) {
                    if (0 !== e.length) {
                        void 0 === h && i(), p.useProgram(h), d.initAttributes(), d.enableAttribute(u.position), d.enableAttribute(u.uv), d.disableUnusedAttributes(), d.disable(p.CULL_FACE), d.enable(p.BLEND), p.bindBuffer(p.ARRAY_BUFFER, a), p.vertexAttribPointer(u.position, 2, p.FLOAT, !1, 16, 0), p.vertexAttribPointer(u.uv, 2, p.FLOAT, !1, 16, 8), p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, s), p.uniformMatrix4fv(c.projectionMatrix, !1, v.projectionMatrix.elements), d.activeTexture(p.TEXTURE0), p.uniform1i(c.map, 0);
                        var y = 0,
                            _ = 0,
                            b = r.fog;
                        b ? (p.uniform3f(c.fogColor, b.color.r, b.color.g, b.color.b), b instanceof n.Fog ? (p.uniform1f(c.fogNear, b.near), p.uniform1f(c.fogFar, b.far), p.uniform1i(c.fogType, 1), y = 1, _ = 1) : b instanceof n.FogExp2 && (p.uniform1f(c.fogDensity, b.density), p.uniform1i(c.fogType, 2), y = 2, _ = 2)) : (p.uniform1i(c.fogType, 0), y = 0, _ = 0);
                        for (var x = 0, w = e.length; w > x; x++) {
                            var M = e[x];
                            M.modelViewMatrix.multiplyMatrices(v.matrixWorldInverse, M.matrixWorld), M.z = -M.modelViewMatrix.elements[14]
                        }
                        e.sort(o);
                        for (var S = [], x = 0, w = e.length; w > x; x++) {
                            var M = e[x],
                                T = M.material;
                            p.uniform1f(c.alphaTest, T.alphaTest), p.uniformMatrix4fv(c.modelViewMatrix, !1, M.modelViewMatrix.elements), M.matrixWorld.decompose(f, m, g), S[0] = g.x, S[1] = g.y;
                            var A = 0;
                            r.fog && T.fog && (A = _), y !== A && (p.uniform1i(c.fogType, A), y = A), null !== T.map ? (p.uniform2f(c.uvOffset, T.map.offset.x, T.map.offset.y), p.uniform2f(c.uvScale, T.map.repeat.x, T.map.repeat.y)) : (p.uniform2f(c.uvOffset, 0, 0), p.uniform2f(c.uvScale, 1, 1)), p.uniform1f(c.opacity, T.opacity), p.uniform3f(c.color, T.color.r, T.color.g, T.color.b), p.uniform1f(c.rotation, T.rotation), p.uniform2fv(c.scale, S), d.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst), d.setDepthTest(T.depthTest), d.setDepthWrite(T.depthWrite), T.map ? t.setTexture2D(T.map, 0) : t.setTexture2D(l, 0), p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0)
                        }
                        d.enable(p.CULL_FACE), t.resetGLState()
                    }
                }
            }, Object.assign(n, {
                Face4: function(t, e, i, r, o, a, s) {
                    return new n.Face3(t, e, i, o, a, s)
                },
                LineStrip: 0,
                LinePieces: 1,
                MeshFaceMaterial: n.MultiMaterial,
                PointCloud: function(t, e) {
                    return new n.Points(t, e)
                },
                Particle: n.Sprite,
                ParticleSystem: function(t, e) {
                    return new n.Points(t, e)
                },
                PointCloudMaterial: function(t) {
                    return new n.PointsMaterial(t)
                },
                ParticleBasicMaterial: function(t) {
                    return new n.PointsMaterial(t)
                },
                ParticleSystemMaterial: function(t) {
                    return new n.PointsMaterial(t)
                },
                Vertex: function(t, e, i) {
                    return new n.Vector3(t, e, i)
                }
            }), Object.assign(n.Box2.prototype, {
                empty: function() {
                    return this.isEmpty()
                },
                isIntersectionBox: function(t) {
                    return this.intersectsBox(t)
                }
            }), Object.assign(n.Box3.prototype, {
                empty: function() {
                    return this.isEmpty()
                },
                isIntersectionBox: function(t) {
                    return this.intersectsBox(t)
                },
                isIntersectionSphere: function(t) {
                    return this.intersectsSphere(t)
                }
            }), Object.assign(n.Matrix3.prototype, {
                multiplyVector3: function(t) {
                    return t.applyMatrix3(this)
                },
                multiplyVector3Array: function(t) {
                    return this.applyToVector3Array(t)
                }
            }), Object.assign(n.Matrix4.prototype, {
                extractPosition: function(t) {
                    return this.copyPosition(t)
                },
                setRotationFromQuaternion: function(t) {
                    return this.makeRotationFromQuaternion(t)
                },
                multiplyVector3: function(t) {
                    return t.applyProjection(this)
                },
                multiplyVector4: function(t) {
                    return t.applyMatrix4(this)
                },
                multiplyVector3Array: function(t) {
                    return this.applyToVector3Array(t)
                },
                rotateAxis: function(t) {
                    t.transformDirection(this)
                },
                crossVector: function(t) {
                    return t.applyMatrix4(this)
                },
                translate: function(t) {},
                rotateX: function(t) {},
                rotateY: function(t) {},
                rotateZ: function(t) {},
                rotateByAxis: function(t, e) {}
            }), Object.assign(n.Plane.prototype, {
                isIntersectionLine: function(t) {
                    return this.intersectsLine(t)
                }
            }), Object.assign(n.Quaternion.prototype, {
                multiplyVector3: function(t) {
                    return t.applyQuaternion(this)
                }
            }), Object.assign(n.Ray.prototype, {
                isIntersectionBox: function(t) {
                    return this.intersectsBox(t)
                },
                isIntersectionPlane: function(t) {
                    return this.intersectsPlane(t)
                },
                isIntersectionSphere: function(t) {
                    return this.intersectsSphere(t)
                }
            }), Object.assign(n.Vector3.prototype, {
                setEulerFromRotationMatrix: function() {},
                setEulerFromQuaternion: function() {},
                getPositionFromMatrix: function(t) {
                    return this.setFromMatrixPosition(t)
                },
                getScaleFromMatrix: function(t) {
                    return this.setFromMatrixScale(t)
                },
                getColumnFromMatrix: function(t, e) {
                    return this.setFromMatrixColumn(e, t)
                }
            }), Object.assign(n.Object3D.prototype, {
                getChildByName: function(t) {
                    return this.getObjectByName(t)
                },
                renderDepth: function(t) {},
                translate: function(t, e) {
                    return this.translateOnAxis(e, t)
                }
            }), Object.defineProperties(n.Object3D.prototype, {
                eulerOrder: {
                    get: function() {
                        return this.rotation.order
                    },
                    set: function(t) {
                        this.rotation.order = t
                    }
                },
                useQuaternion: {
                    get: function() {},
                    set: function(t) {}
                }
            }), Object.defineProperties(n.LOD.prototype, {
                objects: {
                    get: function() {
                        return this.levels
                    }
                }
            }), n.PerspectiveCamera.prototype.setLens = function(t, e) {
                void 0 !== e && (this.filmGauge = e), this.setFocalLength(t)
            }, Object.defineProperties(n.Light.prototype, {
                onlyShadow: {
                    set: function(t) {}
                },
                shadowCameraFov: {
                    set: function(t) {
                        this.shadow.camera.fov = t
                    }
                },
                shadowCameraLeft: {
                    set: function(t) {
                        this.shadow.camera.left = t
                    }
                },
                shadowCameraRight: {
                    set: function(t) {
                        this.shadow.camera.right = t
                    }
                },
                shadowCameraTop: {
                    set: function(t) {
                        this.shadow.camera.top = t
                    }
                },
                shadowCameraBottom: {
                    set: function(t) {
                        this.shadow.camera.bottom = t
                    }
                },
                shadowCameraNear: {
                    set: function(t) {
                        this.shadow.camera.near = t
                    }
                },
                shadowCameraFar: {
                    set: function(t) {
                        this.shadow.camera.far = t
                    }
                },
                shadowCameraVisible: {
                    set: function(t) {}
                },
                shadowBias: {
                    set: function(t) {
                        this.shadow.bias = t
                    }
                },
                shadowDarkness: {
                    set: function(t) {}
                },
                shadowMapWidth: {
                    set: function(t) {
                        this.shadow.mapSize.width = t
                    }
                },
                shadowMapHeight: {
                    set: function(t) {
                        this.shadow.mapSize.height = t
                    }
                }
            }), Object.defineProperties(n.BufferAttribute.prototype, {
                length: {
                    get: function() {
                        return this.array.length
                    }
                }
            }), Object.assign(n.BufferGeometry.prototype, {
                addIndex: function(t) {
                    this.setIndex(t)
                },
                addDrawCall: function(t, e, i) {
                    this.addGroup(t, e)
                },
                clearDrawCalls: function() {
                    this.clearGroups()
                },
                computeTangents: function() {},
                computeOffsets: function() {}
            }), Object.defineProperties(n.BufferGeometry.prototype, {
                drawcalls: {
                    get: function() {
                        return this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return this.groups
                    }
                }
            }), Object.defineProperties(n.Material.prototype, {
                wrapAround: {
                    get: function() {},
                    set: function(t) {}
                },
                wrapRGB: {
                    get: function() {
                        return new n.Color
                    }
                }
            }), Object.defineProperties(n.MeshPhongMaterial.prototype, {
                metal: {
                    get: function() {
                        return !1
                    },
                    set: function(t) {}
                }
            }), Object.defineProperties(n.ShaderMaterial.prototype, {
                derivatives: {
                    get: function() {
                        return this.extensions.derivatives
                    },
                    set: function(t) {
                        this.extensions.derivatives = t
                    }
                }
            }), n.EventDispatcher.prototype = Object.assign(Object.create({
                constructor: n.EventDispatcher,
                apply: function(t) {
                    Object.assign(t, this)
                }
            }), n.EventDispatcher.prototype), Object.assign(n.WebGLRenderer.prototype, {
                supportsFloatTextures: function() {
                    return this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function() {
                    return this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function() {
                    return this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function() {
                    return this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function() {
                    return this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function() {
                    return this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function() {
                    return this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function() {
                    return this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function(t) {
                    this.setScissorTest(t)
                },
                initMaterial: function() {},
                addPrePlugin: function() {},
                addPostPlugin: function() {},
                updateShadowMap: function() {}
            }), Object.defineProperties(n.WebGLRenderer.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(t) {
                        this.shadowMap.enabled = t
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(t) {
                        this.shadowMap.type = t
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        return this.shadowMap.cullFace
                    },
                    set: function(t) {
                        this.shadowMap.cullFace = t
                    }
                }
            }), Object.defineProperties(n.WebGLShadowMap.prototype, {
                cullFace: {
                    get: function() {
                        return this.renderReverseSided ? n.CullFaceFront : n.CullFaceBack
                    },
                    set: function(t) {
                        var e = t !== n.CullFaceBack;
                        this.renderReverseSided = e
                    }
                }
            }), Object.defineProperties(n.WebGLRenderTarget.prototype, {
                wrapS: {
                    get: function() {
                        return this.texture.wrapS
                    },
                    set: function(t) {
                        this.texture.wrapS = t
                    }
                },
                wrapT: {
                    get: function() {
                        return this.texture.wrapT
                    },
                    set: function(t) {
                        this.texture.wrapT = t
                    }
                },
                magFilter: {
                    get: function() {
                        return this.texture.magFilter
                    },
                    set: function(t) {
                        this.texture.magFilter = t
                    }
                },
                minFilter: {
                    get: function() {
                        return this.texture.minFilter
                    },
                    set: function(t) {
                        this.texture.minFilter = t
                    }
                },
                anisotropy: {
                    get: function() {
                        return this.texture.anisotropy
                    },
                    set: function(t) {
                        this.texture.anisotropy = t
                    }
                },
                offset: {
                    get: function() {
                        return this.texture.offset
                    },
                    set: function(t) {
                        this.texture.offset = t
                    }
                },
                repeat: {
                    get: function() {
                        return this.texture.repeat
                    },
                    set: function(t) {
                        this.texture.repeat = t
                    }
                },
                format: {
                    get: function() {
                        return this.texture.format
                    },
                    set: function(t) {
                        this.texture.format = t
                    }
                },
                type: {
                    get: function() {
                        return this.texture.type
                    },
                    set: function(t) {
                        this.texture.type = t
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return this.texture.generateMipmaps
                    },
                    set: function(t) {
                        this.texture.generateMipmaps = t
                    }
                }
            }), Object.assign(n.Audio.prototype, {
                load: function(t) {
                    var e = this,
                        i = new n.AudioLoader;
                    return i.load(t, function(t) {
                        e.setBuffer(t)
                    }), this
                }
            }), Object.assign(n.AudioAnalyser.prototype, {
                getData: function(t) {
                    return this.getFrequencyData()
                }
            }), n.GeometryUtils = {
                merge: function(t, e, i) {
                    var r;
                    e instanceof n.Mesh && (e.matrixAutoUpdate && e.updateMatrix(), r = e.matrix, e = e.geometry), t.merge(e, r, i)
                },
                center: function(t) {
                    return t.center()
                }
            }, n.ImageUtils = {
                crossOrigin: void 0,
                loadTexture: function(t, e, i, r) {
                    var o = new n.TextureLoader;
                    o.setCrossOrigin(this.crossOrigin);
                    var a = o.load(t, i, void 0, r);
                    return e && (a.mapping = e), a
                },
                loadTextureCube: function(t, e, i, r) {
                    var o = new n.CubeTextureLoader;
                    o.setCrossOrigin(this.crossOrigin);
                    var a = o.load(t, i, void 0, r);
                    return e && (a.mapping = e), a
                },
                loadCompressedTexture: function() {},
                loadCompressedTextureCube: function() {}
            }, n.Projector = function() {
                this.projectVector = function(t, e) {
                    t.project(e)
                }, this.unprojectVector = function(t, e) {
                    t.unproject(e)
                }, this.pickingRay = function(t, e) {}
            }, n.CanvasRenderer = function() {
                this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {}, this.render = function() {}, this.setClearColor = function() {}, this.setSize = function() {}
            }, n.CurveUtils = {
                tangentQuadraticBezier: function(t, e, i, n) {
                    return 2 * (1 - t) * (i - e) + 2 * t * (n - i)
                },
                tangentCubicBezier: function(t, e, i, n, r) {
                    return -3 * e * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) - 6 * t * i * (1 - t) + 6 * t * n * (1 - t) - 3 * t * t * n + 3 * t * t * r
                },
                tangentSpline: function(t, e, i, n, r) {
                    var o = 6 * t * t - 6 * t,
                        a = 3 * t * t - 4 * t + 1,
                        s = -6 * t * t + 6 * t,
                        h = 3 * t * t - 2 * t;
                    return o + a + s + h
                },
                interpolate: function(t, e, i, n, r) {
                    var o = .5 * (i - t),
                        a = .5 * (n - e),
                        s = r * r,
                        h = r * s;
                    return (2 * e - 2 * i + o + a) * h + (-3 * e + 3 * i - 2 * o - a) * s + o * r + e
                }
            }, n.SceneUtils = {
                createMultiMaterialObject: function(t, e) {
                    for (var i = new n.Group, r = 0, o = e.length; o > r; r++) i.add(new n.Mesh(t, e[r]));
                    return i
                },
                detach: function(t, e, i) {
                    t.applyMatrix(e.matrixWorld), e.remove(t), i.add(t)
                },
                attach: function(t, e, i) {
                    var r = new n.Matrix4;
                    r.getInverse(i.matrixWorld), t.applyMatrix(r), e.remove(t), i.add(t)
                }
            }, n.ShapeUtils = {
                area: function(t) {
                    for (var e = t.length, i = 0, n = e - 1, r = 0; e > r; n = r++) i += t[n].x * t[r].y - t[r].x * t[n].y;
                    return .5 * i
                },
                triangulate: function() {
                    function t(t, e, i, n, r, o) {
                        var a, s, h, u, c, l, p, d, f;
                        if (s = t[o[e]].x, h = t[o[e]].y, u = t[o[i]].x, c = t[o[i]].y, l = t[o[n]].x, p = t[o[n]].y, Number.EPSILON > (u - s) * (p - h) - (c - h) * (l - s)) return !1;
                        var m, g, v, y, _, b, x, w, M, S, T, A, E, C, P;
                        for (m = l - u, g = p - c, v = s - l, y = h - p, _ = u - s, b = c - h, a = 0; r > a; a++)
                            if (d = t[o[a]].x, f = t[o[a]].y, !(d === s && f === h || d === u && f === c || d === l && f === p) && (x = d - s, w = f - h, M = d - u, S = f - c, T = d - l, A = f - p, P = m * S - g * M, E = _ * w - b * x, C = v * A - y * T, P >= -Number.EPSILON && C >= -Number.EPSILON && E >= -Number.EPSILON)) return !1;
                        return !0
                    }
                    return function(e, i) {
                        var r = e.length;
                        if (3 > r) return null;
                        var o, a, s, h = [],
                            u = [],
                            c = [];
                        if (n.ShapeUtils.area(e) > 0)
                            for (a = 0; r > a; a++) u[a] = a;
                        else
                            for (a = 0; r > a; a++) u[a] = r - 1 - a;
                        var l = r,
                            p = 2 * l;
                        for (a = l - 1; l > 2;) {
                            if (p-- <= 0) return i ? c : h;
                            if (o = a, o >= l && (o = 0), a = o + 1, a >= l && (a = 0), s = a + 1, s >= l && (s = 0), t(e, o, a, s, l, u)) {
                                var d, f, m, g, v;
                                for (d = u[o], f = u[a], m = u[s], h.push([e[d], e[f], e[m]]), c.push([u[o], u[a], u[s]]), g = a, v = a + 1; l > v; g++, v++) u[g] = u[v];
                                l--, p = 2 * l
                            }
                        }
                        return i ? c : h
                    }
                }(),
                triangulateShape: function(t, e) {
                    function i(t, e, i) {
                        return t.x !== e.x ? t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y
                    }

                    function r(t, e, n, r, o) {
                        var a = e.x - t.x,
                            s = e.y - t.y,
                            h = r.x - n.x,
                            u = r.y - n.y,
                            c = t.x - n.x,
                            l = t.y - n.y,
                            p = s * h - a * u,
                            d = s * c - a * l;
                        if (Math.abs(p) > Number.EPSILON) {
                            var f;
                            if (p > 0) {
                                if (0 > d || d > p) return [];
                                if (f = u * c - h * l, 0 > f || f > p) return []
                            } else {
                                if (d > 0 || p > d) return [];
                                if (f = u * c - h * l, f > 0 || p > f) return []
                            }
                            if (0 === f) return !o || 0 !== d && d !== p ? [t] : [];
                            if (f === p) return !o || 0 !== d && d !== p ? [e] : [];
                            if (0 === d) return [n];
                            if (d === p) return [r];
                            var m = f / p;
                            return [{
                                x: t.x + m * a,
                                y: t.y + m * s
                            }]
                        }
                        if (0 !== d || u * c !== h * l) return [];
                        var g = 0 === a && 0 === s,
                            v = 0 === h && 0 === u;
                        if (g && v) return t.x !== n.x || t.y !== n.y ? [] : [t];
                        if (g) return i(n, r, t) ? [t] : [];
                        if (v) return i(t, e, n) ? [n] : [];
                        var y, _, b, x, w, M, S, T;
                        return 0 !== a ? (t.x < e.x ? (y = t, b = t.x, _ = e, x = e.x) : (y = e, b = e.x, _ = t, x = t.x), n.x < r.x ? (w = n, S = n.x, M = r, T = r.x) : (w = r, S = r.x, M = n, T = n.x)) : (t.y < e.y ? (y = t, b = t.y, _ = e, x = e.y) : (y = e, b = e.y, _ = t, x = t.y), n.y < r.y ? (w = n, S = n.y, M = r, T = r.y) : (w = r, S = r.y, M = n, T = n.y)), S >= b ? S > x ? [] : x === S ? o ? [] : [w] : T >= x ? [w, _] : [w, M] : b > T ? [] : b === T ? o ? [] : [y] : T >= x ? [y, _] : [y, M]
                    }

                    function o(t, e, i, n) {
                        var r = e.x - t.x,
                            o = e.y - t.y,
                            a = i.x - t.x,
                            s = i.y - t.y,
                            h = n.x - t.x,
                            u = n.y - t.y,
                            c = r * s - o * a,
                            l = r * u - o * h;
                        if (Math.abs(c) > Number.EPSILON) {
                            var p = h * s - u * a;
                            return c > 0 ? l >= 0 && p >= 0 : l >= 0 || p >= 0
                        }
                        return l > 0
                    }

                    function a(t, e) {
                        function i(t, e) {
                            var i = y.length - 1,
                                n = t - 1;
                            0 > n && (n = i);
                            var r = t + 1;
                            r > i && (r = 0);
                            var a = o(y[t], y[n], y[r], s[e]);
                            if (!a) return !1;
                            var h = s.length - 1,
                                u = e - 1;
                            0 > u && (u = h);
                            var c = e + 1;
                            return c > h && (c = 0), a = o(s[e], s[u], s[c], y[t]), !!a
                        }

                        function n(t, e) {
                            var i, n, o;
                            for (i = 0; i < y.length; i++)
                                if (n = i + 1, n %= y.length, o = r(t, e, y[i], y[n], !0), o.length > 0) return !0;
                            return !1
                        }

                        function a(t, i) {
                            var n, o, a, s, h;
                            for (n = 0; n < _.length; n++)
                                for (o = e[_[n]], a = 0; a < o.length; a++)
                                    if (s = a + 1, s %= o.length, h = r(t, i, o[a], o[s], !0), h.length > 0) return !0;
                            return !1
                        }
                        for (var s, h, u, c, l, p, d, f, m, g, v, y = t.concat(), _ = [], b = [], x = 0, w = e.length; w > x; x++) _.push(x);
                        for (var M = 0, S = 2 * _.length; _.length > 0 && (S--, !(0 > S));)
                            for (u = M; u < y.length; u++) {
                                c = y[u], h = -1;
                                for (var x = 0; x < _.length; x++)
                                    if (p = _[x], d = c.x + ":" + c.y + ":" + p, void 0 === b[d]) {
                                        s = e[p];
                                        for (var T = 0; T < s.length; T++)
                                            if (l = s[T], i(u, T) && !n(c, l) && !a(c, l)) {
                                                h = T, _.splice(x, 1), f = y.slice(0, u + 1), m = y.slice(u), g = s.slice(h), v = s.slice(0, h + 1), y = f.concat(g).concat(v).concat(m), M = u;
                                                break
                                            }
                                        if (h >= 0) break;
                                        b[d] = !0
                                    }
                                if (h >= 0) break
                            }
                        return y
                    }
                    for (var s, h, u, c, l, p, d = {}, f = t.concat(), m = 0, g = e.length; g > m; m++) Array.prototype.push.apply(f, e[m]);
                    for (s = 0, h = f.length; h > s; s++) l = f[s].x + ":" + f[s].y, void 0 !== d[l], d[l] = s;
                    var v = a(t, e),
                        y = n.ShapeUtils.triangulate(v, !1);
                    for (s = 0, h = y.length; h > s; s++)
                        for (c = y[s], u = 0; 3 > u; u++) l = c[u].x + ":" + c[u].y, p = d[l], void 0 !== p && (c[u] = p);
                    return y.concat()
                },
                isClockWise: function(t) {
                    return n.ShapeUtils.area(t) < 0
                },
                b2: function() {
                    function t(t, e) {
                        var i = 1 - t;
                        return i * i * e
                    }

                    function e(t, e) {
                        return 2 * (1 - t) * t * e
                    }

                    function i(t, e) {
                        return t * t * e
                    }
                    return function(n, r, o, a) {
                        return t(n, r) + e(n, o) + i(n, a)
                    }
                }(),
                b3: function() {
                    function t(t, e) {
                        var i = 1 - t;
                        return i * i * i * e
                    }

                    function e(t, e) {
                        var i = 1 - t;
                        return 3 * i * i * t * e
                    }

                    function i(t, e) {
                        var i = 1 - t;
                        return 3 * i * t * t * e
                    }

                    function n(t, e) {
                        return t * t * t * e
                    }
                    return function(r, o, a, s, h) {
                        return t(r, o) + e(r, a) + i(r, s) + n(r, h)
                    }
                }()
            }, n.Curve = function() {}, n.Curve.prototype = {
                constructor: n.Curve,
                getPoint: function(t) {
                    return null
                },
                getPointAt: function(t) {
                    var e = this.getUtoTmapping(t);
                    return this.getPoint(e)
                },
                getPoints: function(t) {
                    t || (t = 5);
                    var e, i = [];
                    for (e = 0; t >= e; e++) i.push(this.getPoint(e / t));
                    return i
                },
                getSpacedPoints: function(t) {
                    t || (t = 5);
                    var e, i = [];
                    for (e = 0; t >= e; e++) i.push(this.getPointAt(e / t));
                    return i
                },
                getLength: function() {
                    var t = this.getLengths();
                    return t[t.length - 1]
                },
                getLengths: function(t) {
                    if (t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate) return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var e, i, n = [],
                        r = this.getPoint(0),
                        o = 0;
                    for (n.push(0), i = 1; t >= i; i++) e = this.getPoint(i / t), o += e.distanceTo(r), n.push(o), r = e;
                    return this.cacheArcLengths = n, n
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0, this.getLengths()
                },
                getUtoTmapping: function(t, e) {
                    var i, n = this.getLengths(),
                        r = 0,
                        o = n.length;
                    i = e ? e : t * n[o - 1];
                    for (var a, s = 0, h = o - 1; h >= s;)
                        if (r = Math.floor(s + (h - s) / 2), a = n[r] - i, 0 > a) s = r + 1;
                        else {
                            if (!(a > 0)) {
                                h = r;
                                break
                            }
                            h = r - 1
                        }
                    if (r = h, n[r] === i) {
                        var u = r / (o - 1);
                        return u
                    }
                    var c = n[r],
                        l = n[r + 1],
                        p = l - c,
                        d = (i - c) / p,
                        u = (r + d) / (o - 1);
                    return u
                },
                getTangent: function(t) {
                    var e = 1e-4,
                        i = t - e,
                        n = t + e;
                    0 > i && (i = 0), n > 1 && (n = 1);
                    var r = this.getPoint(i),
                        o = this.getPoint(n),
                        a = o.clone().sub(r);
                    return a.normalize()
                },
                getTangentAt: function(t) {
                    var e = this.getUtoTmapping(t);
                    return this.getTangent(e)
                }
            }, n.Curve.create = function(t, e) {
                return t.prototype = Object.create(n.Curve.prototype), t.prototype.constructor = t, t.prototype.getPoint = e, t
            }, n.CurvePath = function() {
                this.curves = [], this.autoClose = !1
            }, n.CurvePath.prototype = Object.assign(Object.create(n.Curve.prototype), {
                constructor: n.CurvePath,
                add: function(t) {
                    this.curves.push(t)
                },
                closePath: function() {
                    var t = this.curves[0].getPoint(0),
                        e = this.curves[this.curves.length - 1].getPoint(1);
                    t.equals(e) || this.curves.push(new n.LineCurve(e, t))
                },
                getPoint: function(t) {
                    for (var e = t * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length;) {
                        if (i[n] >= e) {
                            var r = i[n] - e,
                                o = this.curves[n],
                                a = 1 - r / o.getLength();
                            return o.getPointAt(a)
                        }
                        n++
                    }
                    return null
                },
                getLength: function() {
                    var t = this.getCurveLengths();
                    return t[t.length - 1]
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0, this.cacheLengths = null, this.getLengths()
                },
                getCurveLengths: function() {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
                    for (var t = [], e = 0, i = 0, n = this.curves.length; n > i; i++) e += this.curves[i].getLength(), t.push(e);
                    return this.cacheLengths = t, t
                },
                createPointsGeometry: function(t) {
                    var e = this.getPoints(t);
                    return this.createGeometry(e)
                },
                createSpacedPointsGeometry: function(t) {
                    var e = this.getSpacedPoints(t);
                    return this.createGeometry(e)
                },
                createGeometry: function(t) {
                    for (var e = new n.Geometry, i = 0, r = t.length; r > i; i++) {
                        var o = t[i];
                        e.vertices.push(new n.Vector3(o.x, o.y, o.z || 0))
                    }
                    return e
                }
            }), n.Font = function(t) {
                this.data = t
            }, Object.assign(n.Font.prototype, {
                generateShapes: function(t, e, i) {
                    function r(t) {
                        for (var i = String(t).split(""), n = e / a.resolution, r = 0, s = [], h = 0; h < i.length; h++) {
                            var u = o(i[h], n, r);
                            r += u.offset, s.push(u.path)
                        }
                        return s
                    }

                    function o(t, e, r) {
                        var o = a.glyphs[t] || a.glyphs["?"];
                        if (o) {
                            var s, h, u, c, l, p, d, f, m, g, v, y = new n.Path,
                                _ = [],
                                b = n.ShapeUtils.b2,
                                x = n.ShapeUtils.b3;
                            if (o.o)
                                for (var w = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), M = 0, S = w.length; S > M;) {
                                    var T = w[M++];
                                    switch (T) {
                                        case "m":
                                            s = w[M++] * e + r, h = w[M++] * e, y.moveTo(s, h);
                                            break;
                                        case "l":
                                            s = w[M++] * e + r, h = w[M++] * e, y.lineTo(s, h);
                                            break;
                                        case "q":
                                            if (u = w[M++] * e + r, c = w[M++] * e, d = w[M++] * e + r, f = w[M++] * e, y.quadraticCurveTo(d, f, u, c), v = _[_.length - 1]) {
                                                l = v.x, p = v.y;
                                                for (var A = 1; i >= A; A++) {
                                                    var E = A / i;
                                                    b(E, l, d, u), b(E, p, f, c)
                                                }
                                            }
                                            break;
                                        case "b":
                                            if (u = w[M++] * e + r, c = w[M++] * e, d = w[M++] * e + r, f = w[M++] * e, m = w[M++] * e + r, g = w[M++] * e, y.bezierCurveTo(d, f, m, g, u, c), v = _[_.length - 1]) {
                                                l = v.x, p = v.y;
                                                for (var A = 1; i >= A; A++) {
                                                    var E = A / i;
                                                    x(E, l, d, m, u), x(E, p, f, g, c)
                                                }
                                            }
                                    }
                                }
                            return {
                                offset: o.ha * e,
                                path: y
                            }
                        }
                    }
                    void 0 === e && (e = 100), void 0 === i && (i = 4);
                    for (var a = this.data, s = r(t), h = [], u = 0, c = s.length; c > u; u++) Array.prototype.push.apply(h, s[u].toShapes());
                    return h
                }
            }), n.Path = function(t) {
                n.CurvePath.call(this), this.actions = [], t && this.fromPoints(t)
            }, n.Path.prototype = Object.assign(Object.create(n.CurvePath.prototype), {
                constructor: n.Path,
                fromPoints: function(t) {
                    this.moveTo(t[0].x, t[0].y);
                    for (var e = 1, i = t.length; i > e; e++) this.lineTo(t[e].x, t[e].y)
                },
                moveTo: function(t, e) {
                    this.actions.push({
                        action: "moveTo",
                        args: [t, e]
                    })
                },
                lineTo: function(t, e) {
                    var i = this.actions[this.actions.length - 1].args,
                        r = i[i.length - 2],
                        o = i[i.length - 1],
                        a = new n.LineCurve(new n.Vector2(r, o), new n.Vector2(t, e));
                    this.curves.push(a), this.actions.push({
                        action: "lineTo",
                        args: [t, e]
                    })
                },
                quadraticCurveTo: function(t, e, i, r) {
                    var o = this.actions[this.actions.length - 1].args,
                        a = o[o.length - 2],
                        s = o[o.length - 1],
                        h = new n.QuadraticBezierCurve(new n.Vector2(a, s), new n.Vector2(t, e), new n.Vector2(i, r));
                    this.curves.push(h), this.actions.push({
                        action: "quadraticCurveTo",
                        args: [t, e, i, r]
                    })
                },
                bezierCurveTo: function(t, e, i, r, o, a) {
                    var s = this.actions[this.actions.length - 1].args,
                        h = s[s.length - 2],
                        u = s[s.length - 1],
                        c = new n.CubicBezierCurve(new n.Vector2(h, u), new n.Vector2(t, e), new n.Vector2(i, r), new n.Vector2(o, a));
                    this.curves.push(c), this.actions.push({
                        action: "bezierCurveTo",
                        args: [t, e, i, r, o, a]
                    })
                },
                splineThru: function(t) {
                    var e = Array.prototype.slice.call(arguments),
                        i = this.actions[this.actions.length - 1].args,
                        r = i[i.length - 2],
                        o = i[i.length - 1],
                        a = [new n.Vector2(r, o)];
                    Array.prototype.push.apply(a, t);
                    var s = new n.SplineCurve(a);
                    this.curves.push(s);
                    var h = t[t.length - 1];
                    e.push(h.x), e.push(h.y), this.actions.push({
                        action: "splineThru",
                        args: e
                    })
                },
                arc: function(t, e, i, n, r, o) {
                    var a = this.actions[this.actions.length - 1].args,
                        s = a[a.length - 2],
                        h = a[a.length - 1];
                    this.absarc(t + s, e + h, i, n, r, o)
                },
                absarc: function(t, e, i, n, r, o) {
                    this.absellipse(t, e, i, i, n, r, o)
                },
                ellipse: function(t, e, i, n, r, o, a, s) {
                    var h = this.actions[this.actions.length - 1].args,
                        u = h[h.length - 2],
                        c = h[h.length - 1];
                    this.absellipse(t + u, e + c, i, n, r, o, a, s)
                },
                absellipse: function(t, e, i, r, o, a, s, h) {
                    var u = [t, e, i, r, o, a, s, h || 0],
                        c = new n.EllipseCurve(t, e, i, r, o, a, s, h);
                    this.curves.push(c);
                    var l = c.getPoint(1);
                    u.push(l.x), u.push(l.y), this.actions.push({
                        action: "ellipse",
                        args: u
                    })
                },
                getSpacedPoints: function(t) {
                    t || (t = 40);
                    for (var e = [], i = 0; t > i; i++) e.push(this.getPoint(i / t));
                    return this.autoClose && e.push(e[0]), e
                },
                getPoints: function(t) {
                    t = t || 12;
                    for (var e, i, r, o, a, s, h, u, c, l, p, d = n.ShapeUtils.b2, f = n.ShapeUtils.b3, m = [], g = 0, v = this.actions.length; v > g; g++) {
                        var y = this.actions[g],
                            _ = y.action,
                            b = y.args;
                        switch (_) {
                            case "moveTo":
                                m.push(new n.Vector2(b[0], b[1]));
                                break;
                            case "lineTo":
                                m.push(new n.Vector2(b[0], b[1]));
                                break;
                            case "quadraticCurveTo":
                                e = b[2], i = b[3], a = b[0], s = b[1], m.length > 0 ? (c = m[m.length - 1], h = c.x, u = c.y) : (c = this.actions[g - 1].args, h = c[c.length - 2], u = c[c.length - 1]);
                                for (var x = 1; t >= x; x++) {
                                    var w = x / t;
                                    l = d(w, h, a, e), p = d(w, u, s, i), m.push(new n.Vector2(l, p))
                                }
                                break;
                            case "bezierCurveTo":
                                e = b[4], i = b[5], a = b[0], s = b[1], r = b[2], o = b[3], m.length > 0 ? (c = m[m.length - 1], h = c.x, u = c.y) : (c = this.actions[g - 1].args, h = c[c.length - 2], u = c[c.length - 1]);
                                for (var x = 1; t >= x; x++) {
                                    var w = x / t;
                                    l = f(w, h, a, r, e), p = f(w, u, s, o, i), m.push(new n.Vector2(l, p))
                                }
                                break;
                            case "splineThru":
                                c = this.actions[g - 1].args;
                                var M = new n.Vector2(c[c.length - 2], c[c.length - 1]),
                                    S = [M],
                                    T = t * b[0].length;
                                S = S.concat(b[0]);
                                for (var A = new n.SplineCurve(S), x = 1; T >= x; x++) m.push(A.getPointAt(x / T));
                                break;
                            case "arc":
                                for (var E, C = b[0], P = b[1], L = b[2], R = b[3], k = b[4], I = !!b[5], D = k - R, B = 2 * t, x = 1; B >= x; x++) {
                                    var w = x / B;
                                    I || (w = 1 - w), E = R + w * D, l = C + L * Math.cos(E), p = P + L * Math.sin(E), m.push(new n.Vector2(l, p))
                                }
                                break;
                            case "ellipse":
                                var E, O, j, C = b[0],
                                    P = b[1],
                                    U = b[2],
                                    N = b[3],
                                    R = b[4],
                                    k = b[5],
                                    I = !!b[6],
                                    F = b[7],
                                    D = k - R,
                                    B = 2 * t;
                                0 !== F && (O = Math.cos(F), j = Math.sin(F));
                                for (var x = 1; B >= x; x++) {
                                    var w = x / B;
                                    if (I || (w = 1 - w), E = R + w * D, l = C + U * Math.cos(E), p = P + N * Math.sin(E), 0 !== F) {
                                        var V = l,
                                            G = p;
                                        l = (V - C) * O - (G - P) * j + C, p = (V - C) * j + (G - P) * O + P
                                    }
                                    m.push(new n.Vector2(l, p))
                                }
                        }
                    }
                    var z = m[m.length - 1];
                    return Math.abs(z.x - m[0].x) < Number.EPSILON && Math.abs(z.y - m[0].y) < Number.EPSILON && m.splice(m.length - 1, 1), this.autoClose && m.push(m[0]), m
                },
                toShapes: function(t, e) {
                    function i(t) {
                        for (var e = [], i = new n.Path, r = 0, o = t.length; o > r; r++) {
                            var a = t[r],
                                s = a.args,
                                h = a.action;
                            "moveTo" === h && 0 !== i.actions.length && (e.push(i), i = new n.Path), i[h].apply(i, s)
                        }
                        return 0 !== i.actions.length && e.push(i), e
                    }

                    function r(t) {
                        for (var e = [], i = 0, r = t.length; r > i; i++) {
                            var o = t[i],
                                a = new n.Shape;
                            a.actions = o.actions, a.curves = o.curves, e.push(a)
                        }
                        return e
                    }

                    function o(t, e) {
                        for (var i = e.length, n = !1, r = i - 1, o = 0; i > o; r = o++) {
                            var a = e[r],
                                s = e[o],
                                h = s.x - a.x,
                                u = s.y - a.y;
                            if (Math.abs(u) > Number.EPSILON) {
                                if (0 > u && (a = e[o], h = -h, s = e[r], u = -u), t.y < a.y || t.y > s.y) continue;
                                if (t.y === a.y) {
                                    if (t.x === a.x) return !0
                                } else {
                                    var c = u * (t.x - a.x) - h * (t.y - a.y);
                                    if (0 === c) return !0;
                                    if (0 > c) continue;
                                    n = !n
                                }
                            } else {
                                if (t.y !== a.y) continue;
                                if (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x) return !0
                            }
                        }
                        return n
                    }
                    var a = n.ShapeUtils.isClockWise,
                        s = i(this.actions);
                    if (0 === s.length) return [];
                    if (e === !0) return r(s);
                    var h, u, c, l = [];
                    if (1 === s.length) return u = s[0], c = new n.Shape, c.actions = u.actions, c.curves = u.curves, l.push(c), l;
                    var p = !a(s[0].getPoints());
                    p = t ? !p : p;
                    var d, f = [],
                        m = [],
                        g = [],
                        v = 0;
                    m[v] = void 0, g[v] = [];
                    for (var y = 0, _ = s.length; _ > y; y++) u = s[y], d = u.getPoints(), h = a(d), h = t ? !h : h, h ? (!p && m[v] && v++, m[v] = {
                        s: new n.Shape,
                        p: d
                    }, m[v].s.actions = u.actions, m[v].s.curves = u.curves, p && v++, g[v] = []) : g[v].push({
                        h: u,
                        p: d[0]
                    });
                    if (!m[0]) return r(s);
                    if (m.length > 1) {
                        for (var b = !1, x = [], w = 0, M = m.length; M > w; w++) f[w] = [];
                        for (var w = 0, M = m.length; M > w; w++)
                            for (var S = g[w], T = 0; T < S.length; T++) {
                                for (var A = S[T], E = !0, C = 0; C < m.length; C++) o(A.p, m[C].p) && (w !== C && x.push({
                                    froms: w,
                                    tos: C,
                                    hole: T
                                }), E ? (E = !1, f[C].push(A)) : b = !0);
                                E && f[w].push(A)
                            }
                        x.length > 0 && (b || (g = f))
                    }
                    for (var P, y = 0, L = m.length; L > y; y++) {
                        c = m[y].s, l.push(c), P = g[y];
                        for (var R = 0, k = P.length; k > R; R++) c.holes.push(P[R].h)
                    }
                    return l
                }
            }), n.Shape = function() {
                n.Path.apply(this, arguments), this.holes = []
            }, n.Shape.prototype = Object.assign(Object.create(n.Path.prototype), {
                constructor: n.Shape,
                extrude: function(t) {
                    return new n.ExtrudeGeometry(this, t)
                },
                makeGeometry: function(t) {
                    return new n.ShapeGeometry(this, t)
                },
                getPointsHoles: function(t) {
                    for (var e = [], i = 0, n = this.holes.length; n > i; i++) e[i] = this.holes[i].getPoints(t);
                    return e
                },
                extractAllPoints: function(t) {
                    return {
                        shape: this.getPoints(t),
                        holes: this.getPointsHoles(t)
                    }
                },
                extractPoints: function(t) {
                    return this.extractAllPoints(t)
                }
            }), n.LineCurve = function(t, e) {
                this.v1 = t, this.v2 = e
            }, n.LineCurve.prototype = Object.create(n.Curve.prototype), n.LineCurve.prototype.constructor = n.LineCurve, n.LineCurve.prototype.getPoint = function(t) {
                var e = this.v2.clone().sub(this.v1);
                return e.multiplyScalar(t).add(this.v1), e
            }, n.LineCurve.prototype.getPointAt = function(t) {
                return this.getPoint(t)
            }, n.LineCurve.prototype.getTangent = function(t) {
                var e = this.v2.clone().sub(this.v1);
                return e.normalize()
            }, n.QuadraticBezierCurve = function(t, e, i) {
                this.v0 = t, this.v1 = e, this.v2 = i
            }, n.QuadraticBezierCurve.prototype = Object.create(n.Curve.prototype), n.QuadraticBezierCurve.prototype.constructor = n.QuadraticBezierCurve, n.QuadraticBezierCurve.prototype.getPoint = function(t) {
                var e = n.ShapeUtils.b2;
                return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y))
            }, n.QuadraticBezierCurve.prototype.getTangent = function(t) {
                var e = n.CurveUtils.tangentQuadraticBezier;
                return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y)).normalize()
            }, n.CubicBezierCurve = function(t, e, i, n) {
                this.v0 = t, this.v1 = e, this.v2 = i, this.v3 = n
            }, n.CubicBezierCurve.prototype = Object.create(n.Curve.prototype), n.CubicBezierCurve.prototype.constructor = n.CubicBezierCurve, n.CubicBezierCurve.prototype.getPoint = function(t) {
                var e = n.ShapeUtils.b3;
                return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
            }, n.CubicBezierCurve.prototype.getTangent = function(t) {
                var e = n.CurveUtils.tangentCubicBezier;
                return new n.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
            }, n.SplineCurve = function(t) {
                this.points = void 0 == t ? [] : t
            }, n.SplineCurve.prototype = Object.create(n.Curve.prototype), n.SplineCurve.prototype.constructor = n.SplineCurve, n.SplineCurve.prototype.getPoint = function(t) {
                var e = this.points,
                    i = (e.length - 1) * t,
                    r = Math.floor(i),
                    o = i - r,
                    a = e[0 === r ? r : r - 1],
                    s = e[r],
                    h = e[r > e.length - 2 ? e.length - 1 : r + 1],
                    u = e[r > e.length - 3 ? e.length - 1 : r + 2],
                    c = n.CurveUtils.interpolate;
                return new n.Vector2(c(a.x, s.x, h.x, u.x, o), c(a.y, s.y, h.y, u.y, o))
            }, n.EllipseCurve = function(t, e, i, n, r, o, a, s) {
                this.aX = t, this.aY = e, this.xRadius = i, this.yRadius = n, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = s || 0
            }, n.EllipseCurve.prototype = Object.create(n.Curve.prototype), n.EllipseCurve.prototype.constructor = n.EllipseCurve, n.EllipseCurve.prototype.getPoint = function(t) {
                var e = this.aEndAngle - this.aStartAngle;
                0 > e && (e += 2 * Math.PI), e > 2 * Math.PI && (e -= 2 * Math.PI);
                var i;
                i = this.aClockwise === !0 ? this.aEndAngle + (1 - t) * (2 * Math.PI - e) : this.aStartAngle + t * e;
                var r = this.aX + this.xRadius * Math.cos(i),
                    o = this.aY + this.yRadius * Math.sin(i);
                if (0 !== this.aRotation) {
                    var a = Math.cos(this.aRotation),
                        s = Math.sin(this.aRotation),
                        h = r,
                        u = o;
                    r = (h - this.aX) * a - (u - this.aY) * s + this.aX, o = (h - this.aX) * s + (u - this.aY) * a + this.aY
                }
                return new n.Vector2(r, o)
            }, n.ArcCurve = function(t, e, i, r, o, a) {
                n.EllipseCurve.call(this, t, e, i, i, r, o, a)
            }, n.ArcCurve.prototype = Object.create(n.EllipseCurve.prototype), n.ArcCurve.prototype.constructor = n.ArcCurve, n.LineCurve3 = n.Curve.create(function(t, e) {
                this.v1 = t, this.v2 = e
            }, function(t) {
                var e = new n.Vector3;
                return e.subVectors(this.v2, this.v1), e.multiplyScalar(t), e.add(this.v1), e
            }), n.QuadraticBezierCurve3 = n.Curve.create(function(t, e, i) {
                this.v0 = t, this.v1 = e, this.v2 = i
            }, function(t) {
                var e = n.ShapeUtils.b2;
                return new n.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y), e(t, this.v0.z, this.v1.z, this.v2.z))
            }), n.CubicBezierCurve3 = n.Curve.create(function(t, e, i, n) {
                this.v0 = t, this.v1 = e, this.v2 = i, this.v3 = n
            }, function(t) {
                var e = n.ShapeUtils.b3;
                return new n.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), e(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
            }), n.SplineCurve3 = n.Curve.create(function(t) {
                this.points = void 0 == t ? [] : t
            }, function(t) {
                var e = this.points,
                    i = (e.length - 1) * t,
                    r = Math.floor(i),
                    o = i - r,
                    a = e[0 == r ? r : r - 1],
                    s = e[r],
                    h = e[r > e.length - 2 ? e.length - 1 : r + 1],
                    u = e[r > e.length - 3 ? e.length - 1 : r + 2],
                    c = n.CurveUtils.interpolate;
                return new n.Vector3(c(a.x, s.x, h.x, u.x, o), c(a.y, s.y, h.y, u.y, o), c(a.z, s.z, h.z, u.z, o))
            }), n.CatmullRomCurve3 = function() {
                function t() {}
                var e = new n.Vector3,
                    i = new t,
                    r = new t,
                    o = new t;
                return t.prototype.init = function(t, e, i, n) {
                    this.c0 = t, this.c1 = i, this.c2 = -3 * t + 3 * e - 2 * i - n, this.c3 = 2 * t - 2 * e + i + n
                }, t.prototype.initNonuniformCatmullRom = function(t, e, i, n, r, o, a) {
                    var s = (e - t) / r - (i - t) / (r + o) + (i - e) / o,
                        h = (i - e) / o - (n - e) / (o + a) + (n - i) / a;
                    s *= o, h *= o, this.init(e, i, s, h)
                }, t.prototype.initCatmullRom = function(t, e, i, n, r) {
                    this.init(e, i, r * (i - t), r * (n - e))
                }, t.prototype.calc = function(t) {
                    var e = t * t,
                        i = e * t;
                    return this.c0 + this.c1 * t + this.c2 * e + this.c3 * i
                }, n.Curve.create(function(t) {
                    this.points = t || [], this.closed = !1
                }, function(t) {
                    var a, s, h, u, c = this.points;
                    u = c.length, a = (u - (this.closed ? 0 : 1)) * t, s = Math.floor(a), h = a - s, this.closed ? s += s > 0 ? 0 : (Math.floor(Math.abs(s) / c.length) + 1) * c.length : 0 === h && s === u - 1 && (s = u - 2, h = 1);
                    var l, p, d, f;
                    if (this.closed || s > 0 ? l = c[(s - 1) % u] : (e.subVectors(c[0], c[1]).add(c[0]), l = e), p = c[s % u], d = c[(s + 1) % u], this.closed || u > s + 2 ? f = c[(s + 2) % u] : (e.subVectors(c[u - 1], c[u - 2]).add(c[u - 1]), f = e), void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                        var m = "chordal" === this.type ? .5 : .25,
                            g = Math.pow(l.distanceToSquared(p), m),
                            v = Math.pow(p.distanceToSquared(d), m),
                            y = Math.pow(d.distanceToSquared(f), m);
                        1e-4 > v && (v = 1), 1e-4 > g && (g = v), 1e-4 > y && (y = v), i.initNonuniformCatmullRom(l.x, p.x, d.x, f.x, g, v, y), r.initNonuniformCatmullRom(l.y, p.y, d.y, f.y, g, v, y), o.initNonuniformCatmullRom(l.z, p.z, d.z, f.z, g, v, y)
                    } else if ("catmullrom" === this.type) {
                        var _ = void 0 !== this.tension ? this.tension : .5;
                        i.initCatmullRom(l.x, p.x, d.x, f.x, _), r.initCatmullRom(l.y, p.y, d.y, f.y, _), o.initCatmullRom(l.z, p.z, d.z, f.z, _)
                    }
                    var b = new n.Vector3(i.calc(h), r.calc(h), o.calc(h));
                    return b
                })
            }(), n.ClosedSplineCurve3 = function(t) {
                n.CatmullRomCurve3.call(this, t), this.type = "catmullrom", this.closed = !0
            }, n.ClosedSplineCurve3.prototype = Object.create(n.CatmullRomCurve3.prototype), n.BoxGeometry = function(t, e, i, r, o, a) {
                n.Geometry.call(this), this.type = "BoxGeometry", this.parameters = {
                    width: t,
                    height: e,
                    depth: i,
                    widthSegments: r,
                    heightSegments: o,
                    depthSegments: a
                }, this.fromBufferGeometry(new n.BoxBufferGeometry(t, e, i, r, o, a)), this.mergeVertices()
            }, n.BoxGeometry.prototype = Object.create(n.Geometry.prototype), n.BoxGeometry.prototype.constructor = n.BoxGeometry, n.CubeGeometry = n.BoxGeometry, n.BoxBufferGeometry = function(t, e, i, r, o, a) {
                function s(t, e, i) {
                    var n = 0;
                    return n += (t + 1) * (e + 1) * 2, n += (t + 1) * (i + 1) * 2, n += (i + 1) * (e + 1) * 2
                }

                function h(t, e, i) {
                    var n = 0;
                    return n += t * e * 2, n += t * i * 2, n += i * e * 2, 6 * n
                }

                function u(t, e, i, r, o, a, s, h, u, l, p) {
                    for (var w = a / u, M = s / l, S = a / 2, T = s / 2, A = h / 2, E = u + 1, C = l + 1, P = 0, L = 0, R = new n.Vector3, k = 0; C > k; k++)
                        for (var I = k * M - T, D = 0; E > D; D++) {
                            var B = D * w - S;
                            R[t] = B * r, R[e] = I * o, R[i] = A, f[v] = R.x, f[v + 1] = R.y, f[v + 2] = R.z, R[t] = 0, R[e] = 0, R[i] = h > 0 ? 1 : -1, m[v] = R.x, m[v + 1] = R.y, m[v + 2] = R.z, g[y] = D / u, g[y + 1] = 1 - k / l, v += 3, y += 2, P += 1
                        }
                    for (k = 0; l > k; k++)
                        for (D = 0; u > D; D++) {
                            var O = b + D + E * k,
                                j = b + D + E * (k + 1),
                                U = b + (D + 1) + E * (k + 1),
                                N = b + (D + 1) + E * k;
                            d[_] = O, d[_ + 1] = j, d[_ + 2] = N, d[_ + 3] = j, d[_ + 4] = U, d[_ + 5] = N, _ += 6, L += 6
                        }
                    c.addGroup(x, L, p), x += L, b += P
                }
                n.BufferGeometry.call(this), this.type = "BoxBufferGeometry", this.parameters = {
                    width: t,
                    height: e,
                    depth: i,
                    widthSegments: r,
                    heightSegments: o,
                    depthSegments: a
                };
                var c = this;
                r = Math.floor(r) || 1, o = Math.floor(o) || 1, a = Math.floor(a) || 1;
                var l = s(r, o, a),
                    p = h(r, o, a),
                    d = new(p > 65535 ? Uint32Array : Uint16Array)(p),
                    f = new Float32Array(3 * l),
                    m = new Float32Array(3 * l),
                    g = new Float32Array(2 * l),
                    v = 0,
                    y = 0,
                    _ = 0,
                    b = 0,
                    x = 0;
                u("z", "y", "x", -1, -1, i, e, t, a, o, 0), u("z", "y", "x", 1, -1, i, e, -t, a, o, 1), u("x", "z", "y", 1, 1, t, i, e, r, a, 2), u("x", "z", "y", 1, -1, t, i, -e, r, a, 3), u("x", "y", "z", 1, -1, t, e, i, r, o, 4), u("x", "y", "z", -1, -1, t, e, -i, r, o, 5), this.setIndex(new n.BufferAttribute(d, 1)), this.addAttribute("position", new n.BufferAttribute(f, 3)), this.addAttribute("normal", new n.BufferAttribute(m, 3)), this.addAttribute("uv", new n.BufferAttribute(g, 2))
            }, n.BoxBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.BoxBufferGeometry.prototype.constructor = n.BoxBufferGeometry, n.CircleGeometry = function(t, e, i, r) {
                n.Geometry.call(this), this.type = "CircleGeometry", this.parameters = {
                    radius: t,
                    segments: e,
                    thetaStart: i,
                    thetaLength: r
                }, this.fromBufferGeometry(new n.CircleBufferGeometry(t, e, i, r))
            }, n.CircleGeometry.prototype = Object.create(n.Geometry.prototype), n.CircleGeometry.prototype.constructor = n.CircleGeometry, n.CircleBufferGeometry = function(t, e, i, r) {
                n.BufferGeometry.call(this), this.type = "CircleBufferGeometry", this.parameters = {
                    radius: t,
                    segments: e,
                    thetaStart: i,
                    thetaLength: r
                }, t = t || 50, e = void 0 !== e ? Math.max(3, e) : 8, i = void 0 !== i ? i : 0, r = void 0 !== r ? r : 2 * Math.PI;
                var o = e + 2,
                    a = new Float32Array(3 * o),
                    s = new Float32Array(3 * o),
                    h = new Float32Array(2 * o);
                s[2] = 1, h[0] = .5, h[1] = .5;
                for (var u = 0, c = 3, l = 2; e >= u; u++, c += 3, l += 2) {
                    var p = i + u / e * r;
                    a[c] = t * Math.cos(p), a[c + 1] = t * Math.sin(p), s[c + 2] = 1, h[l] = (a[c] / t + 1) / 2, h[l + 1] = (a[c + 1] / t + 1) / 2
                }
                for (var d = [], c = 1; e >= c; c++) d.push(c, c + 1, 0);
                this.setIndex(new n.BufferAttribute(new Uint16Array(d), 1)), this.addAttribute("position", new n.BufferAttribute(a, 3)), this.addAttribute("normal", new n.BufferAttribute(s, 3)), this.addAttribute("uv", new n.BufferAttribute(h, 2)), this.boundingSphere = new n.Sphere(new n.Vector3, t)
            }, n.CircleBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.CircleBufferGeometry.prototype.constructor = n.CircleBufferGeometry, n.CylinderBufferGeometry = function(t, e, i, r, o, a, s, h) {
                function u() {
                    var t = (r + 1) * (o + 1);
                    return a === !1 && (t += (r + 1) * f + r * f), t
                }

                function c() {
                    var t = r * o * 2 * 3;
                    return a === !1 && (t += r * f * 3), t
                }

                function l() {
                    var a, u, c = new n.Vector3,
                        l = new n.Vector3,
                        p = 0,
                        f = (e - t) / i;
                    for (u = 0; o >= u; u++) {
                        var m = [],
                            g = u / o,
                            A = g * (e - t) + t;
                        for (a = 0; r >= a; a++) {
                            var E = a / r;
                            l.x = A * Math.sin(E * h + s), l.y = -g * i + S, l.z = A * Math.cos(E * h + s), y.setXYZ(x, l.x, l.y, l.z), c.copy(l), (0 === t && 0 === u || 0 === e && u === o) && (c.x = Math.sin(E * h + s), c.z = Math.cos(E * h + s)), c.setY(Math.sqrt(c.x * c.x + c.z * c.z) * f).normalize(), _.setXYZ(x, c.x, c.y, c.z), b.setXY(x, E, 1 - g), m.push(x), x++
                        }
                        M.push(m)
                    }
                    for (a = 0; r > a; a++)
                        for (u = 0; o > u; u++) {
                            var C = M[u][a],
                                P = M[u + 1][a],
                                L = M[u + 1][a + 1],
                                R = M[u][a + 1];
                            v.setX(w, C), w++, v.setX(w, P), w++, v.setX(w, R), w++, v.setX(w, P), w++, v.setX(w, L), w++, v.setX(w, R), w++, p += 6
                        }
                    d.addGroup(T, p, 0), T += p
                }

                function p(i) {
                    var o, a, u, c = new n.Vector2,
                        l = new n.Vector3,
                        p = 0,
                        f = i === !0 ? t : e,
                        m = i === !0 ? 1 : -1;
                    for (a = x, o = 1; r >= o; o++) y.setXYZ(x, 0, S * m, 0), _.setXYZ(x, 0, m, 0), c.x = .5, c.y = .5, b.setXY(x, c.x, c.y), x++;
                    for (u = x, o = 0; r >= o; o++) {
                        var g = o / r,
                            M = g * h + s,
                            A = Math.cos(M),
                            E = Math.sin(M);
                        l.x = f * E, l.y = S * m, l.z = f * A, y.setXYZ(x, l.x, l.y, l.z), _.setXYZ(x, 0, m, 0), c.x = .5 * A + .5, c.y = .5 * E * m + .5, b.setXY(x, c.x, c.y), x++
                    }
                    for (o = 0; r > o; o++) {
                        var C = a + o,
                            P = u + o;
                        i === !0 ? (v.setX(w, P), w++, v.setX(w, P + 1), w++, v.setX(w, C), w++) : (v.setX(w, P + 1), w++, v.setX(w, P), w++, v.setX(w, C), w++), p += 3
                    }
                    d.addGroup(T, p, i === !0 ? 1 : 2), T += p
                }
                n.BufferGeometry.call(this), this.type = "CylinderBufferGeometry", this.parameters = {
                    radiusTop: t,
                    radiusBottom: e,
                    height: i,
                    radialSegments: r,
                    heightSegments: o,
                    openEnded: a,
                    thetaStart: s,
                    thetaLength: h
                };
                var d = this;
                t = void 0 !== t ? t : 20, e = void 0 !== e ? e : 20, i = void 0 !== i ? i : 100, r = Math.floor(r) || 8, o = Math.floor(o) || 1, a = void 0 !== a ? a : !1, s = void 0 !== s ? s : 0, h = void 0 !== h ? h : 2 * Math.PI;
                var f = 0;
                a === !1 && (t > 0 && f++, e > 0 && f++);
                var m = u(),
                    g = c(),
                    v = new n.BufferAttribute(new(g > 65535 ? Uint32Array : Uint16Array)(g), 1),
                    y = new n.BufferAttribute(new Float32Array(3 * m), 3),
                    _ = new n.BufferAttribute(new Float32Array(3 * m), 3),
                    b = new n.BufferAttribute(new Float32Array(2 * m), 2),
                    x = 0,
                    w = 0,
                    M = [],
                    S = i / 2,
                    T = 0;
                l(), a === !1 && (t > 0 && p(!0), e > 0 && p(!1)), this.setIndex(v), this.addAttribute("position", y), this.addAttribute("normal", _), this.addAttribute("uv", b)
            }, n.CylinderBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.CylinderBufferGeometry.prototype.constructor = n.CylinderBufferGeometry, n.CylinderGeometry = function(t, e, i, r, o, a, s, h) {
                n.Geometry.call(this), this.type = "CylinderGeometry", this.parameters = {
                    radiusTop: t,
                    radiusBottom: e,
                    height: i,
                    radialSegments: r,
                    heightSegments: o,
                    openEnded: a,
                    thetaStart: s,
                    thetaLength: h
                }, this.fromBufferGeometry(new n.CylinderBufferGeometry(t, e, i, r, o, a, s, h)), this.mergeVertices()
            }, n.CylinderGeometry.prototype = Object.create(n.Geometry.prototype), n.CylinderGeometry.prototype.constructor = n.CylinderGeometry, n.ConeBufferGeometry = function(t, e, i, r, o, a, s) {
                n.CylinderBufferGeometry.call(this, 0, t, e, i, r, o, a, s), this.type = "ConeBufferGeometry", this.parameters = {
                    radius: t,
                    height: e,
                    radialSegments: i,
                    heightSegments: r,
                    thetaStart: a,
                    thetaLength: s
                }
            }, n.ConeBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.ConeBufferGeometry.prototype.constructor = n.ConeBufferGeometry, n.ConeGeometry = function(t, e, i, r, o, a, s) {
                n.CylinderGeometry.call(this, 0, t, e, i, r, o, a, s), this.type = "ConeGeometry", this.parameters = {
                    radius: t,
                    height: e,
                    radialSegments: i,
                    heightSegments: r,
                    openEnded: o,
                    thetaStart: a,
                    thetaLength: s
                }
            }, n.ConeGeometry.prototype = Object.create(n.CylinderGeometry.prototype), n.ConeGeometry.prototype.constructor = n.ConeGeometry, n.EdgesGeometry = function(t, e) {
                function i(t, e) {
                    return t - e
                }
                n.BufferGeometry.call(this), e = void 0 !== e ? e : 1;
                var r, o = Math.cos(n.Math.DEG2RAD * e),
                    a = [0, 0],
                    s = {},
                    h = ["a", "b", "c"];
                t instanceof n.BufferGeometry ? (r = new n.Geometry, r.fromBufferGeometry(t)) : r = t.clone(), r.mergeVertices(), r.computeFaceNormals();
                for (var u = r.vertices, c = r.faces, l = 0, p = c.length; p > l; l++)
                    for (var d = c[l], f = 0; 3 > f; f++) {
                        a[0] = d[h[f]], a[1] = d[h[(f + 1) % 3]], a.sort(i);
                        var m = a.toString();
                        void 0 === s[m] ? s[m] = {
                            vert1: a[0],
                            vert2: a[1],
                            face1: l,
                            face2: void 0
                        } : s[m].face2 = l
                    }
                var g = [];
                for (var m in s) {
                    var v = s[m];
                    if (void 0 === v.face2 || c[v.face1].normal.dot(c[v.face2].normal) <= o) {
                        var y = u[v.vert1];
                        g.push(y.x), g.push(y.y), g.push(y.z), y = u[v.vert2], g.push(y.x), g.push(y.y), g.push(y.z)
                    }
                }
                this.addAttribute("position", new n.BufferAttribute(new Float32Array(g), 3))
            }, n.EdgesGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.EdgesGeometry.prototype.constructor = n.EdgesGeometry, n.ExtrudeGeometry = function(t, e) {
                return "undefined" == typeof t ? void(t = []) : (n.Geometry.call(this), this.type = "ExtrudeGeometry", t = Array.isArray(t) ? t : [t], this.addShapeList(t, e), void this.computeFaceNormals())
            }, n.ExtrudeGeometry.prototype = Object.create(n.Geometry.prototype), n.ExtrudeGeometry.prototype.constructor = n.ExtrudeGeometry, n.ExtrudeGeometry.prototype.addShapeList = function(t, e) {
                for (var i = t.length, n = 0; i > n; n++) {
                    var r = t[n];
                    this.addShape(r, e)
                }
            }, n.ExtrudeGeometry.prototype.addShape = function(t, e) {
                function i(t, e, i) {
                    return e.clone().multiplyScalar(i).add(t)
                }

                function r(t, e, i) {
                    var r, o, a = 1,
                        s = t.x - e.x,
                        h = t.y - e.y,
                        u = i.x - t.x,
                        c = i.y - t.y,
                        l = s * s + h * h,
                        p = s * c - h * u;
                    if (Math.abs(p) > Number.EPSILON) {
                        var d = Math.sqrt(l),
                            f = Math.sqrt(u * u + c * c),
                            m = e.x - h / d,
                            g = e.y + s / d,
                            v = i.x - c / f,
                            y = i.y + u / f,
                            _ = ((v - m) * c - (y - g) * u) / (s * c - h * u);
                        r = m + s * _ - t.x, o = g + h * _ - t.y;
                        var b = r * r + o * o;
                        if (2 >= b) return new n.Vector2(r, o);
                        a = Math.sqrt(b / 2)
                    } else {
                        var x = !1;
                        s > Number.EPSILON ? u > Number.EPSILON && (x = !0) : s < -Number.EPSILON ? u < -Number.EPSILON && (x = !0) : Math.sign(h) === Math.sign(c) && (x = !0), x ? (r = -h, o = s, a = Math.sqrt(l)) : (r = s, o = h, a = Math.sqrt(l / 2))
                    }
                    return new n.Vector2(r / a, o / a)
                }

                function o() {
                    if (b) {
                        var t = 0,
                            e = z * t;
                        for (X = 0; H > X; X++) G = B[X], u(G[2] + e, G[1] + e, G[0] + e);
                        for (t = w + 2 * _, e = z * t, X = 0; H > X; X++) G = B[X], u(G[0] + e, G[1] + e, G[2] + e)
                    } else {
                        for (X = 0; H > X; X++) G = B[X], u(G[2], G[1], G[0]);
                        for (X = 0; H > X; X++) G = B[X], u(G[0] + z * w, G[1] + z * w, G[2] + z * w)
                    }
                }

                function a() {
                    var t = 0;
                    for (s(O, t), t += O.length, E = 0, C = I.length; C > E; E++) A = I[E], s(A, t), t += A.length
                }

                function s(t, e) {
                    var i, n;
                    for (X = t.length; --X >= 0;) {
                        i = X, n = X - 1, 0 > n && (n = t.length - 1);
                        var r = 0,
                            o = w + 2 * _;
                        for (r = 0; o > r; r++) {
                            var a = z * r,
                                s = z * (r + 1),
                                h = e + i + a,
                                u = e + n + a,
                                l = e + n + s,
                                p = e + i + s;
                            c(h, u, l, p, t, r, o, i, n)
                        }
                    }
                }

                function h(t, e, i) {
                    P.vertices.push(new n.Vector3(t, e, i))
                }

                function u(t, e, i) {
                    t += L, e += L, i += L, P.faces.push(new n.Face3(t, e, i, null, null, 0));
                    var r = T.generateTopUV(P, t, e, i);
                    P.faceVertexUvs[0].push(r)
                }

                function c(t, e, i, r, o, a, s, h, u) {
                    t += L, e += L, i += L, r += L, P.faces.push(new n.Face3(t, e, r, null, null, 1)), P.faces.push(new n.Face3(e, i, r, null, null, 1));
                    var c = T.generateSideWallUV(P, t, e, i, r);
                    P.faceVertexUvs[0].push([c[0], c[1], c[3]]), P.faceVertexUvs[0].push([c[1], c[2], c[3]])
                }
                var l, p, d, f, m, g = void 0 !== e.amount ? e.amount : 100,
                    v = void 0 !== e.bevelThickness ? e.bevelThickness : 6,
                    y = void 0 !== e.bevelSize ? e.bevelSize : v - 2,
                    _ = void 0 !== e.bevelSegments ? e.bevelSegments : 3,
                    b = void 0 !== e.bevelEnabled ? e.bevelEnabled : !0,
                    x = void 0 !== e.curveSegments ? e.curveSegments : 12,
                    w = void 0 !== e.steps ? e.steps : 1,
                    M = e.extrudePath,
                    S = !1,
                    T = void 0 !== e.UVGenerator ? e.UVGenerator : n.ExtrudeGeometry.WorldUVGenerator;
                M && (l = M.getSpacedPoints(w), S = !0, b = !1, p = void 0 !== e.frames ? e.frames : new n.TubeGeometry.FrenetFrames(M, w, !1), d = new n.Vector3, f = new n.Vector3, m = new n.Vector3), b || (_ = 0, v = 0, y = 0);
                var A, E, C, P = this,
                    L = this.vertices.length,
                    R = t.extractPoints(x),
                    k = R.shape,
                    I = R.holes,
                    D = !n.ShapeUtils.isClockWise(k);
                if (D) {
                    for (k = k.reverse(), E = 0, C = I.length; C > E; E++) A = I[E], n.ShapeUtils.isClockWise(A) && (I[E] = A.reverse());
                    D = !1
                }
                var B = n.ShapeUtils.triangulateShape(k, I),
                    O = k;
                for (E = 0, C = I.length; C > E; E++) A = I[E], k = k.concat(A);
                for (var j, U, N, F, V, G, z = k.length, H = B.length, W = [], X = 0, q = O.length, Y = q - 1, Z = X + 1; q > X; X++, Y++, Z++) Y === q && (Y = 0), Z === q && (Z = 0), W[X] = r(O[X], O[Y], O[Z]);
                var K, J = [],
                    Q = W.concat();
                for (E = 0, C = I.length; C > E; E++) {
                    for (A = I[E], K = [], X = 0, q = A.length, Y = q - 1, Z = X + 1; q > X; X++, Y++, Z++) Y === q && (Y = 0), Z === q && (Z = 0), K[X] = r(A[X], A[Y], A[Z]);
                    J.push(K), Q = Q.concat(K)
                }
                for (j = 0; _ > j; j++) {
                    for (N = j / _, F = v * (1 - N), U = y * Math.sin(N * Math.PI / 2), X = 0, q = O.length; q > X; X++) V = i(O[X], W[X], U), h(V.x, V.y, -F);
                    for (E = 0, C = I.length; C > E; E++)
                        for (A = I[E], K = J[E], X = 0, q = A.length; q > X; X++) V = i(A[X], K[X], U), h(V.x, V.y, -F)
                }
                for (U = y, X = 0; z > X; X++) V = b ? i(k[X], Q[X], U) : k[X], S ? (f.copy(p.normals[0]).multiplyScalar(V.x), d.copy(p.binormals[0]).multiplyScalar(V.y), m.copy(l[0]).add(f).add(d), h(m.x, m.y, m.z)) : h(V.x, V.y, 0);
                var $;
                for ($ = 1; w >= $; $++)
                    for (X = 0; z > X; X++) V = b ? i(k[X], Q[X], U) : k[X], S ? (f.copy(p.normals[$]).multiplyScalar(V.x), d.copy(p.binormals[$]).multiplyScalar(V.y), m.copy(l[$]).add(f).add(d), h(m.x, m.y, m.z)) : h(V.x, V.y, g / w * $);
                for (j = _ - 1; j >= 0; j--) {
                    for (N = j / _, F = v * (1 - N), U = y * Math.sin(N * Math.PI / 2), X = 0, q = O.length; q > X; X++) V = i(O[X], W[X], U), h(V.x, V.y, g + F);
                    for (E = 0, C = I.length; C > E; E++)
                        for (A = I[E], K = J[E], X = 0, q = A.length; q > X; X++) V = i(A[X], K[X], U), S ? h(V.x, V.y + l[w - 1].y, l[w - 1].x + F) : h(V.x, V.y, g + F)
                }
                o(), a()
            }, n.ExtrudeGeometry.WorldUVGenerator = {
                generateTopUV: function(t, e, i, r) {
                    var o = t.vertices,
                        a = o[e],
                        s = o[i],
                        h = o[r];
                    return [new n.Vector2(a.x, a.y), new n.Vector2(s.x, s.y), new n.Vector2(h.x, h.y)]
                },
                generateSideWallUV: function(t, e, i, r, o) {
                    var a = t.vertices,
                        s = a[e],
                        h = a[i],
                        u = a[r],
                        c = a[o];
                    return Math.abs(s.y - h.y) < .01 ? [new n.Vector2(s.x, 1 - s.z), new n.Vector2(h.x, 1 - h.z), new n.Vector2(u.x, 1 - u.z), new n.Vector2(c.x, 1 - c.z)] : [new n.Vector2(s.y, 1 - s.z), new n.Vector2(h.y, 1 - h.z), new n.Vector2(u.y, 1 - u.z), new n.Vector2(c.y, 1 - c.z)]
                }
            }, n.ShapeGeometry = function(t, e) {
                n.Geometry.call(this), this.type = "ShapeGeometry", Array.isArray(t) === !1 && (t = [t]), this.addShapeList(t, e), this.computeFaceNormals()
            }, n.ShapeGeometry.prototype = Object.create(n.Geometry.prototype), n.ShapeGeometry.prototype.constructor = n.ShapeGeometry, n.ShapeGeometry.prototype.addShapeList = function(t, e) {
                for (var i = 0, n = t.length; n > i; i++) this.addShape(t[i], e);
                return this
            }, n.ShapeGeometry.prototype.addShape = function(t, e) {
                void 0 === e && (e = {});
                var i, r, o, a = void 0 !== e.curveSegments ? e.curveSegments : 12,
                    s = e.material,
                    h = void 0 === e.UVGenerator ? n.ExtrudeGeometry.WorldUVGenerator : e.UVGenerator,
                    u = this.vertices.length,
                    c = t.extractPoints(a),
                    l = c.shape,
                    p = c.holes,
                    d = !n.ShapeUtils.isClockWise(l);
                if (d) {
                    for (l = l.reverse(), i = 0, r = p.length; r > i; i++) o = p[i], n.ShapeUtils.isClockWise(o) && (p[i] = o.reverse());
                    d = !1
                }
                var f = n.ShapeUtils.triangulateShape(l, p);
                for (i = 0, r = p.length; r > i; i++) o = p[i], l = l.concat(o);
                var m, g, v = l.length,
                    y = f.length;
                for (i = 0; v > i; i++) m = l[i], this.vertices.push(new n.Vector3(m.x, m.y, 0));
                for (i = 0; y > i; i++) {
                    g = f[i];
                    var _ = g[0] + u,
                        b = g[1] + u,
                        x = g[2] + u;
                    this.faces.push(new n.Face3(_, b, x, null, null, s)), this.faceVertexUvs[0].push(h.generateTopUV(this, _, b, x))
                }
            }, n.LatheBufferGeometry = function(t, e, i, r) {
                n.BufferGeometry.call(this), this.type = "LatheBufferGeometry", this.parameters = {
                    points: t,
                    segments: e,
                    phiStart: i,
                    phiLength: r
                }, e = Math.floor(e) || 12, i = i || 0, r = r || 2 * Math.PI, r = n.Math.clamp(r, 0, 2 * Math.PI);
                var o, a, s, h = (e + 1) * t.length,
                    u = e * t.length * 2 * 3,
                    c = new n.BufferAttribute(new(u > 65535 ? Uint32Array : Uint16Array)(u), 1),
                    l = new n.BufferAttribute(new Float32Array(3 * h), 3),
                    p = new n.BufferAttribute(new Float32Array(2 * h), 2),
                    d = 0,
                    f = 0,
                    m = (1 / (t.length - 1), 1 / e),
                    g = new n.Vector3,
                    v = new n.Vector2;
                for (a = 0; e >= a; a++) {
                    var y = i + a * m * r,
                        _ = Math.sin(y),
                        b = Math.cos(y);
                    for (s = 0; s <= t.length - 1; s++) g.x = t[s].x * _, g.y = t[s].y, g.z = t[s].x * b, l.setXYZ(d, g.x, g.y, g.z), v.x = a / e, v.y = s / (t.length - 1), p.setXY(d, v.x, v.y), d++
                }
                for (a = 0; e > a; a++)
                    for (s = 0; s < t.length - 1; s++) {
                        o = s + a * t.length;
                        var x = o,
                            w = o + t.length,
                            M = o + t.length + 1,
                            S = o + 1;
                        c.setX(f, x), f++, c.setX(f, w), f++, c.setX(f, S), f++, c.setX(f, w), f++, c.setX(f, M), f++, c.setX(f, S), f++
                    }
                if (this.setIndex(c), this.addAttribute("position", l), this.addAttribute("uv", p), this.computeVertexNormals(), r === 2 * Math.PI) {
                    var T = this.attributes.normal.array,
                        A = new n.Vector3,
                        E = new n.Vector3,
                        C = new n.Vector3;
                    for (o = e * t.length * 3, a = 0, s = 0; a < t.length; a++, s += 3) A.x = T[s + 0], A.y = T[s + 1], A.z = T[s + 2], E.x = T[o + s + 0], E.y = T[o + s + 1], E.z = T[o + s + 2], C.addVectors(A, E).normalize(), T[s + 0] = T[o + s + 0] = C.x, T[s + 1] = T[o + s + 1] = C.y, T[s + 2] = T[o + s + 2] = C.z
                }
            }, n.LatheBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.LatheBufferGeometry.prototype.constructor = n.LatheBufferGeometry, n.LatheGeometry = function(t, e, i, r) {
                n.Geometry.call(this), this.type = "LatheGeometry", this.parameters = {
                    points: t,
                    segments: e,
                    phiStart: i,
                    phiLength: r
                }, this.fromBufferGeometry(new n.LatheBufferGeometry(t, e, i, r)), this.mergeVertices()
            }, n.LatheGeometry.prototype = Object.create(n.Geometry.prototype), n.LatheGeometry.prototype.constructor = n.LatheGeometry, n.PlaneGeometry = function(t, e, i, r) {
                n.Geometry.call(this), this.type = "PlaneGeometry", this.parameters = {
                    width: t,
                    height: e,
                    widthSegments: i,
                    heightSegments: r
                }, this.fromBufferGeometry(new n.PlaneBufferGeometry(t, e, i, r))
            }, n.PlaneGeometry.prototype = Object.create(n.Geometry.prototype), n.PlaneGeometry.prototype.constructor = n.PlaneGeometry, n.PlaneBufferGeometry = function(t, e, i, r) {
                n.BufferGeometry.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
                    width: t,
                    height: e,
                    widthSegments: i,
                    heightSegments: r
                };
                for (var o = t / 2, a = e / 2, s = Math.floor(i) || 1, h = Math.floor(r) || 1, u = s + 1, c = h + 1, l = t / s, p = e / h, d = new Float32Array(u * c * 3), f = new Float32Array(u * c * 3), m = new Float32Array(u * c * 2), g = 0, v = 0, y = 0; c > y; y++)
                    for (var _ = y * p - a, b = 0; u > b; b++) {
                        var x = b * l - o;
                        d[g] = x, d[g + 1] = -_, f[g + 2] = 1, m[v] = b / s, m[v + 1] = 1 - y / h, g += 3, v += 2
                    }
                g = 0;
                for (var w = new(d.length / 3 > 65535 ? Uint32Array : Uint16Array)(s * h * 6), y = 0; h > y; y++)
                    for (var b = 0; s > b; b++) {
                        var M = b + u * y,
                            S = b + u * (y + 1),
                            T = b + 1 + u * (y + 1),
                            A = b + 1 + u * y;
                        w[g] = M, w[g + 1] = S, w[g + 2] = A, w[g + 3] = S, w[g + 4] = T, w[g + 5] = A, g += 6
                    }
                this.setIndex(new n.BufferAttribute(w, 1)), this.addAttribute("position", new n.BufferAttribute(d, 3)), this.addAttribute("normal", new n.BufferAttribute(f, 3)), this.addAttribute("uv", new n.BufferAttribute(m, 2))
            }, n.PlaneBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.PlaneBufferGeometry.prototype.constructor = n.PlaneBufferGeometry, n.RingBufferGeometry = function(t, e, i, r, o, a) {
                n.BufferGeometry.call(this), this.type = "RingBufferGeometry", this.parameters = {
                    innerRadius: t,
                    outerRadius: e,
                    thetaSegments: i,
                    phiSegments: r,
                    thetaStart: o,
                    thetaLength: a
                }, t = t || 20, e = e || 50, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : 2 * Math.PI, i = void 0 !== i ? Math.max(3, i) : 8, r = void 0 !== r ? Math.max(1, r) : 1;
                var s, h, u, c = (i + 1) * (r + 1),
                    l = i * r * 2 * 3,
                    p = new n.BufferAttribute(new(l > 65535 ? Uint32Array : Uint16Array)(l), 1),
                    d = new n.BufferAttribute(new Float32Array(3 * c), 3),
                    f = new n.BufferAttribute(new Float32Array(3 * c), 3),
                    m = new n.BufferAttribute(new Float32Array(2 * c), 2),
                    g = 0,
                    v = 0,
                    y = t,
                    _ = (e - t) / r,
                    b = new n.Vector3,
                    x = new n.Vector2;
                for (h = 0; r >= h; h++) {
                    for (u = 0; i >= u; u++) s = o + u / i * a, b.x = y * Math.cos(s), b.y = y * Math.sin(s), d.setXYZ(g, b.x, b.y, b.z), f.setXYZ(g, 0, 0, 1), x.x = (b.x / e + 1) / 2, x.y = (b.y / e + 1) / 2, m.setXY(g, x.x, x.y), g++;
                    y += _
                }
                for (h = 0; r > h; h++) {
                    var w = h * (i + 1);
                    for (u = 0; i > u; u++) {
                        s = u + w;
                        var M = s,
                            S = s + i + 1,
                            T = s + i + 2,
                            A = s + 1;
                        p.setX(v, M), v++, p.setX(v, S), v++, p.setX(v, T), v++, p.setX(v, M), v++, p.setX(v, T), v++, p.setX(v, A), v++
                    }
                }
                this.setIndex(p), this.addAttribute("position", d), this.addAttribute("normal", f), this.addAttribute("uv", m)
            }, n.RingBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.RingBufferGeometry.prototype.constructor = n.RingBufferGeometry, n.RingGeometry = function(t, e, i, r, o, a) {
                n.Geometry.call(this), this.type = "RingGeometry", this.parameters = {
                    innerRadius: t,
                    outerRadius: e,
                    thetaSegments: i,
                    phiSegments: r,
                    thetaStart: o,
                    thetaLength: a
                }, this.fromBufferGeometry(new n.RingBufferGeometry(t, e, i, r, o, a))
            }, n.RingGeometry.prototype = Object.create(n.Geometry.prototype), n.RingGeometry.prototype.constructor = n.RingGeometry, n.SphereGeometry = function(t, e, i, r, o, a, s) {
                n.Geometry.call(this), this.type = "SphereGeometry", this.parameters = {
                    radius: t,
                    widthSegments: e,
                    heightSegments: i,
                    phiStart: r,
                    phiLength: o,
                    thetaStart: a,
                    thetaLength: s
                }, this.fromBufferGeometry(new n.SphereBufferGeometry(t, e, i, r, o, a, s))
            }, n.SphereGeometry.prototype = Object.create(n.Geometry.prototype), n.SphereGeometry.prototype.constructor = n.SphereGeometry, n.SphereBufferGeometry = function(t, e, i, r, o, a, s) {
                n.BufferGeometry.call(this), this.type = "SphereBufferGeometry", this.parameters = {
                    radius: t,
                    widthSegments: e,
                    heightSegments: i,
                    phiStart: r,
                    phiLength: o,
                    thetaStart: a,
                    thetaLength: s
                }, t = t || 50, e = Math.max(3, Math.floor(e) || 8), i = Math.max(2, Math.floor(i) || 6), r = void 0 !== r ? r : 0, o = void 0 !== o ? o : 2 * Math.PI, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : Math.PI;
                for (var h = a + s, u = (e + 1) * (i + 1), c = new n.BufferAttribute(new Float32Array(3 * u), 3), l = new n.BufferAttribute(new Float32Array(3 * u), 3), p = new n.BufferAttribute(new Float32Array(2 * u), 2), d = 0, f = [], m = new n.Vector3, g = 0; i >= g; g++) {
                    for (var v = [], y = g / i, _ = 0; e >= _; _++) {
                        var b = _ / e,
                            x = -t * Math.cos(r + b * o) * Math.sin(a + y * s),
                            w = t * Math.cos(a + y * s),
                            M = t * Math.sin(r + b * o) * Math.sin(a + y * s);
                        m.set(x, w, M).normalize(), c.setXYZ(d, x, w, M), l.setXYZ(d, m.x, m.y, m.z), p.setXY(d, b, 1 - y), v.push(d), d++
                    }
                    f.push(v)
                }
                for (var S = [], g = 0; i > g; g++)
                    for (var _ = 0; e > _; _++) {
                        var T = f[g][_ + 1],
                            A = f[g][_],
                            E = f[g + 1][_],
                            C = f[g + 1][_ + 1];
                        (0 !== g || a > 0) && S.push(T, A, C), (g !== i - 1 || h < Math.PI) && S.push(A, E, C)
                    }
                this.setIndex(new(c.count > 65535 ? n.Uint32Attribute : n.Uint16Attribute)(S, 1)), this.addAttribute("position", c), this.addAttribute("normal", l), this.addAttribute("uv", p), this.boundingSphere = new n.Sphere(new n.Vector3, t)
            }, n.SphereBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.SphereBufferGeometry.prototype.constructor = n.SphereBufferGeometry, n.TextGeometry = function(t, e) {
                e = e || {};
                var i = e.font;
                if (i instanceof n.Font == !1) return new n.Geometry;
                var r = i.generateShapes(t, e.size, e.curveSegments);
                e.amount = void 0 !== e.height ? e.height : 50, void 0 === e.bevelThickness && (e.bevelThickness = 10), void 0 === e.bevelSize && (e.bevelSize = 8), void 0 === e.bevelEnabled && (e.bevelEnabled = !1), n.ExtrudeGeometry.call(this, r, e), this.type = "TextGeometry"
            }, n.TextGeometry.prototype = Object.create(n.ExtrudeGeometry.prototype), n.TextGeometry.prototype.constructor = n.TextGeometry, n.TorusBufferGeometry = function(t, e, i, r, o) {
                n.BufferGeometry.call(this), this.type = "TorusBufferGeometry", this.parameters = {
                    radius: t,
                    tube: e,
                    radialSegments: i,
                    tubularSegments: r,
                    arc: o
                }, t = t || 100, e = e || 40, i = Math.floor(i) || 8, r = Math.floor(r) || 6, o = o || 2 * Math.PI;
                var a, s, h = (i + 1) * (r + 1),
                    u = i * r * 2 * 3,
                    c = new(u > 65535 ? Uint32Array : Uint16Array)(u),
                    l = new Float32Array(3 * h),
                    p = new Float32Array(3 * h),
                    d = new Float32Array(2 * h),
                    f = 0,
                    m = 0,
                    g = 0,
                    v = new n.Vector3,
                    y = new n.Vector3,
                    _ = new n.Vector3;
                for (a = 0; i >= a; a++)
                    for (s = 0; r >= s; s++) {
                        var b = s / r * o,
                            x = a / i * Math.PI * 2;
                        y.x = (t + e * Math.cos(x)) * Math.cos(b), y.y = (t + e * Math.cos(x)) * Math.sin(b), y.z = e * Math.sin(x), l[f] = y.x, l[f + 1] = y.y, l[f + 2] = y.z, v.x = t * Math.cos(b), v.y = t * Math.sin(b), _.subVectors(y, v).normalize(), p[f] = _.x, p[f + 1] = _.y, p[f + 2] = _.z, d[m] = s / r, d[m + 1] = a / i, f += 3, m += 2
                    }
                for (a = 1; i >= a; a++)
                    for (s = 1; r >= s; s++) {
                        var w = (r + 1) * a + s - 1,
                            M = (r + 1) * (a - 1) + s - 1,
                            S = (r + 1) * (a - 1) + s,
                            T = (r + 1) * a + s;
                        c[g] = w, c[g + 1] = M, c[g + 2] = T, c[g + 3] = M, c[g + 4] = S, c[g + 5] = T, g += 6
                    }
                this.setIndex(new n.BufferAttribute(c, 1)), this.addAttribute("position", new n.BufferAttribute(l, 3)), this.addAttribute("normal", new n.BufferAttribute(p, 3)), this.addAttribute("uv", new n.BufferAttribute(d, 2))
            }, n.TorusBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.TorusBufferGeometry.prototype.constructor = n.TorusBufferGeometry, n.TorusGeometry = function(t, e, i, r, o) {
                n.Geometry.call(this), this.type = "TorusGeometry", this.parameters = {
                    radius: t,
                    tube: e,
                    radialSegments: i,
                    tubularSegments: r,
                    arc: o
                }, this.fromBufferGeometry(new n.TorusBufferGeometry(t, e, i, r, o))
            }, n.TorusGeometry.prototype = Object.create(n.Geometry.prototype), n.TorusGeometry.prototype.constructor = n.TorusGeometry, n.TorusKnotBufferGeometry = function(t, e, i, r, o, a) {
                function s(t, e, i, n, r) {
                    var o = Math.cos(t),
                        a = Math.sin(t),
                        s = i / e * t,
                        h = Math.cos(s);
                    r.x = n * (2 + h) * .5 * o, r.y = n * (2 + h) * a * .5, r.z = n * Math.sin(s) * .5
                }
                n.BufferGeometry.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {
                    radius: t,
                    tube: e,
                    tubularSegments: i,
                    radialSegments: r,
                    p: o,
                    q: a
                }, t = t || 100, e = e || 40, i = Math.floor(i) || 64, r = Math.floor(r) || 8, o = o || 2, a = a || 3;
                var h, u, c = (r + 1) * (i + 1),
                    l = r * i * 2 * 3,
                    p = new n.BufferAttribute(new(l > 65535 ? Uint32Array : Uint16Array)(l), 1),
                    d = new n.BufferAttribute(new Float32Array(3 * c), 3),
                    f = new n.BufferAttribute(new Float32Array(3 * c), 3),
                    m = new n.BufferAttribute(new Float32Array(2 * c), 2),
                    g = 0,
                    v = 0,
                    y = new n.Vector3,
                    _ = new n.Vector3,
                    b = new n.Vector2,
                    x = new n.Vector3,
                    w = new n.Vector3,
                    M = new n.Vector3,
                    S = new n.Vector3,
                    T = new n.Vector3;
                for (h = 0; i >= h; ++h) {
                    var A = h / i * o * Math.PI * 2;
                    for (s(A, o, a, t, x), s(A + .01, o, a, t, w), S.subVectors(w, x), T.addVectors(w, x), M.crossVectors(S, T), T.crossVectors(M, S), M.normalize(), T.normalize(), u = 0; r >= u; ++u) {
                        var E = u / r * Math.PI * 2,
                            C = -e * Math.cos(E),
                            P = e * Math.sin(E);
                        y.x = x.x + (C * T.x + P * M.x), y.y = x.y + (C * T.y + P * M.y),
                            y.z = x.z + (C * T.z + P * M.z), d.setXYZ(g, y.x, y.y, y.z), _.subVectors(y, x).normalize(), f.setXYZ(g, _.x, _.y, _.z), b.x = h / i, b.y = u / r, m.setXY(g, b.x, b.y), g++
                    }
                }
                for (u = 1; i >= u; u++)
                    for (h = 1; r >= h; h++) {
                        var L = (r + 1) * (u - 1) + (h - 1),
                            R = (r + 1) * u + (h - 1),
                            k = (r + 1) * u + h,
                            I = (r + 1) * (u - 1) + h;
                        p.setX(v, L), v++, p.setX(v, R), v++, p.setX(v, I), v++, p.setX(v, R), v++, p.setX(v, k), v++, p.setX(v, I), v++
                    }
                this.setIndex(p), this.addAttribute("position", d), this.addAttribute("normal", f), this.addAttribute("uv", m)
            }, n.TorusKnotBufferGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.TorusKnotBufferGeometry.prototype.constructor = n.TorusKnotBufferGeometry, n.TorusKnotGeometry = function(t, e, i, r, o, a, s) {
                n.Geometry.call(this), this.type = "TorusKnotGeometry", this.parameters = {
                    radius: t,
                    tube: e,
                    tubularSegments: i,
                    radialSegments: r,
                    p: o,
                    q: a
                }, this.fromBufferGeometry(new n.TorusKnotBufferGeometry(t, e, i, r, o, a)), this.mergeVertices()
            }, n.TorusKnotGeometry.prototype = Object.create(n.Geometry.prototype), n.TorusKnotGeometry.prototype.constructor = n.TorusKnotGeometry, n.TubeGeometry = function(t, e, i, r, o, a) {
                function s(t, e, i) {
                    return L.vertices.push(new n.Vector3(t, e, i)) - 1
                }
                n.Geometry.call(this), this.type = "TubeGeometry", this.parameters = {
                    path: t,
                    segments: e,
                    radius: i,
                    radialSegments: r,
                    closed: o,
                    taper: a
                }, e = e || 64, i = i || 1, r = r || 8, o = o || !1, a = a || n.TubeGeometry.NoTaper;
                var h, u, c, l, p, d, f, m, g, v, y, _, b, x, w, M, S, T, A, E, C, P = [],
                    L = this,
                    R = e + 1,
                    k = new n.Vector3,
                    I = new n.TubeGeometry.FrenetFrames(t, e, o),
                    D = I.tangents,
                    B = I.normals,
                    O = I.binormals;
                for (this.tangents = D, this.normals = B, this.binormals = O, v = 0; R > v; v++)
                    for (P[v] = [], l = v / (R - 1), g = t.getPointAt(l), h = D[v], u = B[v], c = O[v], d = i * a(l), y = 0; r > y; y++) p = y / r * 2 * Math.PI, f = -d * Math.cos(p), m = d * Math.sin(p), k.copy(g), k.x += f * u.x + m * c.x, k.y += f * u.y + m * c.y, k.z += f * u.z + m * c.z, P[v][y] = s(k.x, k.y, k.z);
                for (v = 0; e > v; v++)
                    for (y = 0; r > y; y++) _ = o ? (v + 1) % e : v + 1, b = (y + 1) % r, x = P[v][y], w = P[_][y], M = P[_][b], S = P[v][b], T = new n.Vector2(v / e, y / r), A = new n.Vector2((v + 1) / e, y / r), E = new n.Vector2((v + 1) / e, (y + 1) / r), C = new n.Vector2(v / e, (y + 1) / r), this.faces.push(new n.Face3(x, w, S)), this.faceVertexUvs[0].push([T, A, C]), this.faces.push(new n.Face3(w, M, S)), this.faceVertexUvs[0].push([A.clone(), E, C.clone()]);
                this.computeFaceNormals(), this.computeVertexNormals()
            }, n.TubeGeometry.prototype = Object.create(n.Geometry.prototype), n.TubeGeometry.prototype.constructor = n.TubeGeometry, n.TubeGeometry.NoTaper = function(t) {
                return 1
            }, n.TubeGeometry.SinusoidalTaper = function(t) {
                return Math.sin(Math.PI * t)
            }, n.TubeGeometry.FrenetFrames = function(t, e, i) {
                function r() {
                    f[0] = new n.Vector3, m[0] = new n.Vector3, a = Number.MAX_VALUE, s = Math.abs(d[0].x), h = Math.abs(d[0].y), u = Math.abs(d[0].z), a >= s && (a = s, p.set(1, 0, 0)), a >= h && (a = h, p.set(0, 1, 0)), a >= u && p.set(0, 0, 1), g.crossVectors(d[0], p).normalize(), f[0].crossVectors(d[0], g), m[0].crossVectors(d[0], f[0])
                }
                var o, a, s, h, u, c, l, p = new n.Vector3,
                    d = [],
                    f = [],
                    m = [],
                    g = new n.Vector3,
                    v = new n.Matrix4,
                    y = e + 1;
                for (this.tangents = d, this.normals = f, this.binormals = m, c = 0; y > c; c++) l = c / (y - 1), d[c] = t.getTangentAt(l), d[c].normalize();
                for (r(), c = 1; y > c; c++) f[c] = f[c - 1].clone(), m[c] = m[c - 1].clone(), g.crossVectors(d[c - 1], d[c]), g.length() > Number.EPSILON && (g.normalize(), o = Math.acos(n.Math.clamp(d[c - 1].dot(d[c]), -1, 1)), f[c].applyMatrix4(v.makeRotationAxis(g, o))), m[c].crossVectors(d[c], f[c]);
                if (i)
                    for (o = Math.acos(n.Math.clamp(f[0].dot(f[y - 1]), -1, 1)), o /= y - 1, d[0].dot(g.crossVectors(f[0], f[y - 1])) > 0 && (o = -o), c = 1; y > c; c++) f[c].applyMatrix4(v.makeRotationAxis(d[c], o * c)), m[c].crossVectors(d[c], f[c])
            }, n.PolyhedronGeometry = function(t, e, i, r) {
                function o(t) {
                    var e = t.normalize().clone();
                    e.index = l.vertices.push(e) - 1;
                    var i = h(t) / 2 / Math.PI + .5,
                        r = u(t) / Math.PI + .5;
                    return e.uv = new n.Vector2(i, 1 - r), e
                }

                function a(t, e, i) {
                    var r = new n.Face3(t.index, e.index, i.index, [t.clone(), e.clone(), i.clone()]);
                    l.faces.push(r), b.copy(t).add(e).add(i).divideScalar(3);
                    var o = h(b);
                    l.faceVertexUvs[0].push([c(t.uv, t, o), c(e.uv, e, o), c(i.uv, i, o)])
                }

                function s(t, e) {
                    for (var i = Math.pow(2, e), n = o(l.vertices[t.a]), r = o(l.vertices[t.b]), s = o(l.vertices[t.c]), h = [], u = 0; i >= u; u++) {
                        h[u] = [];
                        for (var c = o(n.clone().lerp(s, u / i)), p = o(r.clone().lerp(s, u / i)), d = i - u, f = 0; d >= f; f++) 0 === f && u === i ? h[u][f] = c : h[u][f] = o(c.clone().lerp(p, f / d))
                    }
                    for (var u = 0; i > u; u++)
                        for (var f = 0; 2 * (i - u) - 1 > f; f++) {
                            var m = Math.floor(f / 2);
                            f % 2 === 0 ? a(h[u][m + 1], h[u + 1][m], h[u][m]) : a(h[u][m + 1], h[u + 1][m + 1], h[u + 1][m])
                        }
                }

                function h(t) {
                    return Math.atan2(t.z, -t.x)
                }

                function u(t) {
                    return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
                }

                function c(t, e, i) {
                    return 0 > i && 1 === t.x && (t = new n.Vector2(t.x - 1, t.y)), 0 === e.x && 0 === e.z && (t = new n.Vector2(i / 2 / Math.PI + .5, t.y)), t.clone()
                }
                n.Geometry.call(this), this.type = "PolyhedronGeometry", this.parameters = {
                    vertices: t,
                    indices: e,
                    radius: i,
                    detail: r
                }, i = i || 1, r = r || 0;
                for (var l = this, p = 0, d = t.length; d > p; p += 3) o(new n.Vector3(t[p], t[p + 1], t[p + 2]));
                for (var f = this.vertices, m = [], p = 0, g = 0, d = e.length; d > p; p += 3, g++) {
                    var v = f[e[p]],
                        y = f[e[p + 1]],
                        _ = f[e[p + 2]];
                    m[g] = new n.Face3(v.index, y.index, _.index, [v.clone(), y.clone(), _.clone()])
                }
                for (var b = new n.Vector3, p = 0, d = m.length; d > p; p++) s(m[p], r);
                for (var p = 0, d = this.faceVertexUvs[0].length; d > p; p++) {
                    var x = this.faceVertexUvs[0][p],
                        w = x[0].x,
                        M = x[1].x,
                        S = x[2].x,
                        T = Math.max(w, M, S),
                        A = Math.min(w, M, S);
                    T > .9 && .1 > A && (.2 > w && (x[0].x += 1), .2 > M && (x[1].x += 1), .2 > S && (x[2].x += 1))
                }
                for (var p = 0, d = this.vertices.length; d > p; p++) this.vertices[p].multiplyScalar(i);
                this.mergeVertices(), this.computeFaceNormals(), this.boundingSphere = new n.Sphere(new n.Vector3, i)
            }, n.PolyhedronGeometry.prototype = Object.create(n.Geometry.prototype), n.PolyhedronGeometry.prototype.constructor = n.PolyhedronGeometry, n.DodecahedronGeometry = function(t, e) {
                var i = (1 + Math.sqrt(5)) / 2,
                    r = 1 / i,
                    o = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -i, 0, -r, i, 0, r, -i, 0, r, i, -r, -i, 0, -r, i, 0, r, -i, 0, r, i, 0, -i, 0, -r, i, 0, -r, -i, 0, r, i, 0, r],
                    a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
                n.PolyhedronGeometry.call(this, o, a, t, e), this.type = "DodecahedronGeometry", this.parameters = {
                    radius: t,
                    detail: e
                }
            }, n.DodecahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype), n.DodecahedronGeometry.prototype.constructor = n.DodecahedronGeometry, n.IcosahedronGeometry = function(t, e) {
                var i = (1 + Math.sqrt(5)) / 2,
                    r = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1],
                    o = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                n.PolyhedronGeometry.call(this, r, o, t, e), this.type = "IcosahedronGeometry", this.parameters = {
                    radius: t,
                    detail: e
                }
            }, n.IcosahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype), n.IcosahedronGeometry.prototype.constructor = n.IcosahedronGeometry, n.OctahedronGeometry = function(t, e) {
                var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
                    r = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                n.PolyhedronGeometry.call(this, i, r, t, e), this.type = "OctahedronGeometry", this.parameters = {
                    radius: t,
                    detail: e
                }
            }, n.OctahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype), n.OctahedronGeometry.prototype.constructor = n.OctahedronGeometry, n.TetrahedronGeometry = function(t, e) {
                var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
                    r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                n.PolyhedronGeometry.call(this, i, r, t, e), this.type = "TetrahedronGeometry", this.parameters = {
                    radius: t,
                    detail: e
                }
            }, n.TetrahedronGeometry.prototype = Object.create(n.PolyhedronGeometry.prototype), n.TetrahedronGeometry.prototype.constructor = n.TetrahedronGeometry, n.ParametricGeometry = function(t, e, i) {
                n.Geometry.call(this), this.type = "ParametricGeometry", this.parameters = {
                    func: t,
                    slices: e,
                    stacks: i
                };
                var r, o, a, s, h, u = this.vertices,
                    c = this.faces,
                    l = this.faceVertexUvs[0],
                    p = e + 1;
                for (r = 0; i >= r; r++)
                    for (h = r / i, o = 0; e >= o; o++) s = o / e, a = t(s, h), u.push(a);
                var d, f, m, g, v, y, _, b;
                for (r = 0; i > r; r++)
                    for (o = 0; e > o; o++) d = r * p + o, f = r * p + o + 1, m = (r + 1) * p + o + 1, g = (r + 1) * p + o, v = new n.Vector2(o / e, r / i), y = new n.Vector2((o + 1) / e, r / i), _ = new n.Vector2((o + 1) / e, (r + 1) / i), b = new n.Vector2(o / e, (r + 1) / i), c.push(new n.Face3(d, f, g)), l.push([v, y, b]), c.push(new n.Face3(f, m, g)), l.push([y.clone(), _, b.clone()]);
                this.computeFaceNormals(), this.computeVertexNormals()
            }, n.ParametricGeometry.prototype = Object.create(n.Geometry.prototype), n.ParametricGeometry.prototype.constructor = n.ParametricGeometry, n.WireframeGeometry = function(t) {
                function e(t, e) {
                    return t - e
                }
                n.BufferGeometry.call(this);
                var i = [0, 0],
                    r = {},
                    o = ["a", "b", "c"];
                if (t instanceof n.Geometry) {
                    for (var a = t.vertices, s = t.faces, h = 0, u = new Uint32Array(6 * s.length), c = 0, l = s.length; l > c; c++)
                        for (var p = s[c], d = 0; 3 > d; d++) {
                            i[0] = p[o[d]], i[1] = p[o[(d + 1) % 3]], i.sort(e);
                            var f = i.toString();
                            void 0 === r[f] && (u[2 * h] = i[0], u[2 * h + 1] = i[1], r[f] = !0, h++)
                        }
                    for (var m = new Float32Array(2 * h * 3), c = 0, l = h; l > c; c++)
                        for (var d = 0; 2 > d; d++) {
                            var g = a[u[2 * c + d]],
                                v = 6 * c + 3 * d;
                            m[v + 0] = g.x, m[v + 1] = g.y, m[v + 2] = g.z
                        }
                    this.addAttribute("position", new n.BufferAttribute(m, 3))
                } else if (t instanceof n.BufferGeometry)
                    if (null !== t.index) {
                        var y = t.index.array,
                            a = t.attributes.position,
                            _ = t.groups,
                            h = 0;
                        0 === _.length && t.addGroup(0, y.length);
                        for (var u = new Uint32Array(2 * y.length), b = 0, x = _.length; x > b; ++b)
                            for (var w = _[b], M = w.start, S = w.count, c = M, T = M + S; T > c; c += 3)
                                for (var d = 0; 3 > d; d++) {
                                    i[0] = y[c + d], i[1] = y[c + (d + 1) % 3], i.sort(e);
                                    var f = i.toString();
                                    void 0 === r[f] && (u[2 * h] = i[0], u[2 * h + 1] = i[1], r[f] = !0, h++)
                                }
                        for (var m = new Float32Array(2 * h * 3), c = 0, l = h; l > c; c++)
                            for (var d = 0; 2 > d; d++) {
                                var v = 6 * c + 3 * d,
                                    A = u[2 * c + d];
                                m[v + 0] = a.getX(A), m[v + 1] = a.getY(A), m[v + 2] = a.getZ(A)
                            }
                        this.addAttribute("position", new n.BufferAttribute(m, 3))
                    } else {
                        for (var a = t.attributes.position.array, h = a.length / 3, E = h / 3, m = new Float32Array(2 * h * 3), c = 0, l = E; l > c; c++)
                            for (var d = 0; 3 > d; d++) {
                                var v = 18 * c + 6 * d,
                                    C = 9 * c + 3 * d;
                                m[v + 0] = a[C], m[v + 1] = a[C + 1], m[v + 2] = a[C + 2];
                                var A = 9 * c + 3 * ((d + 1) % 3);
                                m[v + 3] = a[A], m[v + 4] = a[A + 1], m[v + 5] = a[A + 2]
                            }
                        this.addAttribute("position", new n.BufferAttribute(m, 3))
                    }
            }, n.WireframeGeometry.prototype = Object.create(n.BufferGeometry.prototype), n.WireframeGeometry.prototype.constructor = n.WireframeGeometry, n.AxisHelper = function(t) {
                t = t || 1;
                var e = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]),
                    i = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]),
                    r = new n.BufferGeometry;
                r.addAttribute("position", new n.BufferAttribute(e, 3)), r.addAttribute("color", new n.BufferAttribute(i, 3));
                var o = new n.LineBasicMaterial({
                    vertexColors: n.VertexColors
                });
                n.LineSegments.call(this, r, o)
            }, n.AxisHelper.prototype = Object.create(n.LineSegments.prototype), n.AxisHelper.prototype.constructor = n.AxisHelper, n.ArrowHelper = function() {
                var t = new n.BufferGeometry;
                t.addAttribute("position", new n.Float32Attribute([0, 0, 0, 0, 1, 0], 3));
                var e = new n.CylinderBufferGeometry(0, .5, 1, 5, 1);
                return e.translate(0, -.5, 0),
                    function(i, r, o, a, s, h) {
                        n.Object3D.call(this), void 0 === a && (a = 16776960), void 0 === o && (o = 1), void 0 === s && (s = .2 * o), void 0 === h && (h = .2 * s), this.position.copy(r), this.line = new n.Line(t, new n.LineBasicMaterial({
                            color: a
                        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new n.Mesh(e, new n.MeshBasicMaterial({
                            color: a
                        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(i), this.setLength(o, s, h)
                    }
            }(), n.ArrowHelper.prototype = Object.create(n.Object3D.prototype), n.ArrowHelper.prototype.constructor = n.ArrowHelper, n.ArrowHelper.prototype.setDirection = function() {
                var t, e = new n.Vector3;
                return function(i) {
                    i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(), t = Math.acos(i.y), this.quaternion.setFromAxisAngle(e, t))
                }
            }(), n.ArrowHelper.prototype.setLength = function(t, e, i) {
                void 0 === e && (e = .2 * t), void 0 === i && (i = .2 * e), this.line.scale.set(1, Math.max(0, t - e), 1), this.line.updateMatrix(), this.cone.scale.set(i, e, i), this.cone.position.y = t, this.cone.updateMatrix()
            }, n.ArrowHelper.prototype.setColor = function(t) {
                this.line.material.color.copy(t), this.cone.material.color.copy(t)
            }, n.BoxHelper = function(t, e) {
                void 0 === e && (e = 16776960);
                var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    r = new Float32Array(24),
                    o = new n.BufferGeometry;
                o.setIndex(new n.BufferAttribute(i, 1)), o.addAttribute("position", new n.BufferAttribute(r, 3)), n.LineSegments.call(this, o, new n.LineBasicMaterial({
                    color: e
                })), void 0 !== t && this.update(t)
            }, n.BoxHelper.prototype = Object.create(n.LineSegments.prototype), n.BoxHelper.prototype.constructor = n.BoxHelper, n.BoxHelper.prototype.update = function() {
                var t = new n.Box3;
                return function(e) {
                    if (e instanceof n.Box3 ? t.copy(e) : t.setFromObject(e), !t.isEmpty()) {
                        var i = t.min,
                            r = t.max,
                            o = this.geometry.attributes.position,
                            a = o.array;
                        a[0] = r.x, a[1] = r.y, a[2] = r.z, a[3] = i.x, a[4] = r.y, a[5] = r.z, a[6] = i.x, a[7] = i.y, a[8] = r.z, a[9] = r.x, a[10] = i.y, a[11] = r.z, a[12] = r.x, a[13] = r.y, a[14] = i.z, a[15] = i.x, a[16] = r.y, a[17] = i.z, a[18] = i.x, a[19] = i.y, a[20] = i.z, a[21] = r.x, a[22] = i.y, a[23] = i.z, o.needsUpdate = !0, this.geometry.computeBoundingSphere()
                    }
                }
            }(), n.BoundingBoxHelper = function(t, e) {
                var i = void 0 !== e ? e : 8947848;
                this.object = t, this.box = new n.Box3, n.Mesh.call(this, new n.BoxGeometry(1, 1, 1), new n.MeshBasicMaterial({
                    color: i,
                    wireframe: !0
                }))
            }, n.BoundingBoxHelper.prototype = Object.create(n.Mesh.prototype), n.BoundingBoxHelper.prototype.constructor = n.BoundingBoxHelper, n.BoundingBoxHelper.prototype.update = function() {
                this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
            }, n.CameraHelper = function(t) {
                function e(t, e, n) {
                    i(t, n), i(e, n)
                }

                function i(t, e) {
                    r.vertices.push(new n.Vector3), r.colors.push(new n.Color(e)), void 0 === a[t] && (a[t] = []), a[t].push(r.vertices.length - 1)
                }
                var r = new n.Geometry,
                    o = new n.LineBasicMaterial({
                        color: 16777215,
                        vertexColors: n.FaceColors
                    }),
                    a = {},
                    s = 16755200,
                    h = 16711680,
                    u = 43775,
                    c = 16777215,
                    l = 3355443;
                e("n1", "n2", s), e("n2", "n4", s), e("n4", "n3", s), e("n3", "n1", s), e("f1", "f2", s), e("f2", "f4", s), e("f4", "f3", s), e("f3", "f1", s), e("n1", "f1", s), e("n2", "f2", s), e("n3", "f3", s), e("n4", "f4", s), e("p", "n1", h), e("p", "n2", h), e("p", "n3", h), e("p", "n4", h), e("u1", "u2", u), e("u2", "u3", u), e("u3", "u1", u), e("c", "t", c), e("p", "c", l), e("cn1", "cn2", l), e("cn3", "cn4", l), e("cf1", "cf2", l), e("cf3", "cf4", l), n.LineSegments.call(this, r, o), this.camera = t, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = a, this.update()
            }, n.CameraHelper.prototype = Object.create(n.LineSegments.prototype), n.CameraHelper.prototype.constructor = n.CameraHelper, n.CameraHelper.prototype.update = function() {
                function t(t, n, a, s) {
                    r.set(n, a, s).unproject(o);
                    var h = i[t];
                    if (void 0 !== h)
                        for (var u = 0, c = h.length; c > u; u++) e.vertices[h[u]].copy(r)
                }
                var e, i, r = new n.Vector3,
                    o = new n.Camera;
                return function() {
                    e = this.geometry, i = this.pointMap;
                    var n = 1,
                        r = 1;
                    o.projectionMatrix.copy(this.camera.projectionMatrix), t("c", 0, 0, -1), t("t", 0, 0, 1), t("n1", -n, -r, -1), t("n2", n, -r, -1), t("n3", -n, r, -1), t("n4", n, r, -1), t("f1", -n, -r, 1), t("f2", n, -r, 1), t("f3", -n, r, 1), t("f4", n, r, 1), t("u1", .7 * n, 1.1 * r, -1), t("u2", .7 * -n, 1.1 * r, -1), t("u3", 0, 2 * r, -1), t("cf1", -n, 0, 1), t("cf2", n, 0, 1), t("cf3", 0, -r, 1), t("cf4", 0, r, 1), t("cn1", -n, 0, -1), t("cn2", n, 0, -1), t("cn3", 0, -r, -1), t("cn4", 0, r, -1), e.verticesNeedUpdate = !0
                }
            }(), n.DirectionalLightHelper = function(t, e) {
                n.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, void 0 === e && (e = 1);
                var i = new n.BufferGeometry;
                i.addAttribute("position", new n.Float32Attribute([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0], 3));
                var r = new n.LineBasicMaterial({
                    fog: !1
                });
                this.add(new n.Line(i, r)), i = new n.BufferGeometry, i.addAttribute("position", new n.Float32Attribute([0, 0, 0, 0, 0, 1], 3)), this.add(new n.Line(i, r)), this.update()
            }, n.DirectionalLightHelper.prototype = Object.create(n.Object3D.prototype), n.DirectionalLightHelper.prototype.constructor = n.DirectionalLightHelper, n.DirectionalLightHelper.prototype.dispose = function() {
                var t = this.children[0],
                    e = this.children[1];
                t.geometry.dispose(), t.material.dispose(), e.geometry.dispose(), e.material.dispose()
            }, n.DirectionalLightHelper.prototype.update = function() {
                var t = new n.Vector3,
                    e = new n.Vector3,
                    i = new n.Vector3;
                return function() {
                    t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), i.subVectors(e, t);
                    var n = this.children[0],
                        r = this.children[1];
                    n.lookAt(i), n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), r.lookAt(i), r.scale.z = i.length()
                }
            }(), n.EdgesHelper = function(t, e, i) {
                var r = void 0 !== e ? e : 16777215;
                n.LineSegments.call(this, new n.EdgesGeometry(t.geometry, i), new n.LineBasicMaterial({
                    color: r
                })), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
            }, n.EdgesHelper.prototype = Object.create(n.LineSegments.prototype), n.EdgesHelper.prototype.constructor = n.EdgesHelper, n.FaceNormalsHelper = function(t, e, i, r) {
                this.object = t, this.size = void 0 !== e ? e : 1;
                var o = void 0 !== i ? i : 16776960,
                    a = void 0 !== r ? r : 1,
                    s = 0,
                    h = this.object.geometry;
                h instanceof n.Geometry && (s = h.faces.length);
                var u = new n.BufferGeometry,
                    c = new n.Float32Attribute(2 * s * 3, 3);
                u.addAttribute("position", c), n.LineSegments.call(this, u, new n.LineBasicMaterial({
                    color: o,
                    linewidth: a
                })), this.matrixAutoUpdate = !1, this.update()
            }, n.FaceNormalsHelper.prototype = Object.create(n.LineSegments.prototype), n.FaceNormalsHelper.prototype.constructor = n.FaceNormalsHelper, n.FaceNormalsHelper.prototype.update = function() {
                var t = new n.Vector3,
                    e = new n.Vector3,
                    i = new n.Matrix3;
                return function() {
                    this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                    for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, h = 0, u = 0, c = s.length; c > u; u++) {
                        var l = s[u],
                            p = l.normal;
                        t.copy(a[l.a]).add(a[l.b]).add(a[l.c]).divideScalar(3).applyMatrix4(n), e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), r.setXYZ(h, t.x, t.y, t.z), h += 1, r.setXYZ(h, e.x, e.y, e.z), h += 1
                    }
                    return r.needsUpdate = !0, this
                }
            }(), n.GridHelper = function(t, e, i, r) {
                i = new n.Color(void 0 !== i ? i : 4473924), r = new n.Color(void 0 !== r ? r : 8947848);
                for (var o = [], a = [], s = -t, h = 0; t >= s; s += e) {
                    o.push(-t, 0, s, t, 0, s), o.push(s, 0, -t, s, 0, t);
                    var u = 0 === s ? i : r;
                    u.toArray(a, h), h += 3, u.toArray(a, h), h += 3, u.toArray(a, h), h += 3, u.toArray(a, h), h += 3
                }
                var c = new n.BufferGeometry;
                c.addAttribute("position", new n.Float32Attribute(o, 3)), c.addAttribute("color", new n.Float32Attribute(a, 3));
                var l = new n.LineBasicMaterial({
                    vertexColors: n.VertexColors
                });
                n.LineSegments.call(this, c, l)
            }, n.GridHelper.prototype = Object.create(n.LineSegments.prototype), n.GridHelper.prototype.constructor = n.GridHelper, n.GridHelper.prototype.setColors = function() {}, n.HemisphereLightHelper = function(t, e) {
                n.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new n.Color, new n.Color];
                var i = new n.SphereGeometry(e, 4, 2);
                i.rotateX(-Math.PI / 2);
                for (var r = 0, o = 8; o > r; r++) i.faces[r].color = this.colors[4 > r ? 0 : 1];
                var a = new n.MeshBasicMaterial({
                    vertexColors: n.FaceColors,
                    wireframe: !0
                });
                this.lightSphere = new n.Mesh(i, a), this.add(this.lightSphere), this.update()
            }, n.HemisphereLightHelper.prototype = Object.create(n.Object3D.prototype), n.HemisphereLightHelper.prototype.constructor = n.HemisphereLightHelper, n.HemisphereLightHelper.prototype.dispose = function() {
                this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose()
            }, n.HemisphereLightHelper.prototype.update = function() {
                var t = new n.Vector3;
                return function() {
                    this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
                }
            }(), n.PointLightHelper = function(t, e) {
                this.light = t, this.light.updateMatrixWorld();
                var i = new n.SphereBufferGeometry(e, 4, 2),
                    r = new n.MeshBasicMaterial({
                        wireframe: !0,
                        fog: !1
                    });
                r.color.copy(this.light.color).multiplyScalar(this.light.intensity), n.Mesh.call(this, i, r), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1
            }, n.PointLightHelper.prototype = Object.create(n.Mesh.prototype), n.PointLightHelper.prototype.constructor = n.PointLightHelper, n.PointLightHelper.prototype.dispose = function() {
                this.geometry.dispose(), this.material.dispose()
            }, n.PointLightHelper.prototype.update = function() {
                this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
            }, n.SkeletonHelper = function(t) {
                this.bones = this.getBoneList(t);
                for (var e = new n.Geometry, i = 0; i < this.bones.length; i++) {
                    var r = this.bones[i];
                    r.parent instanceof n.Bone && (e.vertices.push(new n.Vector3), e.vertices.push(new n.Vector3), e.colors.push(new n.Color(0, 0, 1)), e.colors.push(new n.Color(0, 1, 0)))
                }
                e.dynamic = !0;
                var o = new n.LineBasicMaterial({
                    vertexColors: n.VertexColors,
                    depthTest: !1,
                    depthWrite: !1,
                    transparent: !0
                });
                n.LineSegments.call(this, e, o), this.root = t, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.update()
            }, n.SkeletonHelper.prototype = Object.create(n.LineSegments.prototype), n.SkeletonHelper.prototype.constructor = n.SkeletonHelper, n.SkeletonHelper.prototype.getBoneList = function(t) {
                var e = [];
                t instanceof n.Bone && e.push(t);
                for (var i = 0; i < t.children.length; i++) e.push.apply(e, this.getBoneList(t.children[i]));
                return e
            }, n.SkeletonHelper.prototype.update = function() {
                for (var t = this.geometry, e = (new n.Matrix4).getInverse(this.root.matrixWorld), i = new n.Matrix4, r = 0, o = 0; o < this.bones.length; o++) {
                    var a = this.bones[o];
                    a.parent instanceof n.Bone && (i.multiplyMatrices(e, a.matrixWorld), t.vertices[r].setFromMatrixPosition(i), i.multiplyMatrices(e, a.parent.matrixWorld), t.vertices[r + 1].setFromMatrixPosition(i), r += 2)
                }
                t.verticesNeedUpdate = !0, t.computeBoundingSphere()
            }, n.SpotLightHelper = function(t) {
                n.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1;
                for (var e = new n.BufferGeometry, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, o = 1, a = 32; a > r; r++, o++) {
                    var s = r / a * Math.PI * 2,
                        h = o / a * Math.PI * 2;
                    i.push(Math.cos(s), Math.sin(s), 1, Math.cos(h), Math.sin(h), 1)
                }
                e.addAttribute("position", new n.Float32Attribute(i, 3));
                var u = new n.LineBasicMaterial({
                    fog: !1
                });
                this.cone = new n.LineSegments(e, u), this.add(this.cone), this.update()
            }, n.SpotLightHelper.prototype = Object.create(n.Object3D.prototype), n.SpotLightHelper.prototype.constructor = n.SpotLightHelper, n.SpotLightHelper.prototype.dispose = function() {
                this.cone.geometry.dispose(), this.cone.material.dispose()
            }, n.SpotLightHelper.prototype.update = function() {
                var t = new n.Vector3,
                    e = new n.Vector3;
                return function() {
                    var i = this.light.distance ? this.light.distance : 1e3,
                        n = i * Math.tan(this.light.angle);
                    this.cone.scale.set(n, n, i), t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(e.sub(t)), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
                }
            }(), n.VertexNormalsHelper = function(t, e, i, r) {
                this.object = t, this.size = void 0 !== e ? e : 1;
                var o = void 0 !== i ? i : 16711680,
                    a = void 0 !== r ? r : 1,
                    s = 0,
                    h = this.object.geometry;
                h instanceof n.Geometry ? s = 3 * h.faces.length : h instanceof n.BufferGeometry && (s = h.attributes.normal.count);
                var u = new n.BufferGeometry,
                    c = new n.Float32Attribute(2 * s * 3, 3);
                u.addAttribute("position", c), n.LineSegments.call(this, u, new n.LineBasicMaterial({
                    color: o,
                    linewidth: a
                })), this.matrixAutoUpdate = !1, this.update()
            }, n.VertexNormalsHelper.prototype = Object.create(n.LineSegments.prototype), n.VertexNormalsHelper.prototype.constructor = n.VertexNormalsHelper, n.VertexNormalsHelper.prototype.update = function() {
                var t = new n.Vector3,
                    e = new n.Vector3,
                    i = new n.Matrix3;
                return function() {
                    var r = ["a", "b", "c"];
                    this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                    var o = this.object.matrixWorld,
                        a = this.geometry.attributes.position,
                        s = this.object.geometry;
                    if (s instanceof n.Geometry)
                        for (var h = s.vertices, u = s.faces, c = 0, l = 0, p = u.length; p > l; l++)
                            for (var d = u[l], f = 0, m = d.vertexNormals.length; m > f; f++) {
                                var g = h[d[r[f]]],
                                    v = d.vertexNormals[f];
                                t.copy(g).applyMatrix4(o), e.copy(v).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), a.setXYZ(c, t.x, t.y, t.z), c += 1, a.setXYZ(c, e.x, e.y, e.z), c += 1
                            } else if (s instanceof n.BufferGeometry)
                                for (var y = s.attributes.position, _ = s.attributes.normal, c = 0, f = 0, m = y.count; m > f; f++) t.set(y.getX(f), y.getY(f), y.getZ(f)).applyMatrix4(o), e.set(_.getX(f), _.getY(f), _.getZ(f)), e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), a.setXYZ(c, t.x, t.y, t.z), c += 1, a.setXYZ(c, e.x, e.y, e.z), c += 1;
                    return a.needsUpdate = !0, this
                }
            }(), n.WireframeHelper = function(t, e) {
                var i = void 0 !== e ? e : 16777215;
                n.LineSegments.call(this, new n.WireframeGeometry(t.geometry), new n.LineBasicMaterial({
                    color: i
                })), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
            }, n.WireframeHelper.prototype = Object.create(n.LineSegments.prototype), n.WireframeHelper.prototype.constructor = n.WireframeHelper, n.ImmediateRenderObject = function(t) {
                n.Object3D.call(this), this.material = t, this.render = function(t) {}
            }, n.ImmediateRenderObject.prototype = Object.create(n.Object3D.prototype), n.ImmediateRenderObject.prototype.constructor = n.ImmediateRenderObject, n.MorphBlendMesh = function(t, e) {
                n.Mesh.call(this, t, e), this.animationsMap = {}, this.animationsList = [];
                var i = this.geometry.morphTargets.length,
                    r = "__default",
                    o = 0,
                    a = i - 1,
                    s = i / 1;
                this.createAnimation(r, o, a, s), this.setAnimationWeight(r, 1)
            }, n.MorphBlendMesh.prototype = Object.create(n.Mesh.prototype), n.MorphBlendMesh.prototype.constructor = n.MorphBlendMesh, n.MorphBlendMesh.prototype.createAnimation = function(t, e, i, n) {
                var r = {
                    start: e,
                    end: i,
                    length: i - e + 1,
                    fps: n,
                    duration: (i - e) / n,
                    lastFrame: 0,
                    currentFrame: 0,
                    active: !1,
                    time: 0,
                    direction: 1,
                    weight: 1,
                    directionBackwards: !1,
                    mirroredLoop: !1
                };
                this.animationsMap[t] = r, this.animationsList.push(r)
            }, n.MorphBlendMesh.prototype.autoCreateAnimations = function(t) {
                for (var e, i = /([a-z]+)_?(\d+)/i, n = {}, r = this.geometry, o = 0, a = r.morphTargets.length; a > o; o++) {
                    var s = r.morphTargets[o],
                        h = s.name.match(i);
                    if (h && h.length > 1) {
                        var u = h[1];
                        n[u] || (n[u] = {
                            start: 1 / 0,
                            end: -(1 / 0)
                        });
                        var c = n[u];
                        o < c.start && (c.start = o), o > c.end && (c.end = o), e || (e = u)
                    }
                }
                for (var u in n) {
                    var c = n[u];
                    this.createAnimation(u, c.start, c.end, t)
                }
                this.firstAnimation = e
            }, n.MorphBlendMesh.prototype.setAnimationDirectionForward = function(t) {
                var e = this.animationsMap[t];
                e && (e.direction = 1, e.directionBackwards = !1)
            }, n.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(t) {
                var e = this.animationsMap[t];
                e && (e.direction = -1, e.directionBackwards = !0)
            }, n.MorphBlendMesh.prototype.setAnimationFPS = function(t, e) {
                var i = this.animationsMap[t];
                i && (i.fps = e, i.duration = (i.end - i.start) / i.fps)
            }, n.MorphBlendMesh.prototype.setAnimationDuration = function(t, e) {
                var i = this.animationsMap[t];
                i && (i.duration = e, i.fps = (i.end - i.start) / i.duration)
            }, n.MorphBlendMesh.prototype.setAnimationWeight = function(t, e) {
                var i = this.animationsMap[t];
                i && (i.weight = e)
            }, n.MorphBlendMesh.prototype.setAnimationTime = function(t, e) {
                var i = this.animationsMap[t];
                i && (i.time = e)
            }, n.MorphBlendMesh.prototype.getAnimationTime = function(t) {
                var e = 0,
                    i = this.animationsMap[t];
                return i && (e = i.time), e
            }, n.MorphBlendMesh.prototype.getAnimationDuration = function(t) {
                var e = -1,
                    i = this.animationsMap[t];
                return i && (e = i.duration), e
            }, n.MorphBlendMesh.prototype.playAnimation = function(t) {
                var e = this.animationsMap[t];
                e && (e.time = 0, e.active = !0)
            }, n.MorphBlendMesh.prototype.stopAnimation = function(t) {
                var e = this.animationsMap[t];
                e && (e.active = !1)
            }, n.MorphBlendMesh.prototype.update = function(t) {
                for (var e = 0, i = this.animationsList.length; i > e; e++) {
                    var r = this.animationsList[e];
                    if (r.active) {
                        var o = r.duration / r.length;
                        r.time += r.direction * t, r.mirroredLoop ? (r.time > r.duration || r.time < 0) && (r.direction *= -1, r.time > r.duration && (r.time = r.duration, r.directionBackwards = !0), r.time < 0 && (r.time = 0, r.directionBackwards = !1)) : (r.time = r.time % r.duration, r.time < 0 && (r.time += r.duration));
                        var a = r.start + n.Math.clamp(Math.floor(r.time / o), 0, r.length - 1),
                            s = r.weight;
                        a !== r.currentFrame && (this.morphTargetInfluences[r.lastFrame] = 0, this.morphTargetInfluences[r.currentFrame] = 1 * s, this.morphTargetInfluences[a] = 0, r.lastFrame = r.currentFrame, r.currentFrame = a);
                        var h = r.time % o / o;
                        r.directionBackwards && (h = 1 - h), r.currentFrame !== r.lastFrame ? (this.morphTargetInfluences[r.currentFrame] = h * s, this.morphTargetInfluences[r.lastFrame] = (1 - h) * s) : this.morphTargetInfluences[r.currentFrame] = s
                    }
                }
            }
    }, {}],
    "/Users/matt/Sites/beatthegods/src/js/lib/soundjs-0.6.2.combined.js": [function(t, e, i) {
        (function(t) {
            (function(t, e, i, n, r) {
                window.createjs = window.createjs || {},
                    function() {
                        var t = createjs.SoundJS = createjs.SoundJS || {};
                        t.version = "0.6.2", t.buildDate = "Thu, 26 Nov 2015 20:44:31 GMT"
                    }(), window.createjs = window.createjs || {}, createjs.extend = function(t, e) {
                        "use strict";

                        function i() {
                            this.constructor = t
                        }
                        return i.prototype = e.prototype, t.prototype = new i
                    }, window.createjs = window.createjs || {}, createjs.promote = function(t, e) {
                        "use strict";
                        var i = t.prototype,
                            n = Object.getPrototypeOf && Object.getPrototypeOf(i) || i.__proto__;
                        if (n) {
                            i[(e += "_") + "constructor"] = n.constructor;
                            for (var r in n) i.hasOwnProperty(r) && "function" == typeof n[r] && (i[e + r] = n[r])
                        }
                        return t
                    }, window.createjs = window.createjs || {}, createjs.indexOf = function(t, e) {
                        "use strict";
                        for (var i = 0, n = t.length; n > i; i++)
                            if (e === t[i]) return i;
                        return -1
                    }, window.createjs = window.createjs || {},
                    function() {
                        "use strict";
                        createjs.proxy = function(t, e) {
                            var i = Array.prototype.slice.call(arguments, 2);
                            return function() {
                                return t.apply(e, Array.prototype.slice.call(arguments, 0).concat(i))
                            }
                        }
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            throw "BrowserDetect cannot be instantiated"
                        }
                        var e = t.agent = window.navigator.userAgent;
                        t.isWindowPhone = e.indexOf("IEMobile") > -1 || e.indexOf("Windows Phone") > -1, t.isFirefox = e.indexOf("Firefox") > -1, t.isOpera = null != window.opera, t.isChrome = e.indexOf("Chrome") > -1, t.isIOS = (e.indexOf("iPod") > -1 || e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1) && !t.isWindowPhone, t.isAndroid = e.indexOf("Android") > -1 && !t.isWindowPhone, t.isBlackberry = e.indexOf("Blackberry") > -1, createjs.BrowserDetect = t
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            this._listeners = null, this._captureListeners = null
                        }
                        var e = t.prototype;
                        t.initialize = function(t) {
                            t.addEventListener = e.addEventListener, t.on = e.on, t.removeEventListener = t.off = e.removeEventListener, t.removeAllEventListeners = e.removeAllEventListeners, t.hasEventListener = e.hasEventListener, t.dispatchEvent = e.dispatchEvent, t._dispatchEvent = e._dispatchEvent, t.willTrigger = e.willTrigger
                        }, e.addEventListener = function(t, e, i) {
                            var n;
                            n = i ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
                            var r = n[t];
                            return r && this.removeEventListener(t, e, i), r = n[t], r ? r.push(e) : n[t] = [e], e
                        }, e.on = function(t, e, i, n, r, o) {
                            return e.handleEvent && (i = i || e, e = e.handleEvent), i = i || this, this.addEventListener(t, function(t) {
                                e.call(i, t, r), n && t.remove()
                            }, o)
                        }, e.removeEventListener = function(t, e, i) {
                            var n = i ? this._captureListeners : this._listeners;
                            if (n) {
                                var r = n[t];
                                if (r)
                                    for (var o = 0, a = r.length; a > o; o++)
                                        if (r[o] == e) {
                                            1 == a ? delete n[t] : r.splice(o, 1);
                                            break
                                        }
                            }
                        }, e.off = e.removeEventListener, e.removeAllEventListeners = function(t) {
                            t ? (this._listeners && delete this._listeners[t], this._captureListeners && delete this._captureListeners[t]) : this._listeners = this._captureListeners = null
                        }, e.dispatchEvent = function(t, e, i) {
                            if ("string" == typeof t) {
                                var n = this._listeners;
                                if (!(e || n && n[t])) return !0;
                                t = new createjs.Event(t, e, i)
                            } else t.target && t.clone && (t = t.clone());
                            try {
                                t.target = this
                            } catch (r) {}
                            if (t.bubbles && this.parent) {
                                for (var o = this, a = [o]; o.parent;) a.push(o = o.parent);
                                var s, h = a.length;
                                for (s = h - 1; s >= 0 && !t.propagationStopped; s--) a[s]._dispatchEvent(t, 1 + (0 == s));
                                for (s = 1; h > s && !t.propagationStopped; s++) a[s]._dispatchEvent(t, 3)
                            } else this._dispatchEvent(t, 2);
                            return !t.defaultPrevented
                        }, e.hasEventListener = function(t) {
                            var e = this._listeners,
                                i = this._captureListeners;
                            return !!(e && e[t] || i && i[t])
                        }, e.willTrigger = function(t) {
                            for (var e = this; e;) {
                                if (e.hasEventListener(t)) return !0;
                                e = e.parent
                            }
                            return !1
                        }, e.toString = function() {
                            return "[EventDispatcher]"
                        }, e._dispatchEvent = function(t, e) {
                            var i, n = 1 == e ? this._captureListeners : this._listeners;
                            if (t && n) {
                                var r = n[t.type];
                                if (!r || !(i = r.length)) return;
                                try {
                                    t.currentTarget = this
                                } catch (o) {}
                                try {
                                    t.eventPhase = e
                                } catch (o) {}
                                t.removed = !1, r = r.slice();
                                for (var a = 0; i > a && !t.immediatePropagationStopped; a++) {
                                    var s = r[a];
                                    s.handleEvent ? s.handleEvent(t) : s(t), t.removed && (this.off(t.type, s, 1 == e), t.removed = !1)
                                }
                            }
                        }, createjs.EventDispatcher = t
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.type = t, this.target = null, this.currentTarget = null, this.eventPhase = 0, this.bubbles = !!e, this.cancelable = !!i, this.timeStamp = (new Date).getTime(), this.defaultPrevented = !1, this.propagationStopped = !1, this.immediatePropagationStopped = !1, this.removed = !1
                        }
                        var e = t.prototype;
                        e.preventDefault = function() {
                            this.defaultPrevented = this.cancelable && !0;
                        }, e.stopPropagation = function() {
                            this.propagationStopped = !0
                        }, e.stopImmediatePropagation = function() {
                            this.immediatePropagationStopped = this.propagationStopped = !0
                        }, e.remove = function() {
                            this.removed = !0
                        }, e.clone = function() {
                            return new t(this.type, this.bubbles, this.cancelable)
                        }, e.set = function(t) {
                            for (var e in t) this[e] = t[e];
                            return this
                        }, e.toString = function() {
                            return "[Event (type=" + this.type + ")]"
                        }, createjs.Event = t
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.Event_constructor("error"), this.title = t, this.message = e, this.data = i
                        }
                        var e = createjs.extend(t, createjs.Event);
                        e.clone = function() {
                            return new createjs.ErrorEvent(this.title, this.message, this.data)
                        }, createjs.ErrorEvent = createjs.promote(t, "Event")
                    }(), window.createjs = window.createjs || {},
                    function(t) {
                        "use strict";

                        function e(t, e) {
                            this.Event_constructor("progress"), this.loaded = t, this.total = null == e ? 1 : e, this.progress = 0 == e ? 0 : this.loaded / this.total
                        }
                        var i = createjs.extend(e, createjs.Event);
                        i.clone = function() {
                            return new createjs.ProgressEvent(this.loaded, this.total)
                        }, createjs.ProgressEvent = createjs.promote(e, "Event")
                    }(window), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            this.src = null, this.type = null, this.id = null, this.maintainOrder = !1, this.callback = null, this.data = null, this.method = createjs.LoadItem.GET, this.values = null, this.headers = null, this.withCredentials = !1, this.mimeType = null, this.crossOrigin = null, this.loadTimeout = i.LOAD_TIMEOUT_DEFAULT
                        }
                        var e = t.prototype = {},
                            i = t;
                        i.LOAD_TIMEOUT_DEFAULT = 8e3, i.create = function(e) {
                            if ("string" == typeof e) {
                                var n = new t;
                                return n.src = e, n
                            }
                            if (e instanceof i) return e;
                            if (e instanceof Object && e.src) return null == e.loadTimeout && (e.loadTimeout = i.LOAD_TIMEOUT_DEFAULT), e;
                            throw new Error("Type not recognized.")
                        }, e.set = function(t) {
                            for (var e in t) this[e] = t[e];
                            return this
                        }, createjs.LoadItem = i
                    }(),
                    function() {
                        var t = {};
                        t.ABSOLUTE_PATT = /^(?:\w+:)?\/{2}/i, t.RELATIVE_PATT = /^[.\/]*?\//i, t.EXTENSION_PATT = /\/?[^\/]+\.(\w{1,5})$/i, t.parseURI = function(e) {
                            var i = {
                                absolute: !1,
                                relative: !1
                            };
                            if (null == e) return i;
                            var n = e.indexOf("?");
                            n > -1 && (e = e.substr(0, n));
                            var r;
                            return t.ABSOLUTE_PATT.test(e) ? i.absolute = !0 : t.RELATIVE_PATT.test(e) && (i.relative = !0), (r = e.match(t.EXTENSION_PATT)) && (i.extension = r[1].toLowerCase()), i
                        }, t.formatQueryString = function(t, e) {
                            if (null == t) throw new Error("You must specify data.");
                            var i = [];
                            for (var n in t) i.push(n + "=" + escape(t[n]));
                            return e && (i = i.concat(e)), i.join("&")
                        }, t.buildPath = function(t, e) {
                            if (null == e) return t;
                            var i = [],
                                n = t.indexOf("?");
                            if (-1 != n) {
                                var r = t.slice(n + 1);
                                i = i.concat(r.split("&"))
                            }
                            return -1 != n ? t.slice(0, n) + "?" + this.formatQueryString(e, i) : t + "?" + this.formatQueryString(e, i)
                        }, t.isCrossDomain = function(t) {
                            var e = document.createElement("a");
                            e.href = t.src;
                            var i = document.createElement("a");
                            i.href = location.href;
                            var n = "" != e.hostname && (e.port != i.port || e.protocol != i.protocol || e.hostname != i.hostname);
                            return n
                        }, t.isLocal = function(t) {
                            var e = document.createElement("a");
                            return e.href = t.src, "" == e.hostname && "file:" == e.protocol
                        }, t.isBinary = function(t) {
                            switch (t) {
                                case createjs.AbstractLoader.IMAGE:
                                case createjs.AbstractLoader.BINARY:
                                    return !0;
                                default:
                                    return !1
                            }
                        }, t.isImageTag = function(t) {
                            return t instanceof HTMLImageElement
                        }, t.isAudioTag = function(t) {
                            return window.HTMLAudioElement ? t instanceof HTMLAudioElement : !1
                        }, t.isVideoTag = function(t) {
                            return window.HTMLVideoElement ? t instanceof HTMLVideoElement : !1
                        }, t.isText = function(t) {
                            switch (t) {
                                case createjs.AbstractLoader.TEXT:
                                case createjs.AbstractLoader.JSON:
                                case createjs.AbstractLoader.MANIFEST:
                                case createjs.AbstractLoader.XML:
                                case createjs.AbstractLoader.CSS:
                                case createjs.AbstractLoader.SVG:
                                case createjs.AbstractLoader.JAVASCRIPT:
                                case createjs.AbstractLoader.SPRITESHEET:
                                    return !0;
                                default:
                                    return !1
                            }
                        }, t.getTypeByExtension = function(t) {
                            if (null == t) return createjs.AbstractLoader.TEXT;
                            switch (t.toLowerCase()) {
                                case "jpeg":
                                case "jpg":
                                case "gif":
                                case "png":
                                case "webp":
                                case "bmp":
                                    return createjs.AbstractLoader.IMAGE;
                                case "ogg":
                                case "mp3":
                                case "webm":
                                    return createjs.AbstractLoader.SOUND;
                                case "mp4":
                                case "webm":
                                case "ts":
                                    return createjs.AbstractLoader.VIDEO;
                                case "json":
                                    return createjs.AbstractLoader.JSON;
                                case "xml":
                                    return createjs.AbstractLoader.XML;
                                case "css":
                                    return createjs.AbstractLoader.CSS;
                                case "js":
                                    return createjs.AbstractLoader.JAVASCRIPT;
                                case "svg":
                                    return createjs.AbstractLoader.SVG;
                                default:
                                    return createjs.AbstractLoader.TEXT
                            }
                        }, createjs.RequestUtils = t
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.EventDispatcher_constructor(), this.loaded = !1, this.canceled = !1, this.progress = 0, this.type = i, this.resultFormatter = null, t ? this._item = createjs.LoadItem.create(t) : this._item = null, this._preferXHR = e, this._result = null, this._rawResult = null, this._loadedItems = null, this._tagSrcAttribute = null, this._tag = null
                        }
                        var e = createjs.extend(t, createjs.EventDispatcher),
                            i = t;
                        i.POST = "POST", i.GET = "GET", i.BINARY = "binary", i.CSS = "css", i.IMAGE = "image", i.JAVASCRIPT = "javascript", i.JSON = "json", i.JSONP = "jsonp", i.MANIFEST = "manifest", i.SOUND = "sound", i.VIDEO = "video", i.SPRITESHEET = "spritesheet", i.SVG = "svg", i.TEXT = "text", i.XML = "xml", e.getItem = function() {
                            return this._item
                        }, e.getResult = function(t) {
                            return t ? this._rawResult : this._result
                        }, e.getTag = function() {
                            return this._tag
                        }, e.setTag = function(t) {
                            this._tag = t
                        }, e.load = function() {
                            this._createRequest(), this._request.on("complete", this, this), this._request.on("progress", this, this), this._request.on("loadStart", this, this), this._request.on("abort", this, this), this._request.on("timeout", this, this), this._request.on("error", this, this);
                            var t = new createjs.Event("initialize");
                            t.loader = this._request, this.dispatchEvent(t), this._request.load()
                        }, e.cancel = function() {
                            this.canceled = !0, this.destroy()
                        }, e.destroy = function() {
                            this._request && (this._request.removeAllEventListeners(), this._request.destroy()), this._request = null, this._item = null, this._rawResult = null, this._result = null, this._loadItems = null, this.removeAllEventListeners()
                        }, e.getLoadedItems = function() {
                            return this._loadedItems
                        }, e._createRequest = function() {
                            this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute)
                        }, e._createTag = function(t) {
                            return null
                        }, e._sendLoadStart = function() {
                            this._isCanceled() || this.dispatchEvent("loadstart")
                        }, e._sendProgress = function(t) {
                            if (!this._isCanceled()) {
                                var e = null;
                                "number" == typeof t ? (this.progress = t, e = new createjs.ProgressEvent(this.progress)) : (e = t, this.progress = t.loaded / t.total, e.progress = this.progress, (isNaN(this.progress) || this.progress == 1 / 0) && (this.progress = 0)), this.hasEventListener("progress") && this.dispatchEvent(e)
                            }
                        }, e._sendComplete = function() {
                            if (!this._isCanceled()) {
                                this.loaded = !0;
                                var t = new createjs.Event("complete");
                                t.rawResult = this._rawResult, null != this._result && (t.result = this._result), this.dispatchEvent(t)
                            }
                        }, e._sendError = function(t) {
                            !this._isCanceled() && this.hasEventListener("error") && (null == t && (t = new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY")), this.dispatchEvent(t))
                        }, e._isCanceled = function() {
                            return !(null != window.createjs && !this.canceled)
                        }, e.resultFormatter = null, e.handleEvent = function(t) {
                            switch (t.type) {
                                case "complete":
                                    this._rawResult = t.target._response;
                                    var e = this.resultFormatter && this.resultFormatter(this);
                                    e instanceof Function ? e.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)) : (this._result = e || this._rawResult, this._sendComplete());
                                    break;
                                case "progress":
                                    this._sendProgress(t);
                                    break;
                                case "error":
                                    this._sendError(t);
                                    break;
                                case "loadstart":
                                    this._sendLoadStart();
                                    break;
                                case "abort":
                                case "timeout":
                                    this._isCanceled() || this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_" + t.type.toUpperCase() + "_ERROR"))
                            }
                        }, e._resultFormatSuccess = function(t) {
                            this._result = t, this._sendComplete()
                        }, e._resultFormatFailed = function(t) {
                            this._sendError(t)
                        }, e.buildPath = function(t, e) {
                            return createjs.RequestUtils.buildPath(t, e)
                        }, e.toString = function() {
                            return "[PreloadJS AbstractLoader]"
                        }, createjs.AbstractLoader = createjs.promote(t, "EventDispatcher")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.AbstractLoader_constructor(t, e, i), this.resultFormatter = this._formatResult, this._tagSrcAttribute = "src", this.on("initialize", this._updateXHR, this)
                        }
                        var e = createjs.extend(t, createjs.AbstractLoader);
                        e.load = function() {
                            this._tag || (this._tag = this._createTag(this._item.src)), this._tag.preload = "auto", this._tag.load(), this.AbstractLoader_load()
                        }, e._createTag = function() {}, e._createRequest = function() {
                            this._preferXHR ? this._request = new createjs.XHRRequest(this._item) : this._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute)
                        }, e._updateXHR = function(t) {
                            t.loader.setResponseType && t.loader.setResponseType("blob")
                        }, e._formatResult = function(t) {
                            if (this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler), this._tag.onstalled = null, this._preferXHR) {
                                var e = window.URL || window.webkitURL,
                                    i = t.getResult(!0);
                                t.getTag().src = e.createObjectURL(i)
                            }
                            return t.getTag()
                        }, createjs.AbstractMediaLoader = createjs.promote(t, "AbstractLoader")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";
                        var t = function(t) {
                                this._item = t
                            },
                            e = createjs.extend(t, createjs.EventDispatcher);
                        e.load = function() {}, e.destroy = function() {}, e.cancel = function() {}, createjs.AbstractRequest = createjs.promote(t, "EventDispatcher")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.AbstractRequest_constructor(t), this._tag = e, this._tagSrcAttribute = i, this._loadedHandler = createjs.proxy(this._handleTagComplete, this), this._addedToDOM = !1, this._startTagVisibility = null
                        }
                        var e = createjs.extend(t, createjs.AbstractRequest);
                        e.load = function() {
                            this._tag.onload = createjs.proxy(this._handleTagComplete, this), this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this), this._tag.onerror = createjs.proxy(this._handleError, this);
                            var t = new createjs.Event("initialize");
                            t.loader = this._tag, this.dispatchEvent(t), this._hideTag(), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this._tag[this._tagSrcAttribute] = this._item.src, null == this._tag.parentNode && (window.document.body.appendChild(this._tag), this._addedToDOM = !0)
                        }, e.destroy = function() {
                            this._clean(), this._tag = null, this.AbstractRequest_destroy()
                        }, e._handleReadyStateChange = function() {
                            clearTimeout(this._loadTimeout);
                            var t = this._tag;
                            "loaded" != t.readyState && "complete" != t.readyState || this._handleTagComplete()
                        }, e._handleError = function() {
                            this._clean(), this.dispatchEvent("error")
                        }, e._handleTagComplete = function() {
                            this._rawResult = this._tag, this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult, this._clean(), this._showTag(), this.dispatchEvent("complete")
                        }, e._handleTimeout = function() {
                            this._clean(), this.dispatchEvent(new createjs.Event("timeout"))
                        }, e._clean = function() {
                            this._tag.onload = null, this._tag.onreadystatechange = null, this._tag.onerror = null, this._addedToDOM && null != this._tag.parentNode && this._tag.parentNode.removeChild(this._tag), clearTimeout(this._loadTimeout)
                        }, e._hideTag = function() {
                            this._startTagVisibility = this._tag.style.visibility, this._tag.style.visibility = "hidden"
                        }, e._showTag = function() {
                            this._tag.style.visibility = this._startTagVisibility
                        }, e._handleStalled = function() {}, createjs.TagRequest = createjs.promote(t, "AbstractRequest")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i) {
                            this.AbstractRequest_constructor(t), this._tag = e, this._tagSrcAttribute = i, this._loadedHandler = createjs.proxy(this._handleTagComplete, this)
                        }
                        var e = createjs.extend(t, createjs.TagRequest);
                        e.load = function() {
                            var t = createjs.proxy(this._handleStalled, this);
                            this._stalledCallback = t;
                            var e = createjs.proxy(this._handleProgress, this);
                            this._handleProgress = e, this._tag.addEventListener("stalled", t), this._tag.addEventListener("progress", e), this._tag.addEventListener && this._tag.addEventListener("canplaythrough", this._loadedHandler, !1), this.TagRequest_load()
                        }, e._handleReadyStateChange = function() {
                            clearTimeout(this._loadTimeout);
                            var t = this._tag;
                            "loaded" != t.readyState && "complete" != t.readyState || this._handleTagComplete()
                        }, e._handleStalled = function() {}, e._handleProgress = function(t) {
                            if (t && !(t.loaded > 0 && 0 == t.total)) {
                                var e = new createjs.ProgressEvent(t.loaded, t.total);
                                this.dispatchEvent(e)
                            }
                        }, e._clean = function() {
                            this._tag.removeEventListener && this._tag.removeEventListener("canplaythrough", this._loadedHandler), this._tag.removeEventListener("stalled", this._stalledCallback), this._tag.removeEventListener("progress", this._progressCallback), this.TagRequest__clean()
                        }, createjs.MediaTagRequest = createjs.promote(t, "TagRequest")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t) {
                            this.AbstractRequest_constructor(t), this._request = null, this._loadTimeout = null, this._xhrLevel = 1, this._response = null, this._rawResponse = null, this._canceled = !1, this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this), this._handleProgressProxy = createjs.proxy(this._handleProgress, this), this._handleAbortProxy = createjs.proxy(this._handleAbort, this), this._handleErrorProxy = createjs.proxy(this._handleError, this), this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this), this._handleLoadProxy = createjs.proxy(this._handleLoad, this), this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this), !this._createXHR(t)
                        }
                        var e = createjs.extend(t, createjs.AbstractRequest);
                        t.ACTIVEX_VERSIONS = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.5.0", "Msxml2.XMLHTTP.4.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], e.getResult = function(t) {
                            return t && this._rawResponse ? this._rawResponse : this._response
                        }, e.cancel = function() {
                            this.canceled = !0, this._clean(), this._request.abort()
                        }, e.load = function() {
                            if (null == this._request) return void this._handleError();
                            null != this._request.addEventListener ? (this._request.addEventListener("loadstart", this._handleLoadStartProxy, !1), this._request.addEventListener("progress", this._handleProgressProxy, !1), this._request.addEventListener("abort", this._handleAbortProxy, !1), this._request.addEventListener("error", this._handleErrorProxy, !1), this._request.addEventListener("timeout", this._handleTimeoutProxy, !1), this._request.addEventListener("load", this._handleLoadProxy, !1), this._request.addEventListener("readystatechange", this._handleReadyStateChangeProxy, !1)) : (this._request.onloadstart = this._handleLoadStartProxy, this._request.onprogress = this._handleProgressProxy, this._request.onabort = this._handleAbortProxy, this._request.onerror = this._handleErrorProxy, this._request.ontimeout = this._handleTimeoutProxy, this._request.onload = this._handleLoadProxy, this._request.onreadystatechange = this._handleReadyStateChangeProxy), 1 == this._xhrLevel && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout));
                            try {
                                this._item.values && this._item.method != createjs.AbstractLoader.GET ? this._item.method == createjs.AbstractLoader.POST && this._request.send(createjs.RequestUtils.formatQueryString(this._item.values)) : this._request.send()
                            } catch (t) {
                                this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND", null, t))
                            }
                        }, e.setResponseType = function(t) {
                            "blob" === t && (t = window.URL ? "blob" : "arraybuffer", this._responseType = t), this._request.responseType = t
                        }, e.getAllResponseHeaders = function() {
                            return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null
                        }, e.getResponseHeader = function(t) {
                            return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(t) : null
                        }, e._handleProgress = function(t) {
                            if (t && !(t.loaded > 0 && 0 == t.total)) {
                                var e = new createjs.ProgressEvent(t.loaded, t.total);
                                this.dispatchEvent(e)
                            }
                        }, e._handleLoadStart = function(t) {
                            clearTimeout(this._loadTimeout), this.dispatchEvent("loadstart")
                        }, e._handleAbort = function(t) {
                            this._clean(), this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED", null, t))
                        }, e._handleError = function(t) {
                            this._clean(), this.dispatchEvent(new createjs.ErrorEvent(t.message))
                        }, e._handleReadyStateChange = function(t) {
                            4 == this._request.readyState && this._handleLoad()
                        }, e._handleLoad = function(t) {
                            if (!this.loaded) {
                                this.loaded = !0;
                                var e = this._checkError();
                                if (e) return void this._handleError(e);
                                if (this._response = this._getResponse(), "arraybuffer" === this._responseType) try {
                                    this._response = new Blob([this._response])
                                } catch (i) {
                                    if (window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, "TypeError" === i.name && window.BlobBuilder) {
                                        var n = new BlobBuilder;
                                        n.append(this._response), this._response = n.getBlob()
                                    }
                                }
                                this._clean(), this.dispatchEvent(new createjs.Event("complete"))
                            }
                        }, e._handleTimeout = function(t) {
                            this._clean(), this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT", null, t))
                        }, e._checkError = function() {
                            var t = parseInt(this._request.status);
                            switch (t) {
                                case 404:
                                case 0:
                                    return new Error(t)
                            }
                            return null
                        }, e._getResponse = function() {
                            if (null != this._response) return this._response;
                            if (null != this._request.response) return this._request.response;
                            try {
                                if (null != this._request.responseText) return this._request.responseText
                            } catch (t) {}
                            try {
                                if (null != this._request.responseXML) return this._request.responseXML
                            } catch (t) {}
                            return null
                        }, e._createXHR = function(t) {
                            var e = createjs.RequestUtils.isCrossDomain(t),
                                i = {},
                                n = null;
                            if (window.XMLHttpRequest) n = new XMLHttpRequest, e && void 0 === n.withCredentials && window.XDomainRequest && (n = new XDomainRequest);
                            else {
                                for (var r = 0, o = s.ACTIVEX_VERSIONS.length; o > r; r++) {
                                    var a = s.ACTIVEX_VERSIONS[r];
                                    try {
                                        n = new ActiveXObject(a);
                                        break
                                    } catch (h) {}
                                }
                                if (null == n) return !1
                            }
                            null == t.mimeType && createjs.RequestUtils.isText(t.type) && (t.mimeType = "text/plain; charset=utf-8"), t.mimeType && n.overrideMimeType && n.overrideMimeType(t.mimeType), this._xhrLevel = "string" == typeof n.responseType ? 2 : 1;
                            var u = null;
                            if (u = t.method == createjs.AbstractLoader.GET ? createjs.RequestUtils.buildPath(t.src, t.values) : t.src, n.open(t.method || createjs.AbstractLoader.GET, u, !0), e && n instanceof XMLHttpRequest && 1 == this._xhrLevel && (i.Origin = location.origin), t.values && t.method == createjs.AbstractLoader.POST && (i["Content-Type"] = "application/x-www-form-urlencoded"), e || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"), t.headers)
                                for (var c in t.headers) i[c] = t.headers[c];
                            for (c in i) n.setRequestHeader(c, i[c]);
                            return n instanceof XMLHttpRequest && void 0 !== t.withCredentials && (n.withCredentials = t.withCredentials), this._request = n, !0
                        }, e._clean = function() {
                            clearTimeout(this._loadTimeout), null != this._request.removeEventListener ? (this._request.removeEventListener("loadstart", this._handleLoadStartProxy), this._request.removeEventListener("progress", this._handleProgressProxy), this._request.removeEventListener("abort", this._handleAbortProxy), this._request.removeEventListener("error", this._handleErrorProxy), this._request.removeEventListener("timeout", this._handleTimeoutProxy), this._request.removeEventListener("load", this._handleLoadProxy), this._request.removeEventListener("readystatechange", this._handleReadyStateChangeProxy)) : (this._request.onloadstart = null, this._request.onprogress = null, this._request.onabort = null, this._request.onerror = null, this._request.ontimeout = null, this._request.onload = null, this._request.onreadystatechange = null)
                        }, e.toString = function() {
                            return "[PreloadJS XHRRequest]"
                        }, createjs.XHRRequest = createjs.promote(t, "AbstractRequest")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e) {
                            this.AbstractMediaLoader_constructor(t, e, createjs.AbstractLoader.SOUND), createjs.RequestUtils.isAudioTag(t) ? this._tag = t : createjs.RequestUtils.isAudioTag(t.src) ? this._tag = t : createjs.RequestUtils.isAudioTag(t.tag) && (this._tag = createjs.RequestUtils.isAudioTag(t) ? t : t.src), null != this._tag && (this._preferXHR = !1)
                        }
                        var e = createjs.extend(t, createjs.AbstractMediaLoader),
                            i = t;
                        i.canLoadItem = function(t) {
                            return t.type == createjs.AbstractLoader.SOUND
                        }, e._createTag = function(t) {
                            var e = document.createElement("audio");
                            return e.autoplay = !1, e.preload = "none", e.src = t, e
                        }, createjs.SoundLoader = createjs.promote(t, "AbstractMediaLoader")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";
                        var t = function() {
                                this.interrupt = null, this.delay = null, this.offset = null, this.loop = null, this.volume = null, this.pan = null, this.startTime = null, this.duration = null
                            },
                            e = t.prototype = {},
                            i = t;
                        i.create = function(t) {
                            if (t instanceof i || t instanceof Object) {
                                var e = new createjs.PlayPropsConfig;
                                return e.set(t), e
                            }
                            throw new Error("Type not recognized.")
                        }, e.set = function(t) {
                            for (var e in t) this[e] = t[e];
                            return this
                        }, e.toString = function() {
                            return "[PlayPropsConfig]"
                        }, createjs.PlayPropsConfig = i
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            throw "Sound cannot be instantiated"
                        }

                        function e(t, e) {
                            this.init(t, e)
                        }
                        var i = t;
                        i.INTERRUPT_ANY = "any", i.INTERRUPT_EARLY = "early", i.INTERRUPT_LATE = "late", i.INTERRUPT_NONE = "none", i.PLAY_INITED = "playInited", i.PLAY_SUCCEEDED = "playSucceeded", i.PLAY_INTERRUPTED = "playInterrupted", i.PLAY_FINISHED = "playFinished", i.PLAY_FAILED = "playFailed", i.SUPPORTED_EXTENSIONS = ["mp3", "ogg", "opus", "mpeg", "wav", "m4a", "mp4", "aiff", "wma", "mid"], i.EXTENSION_MAP = {
                            m4a: "mp4"
                        }, i.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([\/.]*?(?:[^?]+)?\/)?((?:[^\/?]+)\.(\w+))(?:\?(\S+)?)?$/, i.defaultInterruptBehavior = i.INTERRUPT_NONE, i.alternateExtensions = [], i.activePlugin = null, i._masterVolume = 1, Object.defineProperty(i, "volume", {
                            get: function() {
                                return this._masterVolume
                            },
                            set: function(t) {
                                if (null == Number(t)) return !1;
                                if (t = Math.max(0, Math.min(1, t)), i._masterVolume = t, !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(t))
                                    for (var e = this._instances, n = 0, r = e.length; r > n; n++) e[n].setMasterVolume(t)
                            }
                        }), i._masterMute = !1, Object.defineProperty(i, "muted", {
                            get: function() {
                                return this._masterMute
                            },
                            set: function(t) {
                                if (null == t) return !1;
                                if (this._masterMute = t, !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(t))
                                    for (var e = this._instances, i = 0, n = e.length; n > i; i++) e[i].setMasterMute(t);
                                return !0
                            }
                        }), Object.defineProperty(i, "capabilities", {
                            get: function() {
                                return null == i.activePlugin ? null : i.activePlugin._capabilities
                            },
                            set: function(t) {
                                return !1
                            }
                        }), i._pluginsRegistered = !1, i._lastID = 0, i._instances = [], i._idHash = {}, i._preloadHash = {}, i._defaultPlayPropsHash = {}, i.addEventListener = null, i.removeEventListener = null, i.removeAllEventListeners = null, i.dispatchEvent = null, i.hasEventListener = null, i._listeners = null, createjs.EventDispatcher.initialize(i), i.getPreloadHandlers = function() {
                            return {
                                callback: createjs.proxy(i.initLoad, i),
                                types: ["sound"],
                                extensions: i.SUPPORTED_EXTENSIONS
                            }
                        }, i._handleLoadComplete = function(t) {
                            var e = t.target.getItem().src;
                            if (i._preloadHash[e])
                                for (var n = 0, r = i._preloadHash[e].length; r > n; n++) {
                                    var o = i._preloadHash[e][n];
                                    if (i._preloadHash[e][n] = !0, i.hasEventListener("fileload")) {
                                        var t = new createjs.Event("fileload");
                                        t.src = o.src, t.id = o.id, t.data = o.data, t.sprite = o.sprite, i.dispatchEvent(t)
                                    }
                                }
                        }, i._handleLoadError = function(t) {
                            var e = t.target.getItem().src;
                            if (i._preloadHash[e])
                                for (var n = 0, r = i._preloadHash[e].length; r > n; n++) {
                                    var o = i._preloadHash[e][n];
                                    if (i._preloadHash[e][n] = !1, i.hasEventListener("fileerror")) {
                                        var t = new createjs.Event("fileerror");
                                        t.src = o.src, t.id = o.id, t.data = o.data, t.sprite = o.sprite, i.dispatchEvent(t)
                                    }
                                }
                        }, i._registerPlugin = function(t) {
                            return t.isSupported() ? (i.activePlugin = new t, !0) : !1
                        }, i.registerPlugins = function(t) {
                            i._pluginsRegistered = !0;
                            for (var e = 0, n = t.length; n > e; e++)
                                if (i._registerPlugin(t[e])) return !0;
                            return !1
                        }, i.initializeDefaultPlugins = function() {
                            return null != i.activePlugin ? !0 : i._pluginsRegistered ? !1 : !!i.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])
                        }, i.isReady = function() {
                            return null != i.activePlugin
                        }, i.getCapabilities = function() {
                            return null == i.activePlugin ? null : i.activePlugin._capabilities
                        }, i.getCapability = function(t) {
                            return null == i.activePlugin ? null : i.activePlugin._capabilities[t]
                        }, i.initLoad = function(t) {
                            return i._registerSound(t)
                        }, i._registerSound = function(t) {
                            if (!i.initializeDefaultPlugins()) return !1;
                            var n;
                            if (t.src instanceof Object ? (n = i._parseSrc(t.src), n.src = t.path + n.src) : n = i._parsePath(t.src), null == n) return !1;
                            t.src = n.src, t.type = "sound";
                            var r = t.data,
                                o = null;
                            if (null != r && (isNaN(r.channels) ? isNaN(r) || (o = parseInt(r)) : o = parseInt(r.channels), r.audioSprite))
                                for (var a, s = r.audioSprite.length; s--;) a = r.audioSprite[s], i._idHash[a.id] = {
                                    src: t.src,
                                    startTime: parseInt(a.startTime),
                                    duration: parseInt(a.duration)
                                }, a.defaultPlayProps && (i._defaultPlayPropsHash[a.id] = createjs.PlayPropsConfig.create(a.defaultPlayProps));
                            null != t.id && (i._idHash[t.id] = {
                                src: t.src
                            });
                            var h = i.activePlugin.register(t);
                            return e.create(t.src, o), null != r && isNaN(r) ? t.data.channels = o || e.maxPerChannel() : t.data = o || e.maxPerChannel(), h.type && (t.type = h.type), t.defaultPlayProps && (i._defaultPlayPropsHash[t.src] = createjs.PlayPropsConfig.create(t.defaultPlayProps)), h
                        }, i.registerSound = function(t, e, n, r, o) {
                            var a = {
                                src: t,
                                id: e,
                                data: n,
                                defaultPlayProps: o
                            };
                            t instanceof Object && t.src && (r = e, a = t), a = createjs.LoadItem.create(a), a.path = r, null == r || a.src instanceof Object || (a.src = r + t);
                            var s = i._registerSound(a);
                            if (!s) return !1;
                            if (i._preloadHash[a.src] || (i._preloadHash[a.src] = []), i._preloadHash[a.src].push(a), 1 == i._preloadHash[a.src].length) s.on("complete", createjs.proxy(this._handleLoadComplete, this)), s.on("error", createjs.proxy(this._handleLoadError, this)), i.activePlugin.preload(s);
                            else if (1 == i._preloadHash[a.src][0]) return !0;
                            return a
                        }, i.registerSounds = function(t, e) {
                            var i = [];
                            t.path && (e ? e += t.path : e = t.path, t = t.manifest);
                            for (var n = 0, r = t.length; r > n; n++) i[n] = createjs.Sound.registerSound(t[n].src, t[n].id, t[n].data, e, t[n].defaultPlayProps);
                            return i
                        }, i.removeSound = function(t, n) {
                            if (null == i.activePlugin) return !1;
                            t instanceof Object && t.src && (t = t.src);
                            var r;
                            if (t instanceof Object ? r = i._parseSrc(t) : (t = i._getSrcById(t).src, r = i._parsePath(t)), null == r) return !1;
                            t = r.src, null != n && (t = n + t);
                            for (var o in i._idHash) i._idHash[o].src == t && delete i._idHash[o];
                            return e.removeSrc(t), delete i._preloadHash[t], i.activePlugin.removeSound(t), !0
                        }, i.removeSounds = function(t, e) {
                            var i = [];
                            t.path && (e ? e += t.path : e = t.path, t = t.manifest);
                            for (var n = 0, r = t.length; r > n; n++) i[n] = createjs.Sound.removeSound(t[n].src, e);
                            return i
                        }, i.removeAllSounds = function() {
                            i._idHash = {}, i._preloadHash = {}, e.removeAll(), i.activePlugin && i.activePlugin.removeAllSounds()
                        }, i.loadComplete = function(t) {
                            if (!i.isReady()) return !1;
                            var e = i._parsePath(t);
                            return t = e ? i._getSrcById(e.src).src : i._getSrcById(t).src, void 0 == i._preloadHash[t] ? !1 : 1 == i._preloadHash[t][0]
                        }, i._parsePath = function(t) {
                            "string" != typeof t && (t = t.toString());
                            var e = t.match(i.FILE_PATTERN);
                            if (null == e) return !1;
                            for (var n = e[4], r = e[5], o = i.capabilities, a = 0; !o[r];)
                                if (r = i.alternateExtensions[a++], a > i.alternateExtensions.length) return null;
                            t = t.replace("." + e[5], "." + r);
                            var s = {
                                name: n,
                                src: t,
                                extension: r
                            };
                            return s
                        }, i._parseSrc = function(t) {
                            var e = {
                                    name: void 0,
                                    src: void 0,
                                    extension: void 0
                                },
                                n = i.capabilities;
                            for (var r in t)
                                if (t.hasOwnProperty(r) && n[r]) {
                                    e.src = t[r], e.extension = r;
                                    break
                                }
                            if (!e.src) return !1;
                            var o = e.src.lastIndexOf("/");
                            return -1 != o ? e.name = e.src.slice(o + 1) : e.name = e.src, e
                        }, i.play = function(t, e, n, r, o, a, s, h, u) {
                            var c;
                            c = e instanceof Object || e instanceof createjs.PlayPropsConfig ? createjs.PlayPropsConfig.create(e) : createjs.PlayPropsConfig.create({
                                interrupt: e,
                                delay: n,
                                offset: r,
                                loop: o,
                                volume: a,
                                pan: s,
                                startTime: h,
                                duration: u
                            });
                            var l = i.createInstance(t, c.startTime, c.duration),
                                p = i._playInstance(l, c);
                            return p || l._playFailed(), l
                        }, i.createInstance = function(t, n, r) {
                            if (!i.initializeDefaultPlugins()) return new createjs.DefaultSoundInstance(t, n, r);
                            var o = i._defaultPlayPropsHash[t];
                            t = i._getSrcById(t);
                            var a = i._parsePath(t.src),
                                s = null;
                            return null != a && null != a.src ? (e.create(a.src), null == n && (n = t.startTime), s = i.activePlugin.create(a.src, n, r || t.duration), o = o || i._defaultPlayPropsHash[a.src], o && s.applyPlayProps(o)) : s = new createjs.DefaultSoundInstance(t, n, r), s.uniqueId = i._lastID++, s
                        }, i.stop = function() {
                            for (var t = this._instances, e = t.length; e--;) t[e].stop()
                        }, i.setVolume = function(t) {
                            if (null == Number(t)) return !1;
                            if (t = Math.max(0, Math.min(1, t)), i._masterVolume = t, !this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(t))
                                for (var e = this._instances, n = 0, r = e.length; r > n; n++) e[n].setMasterVolume(t)
                        }, i.getVolume = function() {
                            return this._masterVolume
                        }, i.setMute = function(t) {
                            if (null == t) return !1;
                            if (this._masterMute = t, !this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(t))
                                for (var e = this._instances, i = 0, n = e.length; n > i; i++) e[i].setMasterMute(t);
                            return !0
                        }, i.getMute = function() {
                            return this._masterMute
                        }, i.setDefaultPlayProps = function(t, e) {
                            t = i._getSrcById(t), i._defaultPlayPropsHash[i._parsePath(t.src).src] = createjs.PlayPropsConfig.create(e)
                        }, i.getDefaultPlayProps = function(t) {
                            return t = i._getSrcById(t), i._defaultPlayPropsHash[i._parsePath(t.src).src]
                        }, i._playInstance = function(t, e) {
                            var n = i._defaultPlayPropsHash[t.src] || {};
                            if (null == e.interrupt && (e.interrupt = n.interrupt || i.defaultInterruptBehavior), null == e.delay && (e.delay = n.delay || 0), null == e.offset && (e.offset = t.getPosition()), null == e.loop && (e.loop = t.loop), null == e.volume && (e.volume = t.volume), null == e.pan && (e.pan = t.pan), 0 == e.delay) {
                                var r = i._beginPlaying(t, e);
                                if (!r) return !1
                            } else {
                                var o = setTimeout(function() {
                                    i._beginPlaying(t, e)
                                }, e.delay);
                                t.delayTimeoutId = o
                            }
                            return this._instances.push(t), !0
                        }, i._beginPlaying = function(t, i) {
                            if (!e.add(t, i.interrupt)) return !1;
                            var n = t._beginPlaying(i);
                            if (!n) {
                                var r = createjs.indexOf(this._instances, t);
                                return r > -1 && this._instances.splice(r, 1), !1
                            }
                            return !0
                        }, i._getSrcById = function(t) {
                            return i._idHash[t] || {
                                src: t
                            }
                        }, i._playFinished = function(t) {
                            e.remove(t);
                            var i = createjs.indexOf(this._instances, t);
                            i > -1 && this._instances.splice(i, 1)
                        }, createjs.Sound = t, e.channels = {}, e.create = function(t, i) {
                            var n = e.get(t);
                            return null == n ? (e.channels[t] = new e(t, i), !0) : !1
                        }, e.removeSrc = function(t) {
                            var i = e.get(t);
                            return null == i ? !1 : (i._removeAll(), delete e.channels[t], !0)
                        }, e.removeAll = function() {
                            for (var t in e.channels) e.channels[t]._removeAll();
                            e.channels = {}
                        }, e.add = function(t, i) {
                            var n = e.get(t.src);
                            return null == n ? !1 : n._add(t, i)
                        }, e.remove = function(t) {
                            var i = e.get(t.src);
                            return null == i ? !1 : (i._remove(t), !0)
                        }, e.maxPerChannel = function() {
                            return n.maxDefault
                        }, e.get = function(t) {
                            return e.channels[t]
                        };
                        var n = e.prototype;
                        n.constructor = e, n.src = null, n.max = null, n.maxDefault = 100, n.length = 0, n.init = function(t, e) {
                            this.src = t, this.max = e || this.maxDefault, -1 == this.max && (this.max = this.maxDefault), this._instances = []
                        }, n._get = function(t) {
                            return this._instances[t]
                        }, n._add = function(t, e) {
                            return this._getSlot(e, t) ? (this._instances.push(t), this.length++, !0) : !1
                        }, n._remove = function(t) {
                            var e = createjs.indexOf(this._instances, t);
                            return -1 == e ? !1 : (this._instances.splice(e, 1), this.length--, !0)
                        }, n._removeAll = function() {
                            for (var t = this.length - 1; t >= 0; t--) this._instances[t].stop()
                        }, n._getSlot = function(e, i) {
                            var n, r;
                            if (e != t.INTERRUPT_NONE && (r = this._get(0), null == r)) return !0;
                            for (var o = 0, a = this.max; a > o; o++) {
                                if (n = this._get(o), null == n) return !0;
                                if (n.playState == t.PLAY_FINISHED || n.playState == t.PLAY_INTERRUPTED || n.playState == t.PLAY_FAILED) {
                                    r = n;
                                    break
                                }
                                e != t.INTERRUPT_NONE && (e == t.INTERRUPT_EARLY && n.getPosition() < r.getPosition() || e == t.INTERRUPT_LATE && n.getPosition() > r.getPosition()) && (r = n)
                            }
                            return null != r ? (r._interrupt(), this._remove(r), !0) : !1
                        }, n.toString = function() {
                            return "[Sound SoundChannel]"
                        }
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";
                        var t = function(t, e, i, n) {
                                this.EventDispatcher_constructor(), this.src = t, this.uniqueId = -1, this.playState = null, this.delayTimeoutId = null, this._volume = 1, Object.defineProperty(this, "volume", {
                                    get: this.getVolume,
                                    set: this.setVolume
                                }), this._pan = 0, Object.defineProperty(this, "pan", {
                                    get: this.getPan,
                                    set: this.setPan
                                }), this._startTime = Math.max(0, e || 0), Object.defineProperty(this, "startTime", {
                                    get: this.getStartTime,
                                    set: this.setStartTime
                                }), this._duration = Math.max(0, i || 0), Object.defineProperty(this, "duration", {
                                    get: this.getDuration,
                                    set: this.setDuration
                                }), this._playbackResource = null, Object.defineProperty(this, "playbackResource", {
                                    get: this.getPlaybackResource,
                                    set: this.setPlaybackResource
                                }), n !== !1 && n !== !0 && this.setPlaybackResource(n), this._position = 0, Object.defineProperty(this, "position", {
                                    get: this.getPosition,
                                    set: this.setPosition
                                }), this._loop = 0, Object.defineProperty(this, "loop", {
                                    get: this.getLoop,
                                    set: this.setLoop
                                }), this._muted = !1, Object.defineProperty(this, "muted", {
                                    get: this.getMuted,
                                    set: this.setMuted
                                }), this._paused = !1, Object.defineProperty(this, "paused", {
                                    get: this.getPaused,
                                    set: this.setPaused
                                })
                            },
                            e = createjs.extend(t, createjs.EventDispatcher);
                        e.play = function(t, e, i, n, r, o) {
                            var a;
                            return a = t instanceof Object || t instanceof createjs.PlayPropsConfig ? createjs.PlayPropsConfig.create(t) : createjs.PlayPropsConfig.create({
                                interrupt: t,
                                delay: e,
                                offset: i,
                                loop: n,
                                volume: r,
                                pan: o
                            }), this.playState == createjs.Sound.PLAY_SUCCEEDED ? (this.applyPlayProps(a), void(this._paused && this.setPaused(!1))) : (this._cleanUp(), createjs.Sound._playInstance(this, a), this)
                        }, e.stop = function() {
                            return this._position = 0, this._paused = !1, this._handleStop(), this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, this
                        }, e.destroy = function() {
                            this._cleanUp(), this.src = null, this.playbackResource = null, this.removeAllEventListeners()
                        }, e.applyPlayProps = function(t) {
                            return null != t.offset && this.setPosition(t.offset), null != t.loop && this.setLoop(t.loop), null != t.volume && this.setVolume(t.volume), null != t.pan && this.setPan(t.pan), null != t.startTime && (this.setStartTime(t.startTime), this.setDuration(t.duration)), this
                        }, e.toString = function() {
                            return "[AbstractSoundInstance]"
                        }, e.getPaused = function() {
                            return this._paused
                        }, e.setPaused = function(t) {
                            return t !== !0 && t !== !1 || this._paused == t || 1 == t && this.playState != createjs.Sound.PLAY_SUCCEEDED ? void 0 : (this._paused = t, t ? this._pause() : this._resume(), clearTimeout(this.delayTimeoutId), this)
                        }, e.setVolume = function(t) {
                            return t == this._volume ? this : (this._volume = Math.max(0, Math.min(1, t)), this._muted || this._updateVolume(), this)
                        }, e.getVolume = function() {
                            return this._volume
                        }, e.setMuted = function(t) {
                            return t === !0 || t === !1 ? (this._muted = t, this._updateVolume(), this) : void 0
                        }, e.getMuted = function() {
                            return this._muted
                        }, e.setPan = function(t) {
                            return t == this._pan ? this : (this._pan = Math.max(-1, Math.min(1, t)), this._updatePan(), this)
                        }, e.getPan = function() {
                            return this._pan
                        }, e.getPosition = function() {
                            return this._paused || this.playState != createjs.Sound.PLAY_SUCCEEDED || (this._position = this._calculateCurrentPosition()), this._position
                        }, e.setPosition = function(t) {
                            return this._position = Math.max(0, t), this.playState == createjs.Sound.PLAY_SUCCEEDED && this._updatePosition(), this
                        }, e.getStartTime = function() {
                            return this._startTime
                        }, e.setStartTime = function(t) {
                            return t == this._startTime ? this : (this._startTime = Math.max(0, t || 0), this._updateStartTime(), this)
                        }, e.getDuration = function() {
                            return this._duration
                        }, e.setDuration = function(t) {
                            return t == this._duration ? this : (this._duration = Math.max(0, t || 0), this._updateDuration(), this)
                        }, e.setPlaybackResource = function(t) {
                            return this._playbackResource = t, 0 == this._duration && this._setDurationFromSource(), this
                        }, e.getPlaybackResource = function() {
                            return this._playbackResource
                        }, e.getLoop = function() {
                            return this._loop
                        }, e.setLoop = function(t) {
                            null != this._playbackResource && (0 != this._loop && 0 == t ? this._removeLooping(t) : 0 == this._loop && 0 != t && this._addLooping(t)), this._loop = t
                        }, e._sendEvent = function(t) {
                            var e = new createjs.Event(t);
                            this.dispatchEvent(e)
                        }, e._cleanUp = function() {
                            clearTimeout(this.delayTimeoutId), this._handleCleanUp(), this._paused = !1, createjs.Sound._playFinished(this)
                        }, e._interrupt = function() {
                            this._cleanUp(), this.playState = createjs.Sound.PLAY_INTERRUPTED, this._sendEvent("interrupted")
                        }, e._beginPlaying = function(t) {
                            return this.setPosition(t.offset), this.setLoop(t.loop), this.setVolume(t.volume), this.setPan(t.pan), null != t.startTime && (this.setStartTime(t.startTime), this.setDuration(t.duration)), null != this._playbackResource && this._position < this._duration ? (this._paused = !1, this._handleSoundReady(), this.playState = createjs.Sound.PLAY_SUCCEEDED, this._sendEvent("succeeded"), !0) : (this._playFailed(), !1)
                        }, e._playFailed = function() {
                            this._cleanUp(), this.playState = createjs.Sound.PLAY_FAILED, this._sendEvent("failed")
                        }, e._handleSoundComplete = function(t) {
                            return this._position = 0, 0 != this._loop ? (this._loop--, this._handleLoop(), void this._sendEvent("loop")) : (this._cleanUp(), this.playState = createjs.Sound.PLAY_FINISHED, void this._sendEvent("complete"))
                        }, e._handleSoundReady = function() {}, e._updateVolume = function() {}, e._updatePan = function() {}, e._updateStartTime = function() {}, e._updateDuration = function() {}, e._setDurationFromSource = function() {}, e._calculateCurrentPosition = function() {}, e._updatePosition = function() {}, e._removeLooping = function(t) {}, e._addLooping = function(t) {}, e._pause = function() {}, e._resume = function() {}, e._handleStop = function() {}, e._handleCleanUp = function() {}, e._handleLoop = function() {}, createjs.AbstractSoundInstance = createjs.promote(t, "EventDispatcher"), createjs.DefaultSoundInstance = createjs.AbstractSoundInstance
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";
                        var t = function() {
                                this._capabilities = null, this._loaders = {}, this._audioSources = {}, this._soundInstances = {}, this._volume = 1, this._loaderClass, this._soundInstanceClass
                            },
                            e = t.prototype;
                        t._capabilities = null, t.isSupported = function() {
                            return !0
                        }, e.register = function(t) {
                            var e = this._loaders[t.src];
                            return e && !e.canceled ? this._loaders[t.src] : (this._audioSources[t.src] = !0, this._soundInstances[t.src] = [], e = new this._loaderClass(t), e.on("complete", this._handlePreloadComplete, this), this._loaders[t.src] = e, e)
                        }, e.preload = function(t) {
                            t.on("error", this._handlePreloadError, this), t.load()
                        }, e.isPreloadStarted = function(t) {
                            return null != this._audioSources[t]
                        }, e.isPreloadComplete = function(t) {
                            return !(null == this._audioSources[t] || 1 == this._audioSources[t])
                        }, e.removeSound = function(t) {
                            if (this._soundInstances[t]) {
                                for (var e = this._soundInstances[t].length; e--;) {
                                    var i = this._soundInstances[t][e];
                                    i.destroy()
                                }
                                delete this._soundInstances[t], delete this._audioSources[t], this._loaders[t] && this._loaders[t].destroy(), delete this._loaders[t]
                            }
                        }, e.removeAllSounds = function() {
                            for (var t in this._audioSources) this.removeSound(t)
                        }, e.create = function(t, e, i) {
                            this.isPreloadStarted(t) || this.preload(this.register(t));
                            var n = new this._soundInstanceClass(t, e, i, this._audioSources[t]);
                            return this._soundInstances[t].push(n), n
                        }, e.setVolume = function(t) {
                            return this._volume = t, this._updateVolume(), !0
                        }, e.getVolume = function() {
                            return this._volume
                        }, e.setMute = function(t) {
                            return this._updateVolume(), !0
                        }, e.toString = function() {
                            return "[AbstractPlugin]"
                        }, e._handlePreloadComplete = function(t) {
                            var e = t.target.getItem().src;
                            this._audioSources[e] = t.result;
                            for (var i = 0, n = this._soundInstances[e].length; n > i; i++) {
                                var r = this._soundInstances[e][i];
                                r.setPlaybackResource(this._audioSources[e])
                            }
                        }, e._handlePreloadError = function(t) {}, e._updateVolume = function() {}, createjs.AbstractPlugin = t
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t) {
                            this.AbstractLoader_constructor(t, !0, createjs.AbstractLoader.SOUND)
                        }
                        var e = createjs.extend(t, createjs.AbstractLoader);
                        t.context = null, e.toString = function() {
                            return "[WebAudioLoader]"
                        }, e._createRequest = function() {
                            this._request = new createjs.XHRRequest(this._item, !1), this._request.setResponseType("arraybuffer")
                        }, e._sendComplete = function(e) {
                            t.context.decodeAudioData(this._rawResult, createjs.proxy(this._handleAudioDecoded, this), createjs.proxy(this._sendError, this))
                        }, e._handleAudioDecoded = function(t) {
                            this._result = t, this.AbstractLoader__sendComplete()
                        }, createjs.WebAudioLoader = createjs.promote(t, "AbstractLoader")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, n, r) {
                            this.AbstractSoundInstance_constructor(t, e, n, r), this.gainNode = i.context.createGain(), this.panNode = i.context.createPanner(), this.panNode.panningModel = i._panningModel, this.panNode.connect(this.gainNode), this._updatePan(), this.sourceNode = null, this._soundCompleteTimeout = null, this._sourceNodeNext = null, this._playbackStartTime = 0, this._endedHandler = createjs.proxy(this._handleSoundComplete, this)
                        }
                        var e = createjs.extend(t, createjs.AbstractSoundInstance),
                            i = t;
                        i.context = null, i._scratchBuffer = null, i.destinationNode = null, i._panningModel = "equalpower", e.destroy = function() {
                            this.AbstractSoundInstance_destroy(), this.panNode.disconnect(0), this.panNode = null, this.gainNode.disconnect(0), this.gainNode = null
                        }, e.toString = function() {
                            return "[WebAudioSoundInstance]"
                        }, e._updatePan = function() {
                            this.panNode.setPosition(this._pan, 0, -.5)
                        }, e._removeLooping = function(t) {
                            this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)
                        }, e._addLooping = function(t) {
                            this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0))
                        }, e._setDurationFromSource = function() {
                            this._duration = 1e3 * this.playbackResource.duration
                        }, e._handleCleanUp = function() {
                            this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED && (this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext)), 0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(0), clearTimeout(this._soundCompleteTimeout), this._playbackStartTime = 0
                        }, e._cleanUpAudioNode = function(t) {
                            if (t) {
                                t.stop(0), t.disconnect(0);
                                try {
                                    t.buffer = i._scratchBuffer
                                } catch (e) {}
                                t = null
                            }
                            return t
                        }, e._handleSoundReady = function(t) {
                            this.gainNode.connect(i.destinationNode);
                            var e = .001 * this._duration,
                                n = .001 * this._position;
                            n > e && (n = e), this.sourceNode = this._createAndPlayAudioNode(i.context.currentTime - e, n), this._playbackStartTime = this.sourceNode.startTime - n, this._soundCompleteTimeout = setTimeout(this._endedHandler, 1e3 * (e - n)), 0 != this._loop && (this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0))
                        }, e._createAndPlayAudioNode = function(t, e) {
                            var n = i.context.createBufferSource();
                            n.buffer = this.playbackResource, n.connect(this.panNode);
                            var r = .001 * this._duration;
                            return n.startTime = t + r, n.start(n.startTime, e + .001 * this._startTime, r - e), n
                        }, e._pause = function() {
                            this._position = 1e3 * (i.context.currentTime - this._playbackStartTime), this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), 0 != this.gainNode.numberOfOutputs && this.gainNode.disconnect(0), clearTimeout(this._soundCompleteTimeout)
                        }, e._resume = function() {
                            this._handleSoundReady()
                        }, e._updateVolume = function() {
                            var t = this._muted ? 0 : this._volume;
                            t != this.gainNode.gain.value && (this.gainNode.gain.value = t)
                        }, e._calculateCurrentPosition = function() {
                            return 1e3 * (i.context.currentTime - this._playbackStartTime)
                        }, e._updatePosition = function() {
                            this.sourceNode = this._cleanUpAudioNode(this.sourceNode), this._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext), clearTimeout(this._soundCompleteTimeout), this._paused || this._handleSoundReady()
                        }, e._handleLoop = function() {
                            this._cleanUpAudioNode(this.sourceNode), this.sourceNode = this._sourceNodeNext, this._playbackStartTime = this.sourceNode.startTime, this._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0), this._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration)
                        }, e._updateDuration = function() {
                            this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._pause(), this._resume())
                        }, createjs.WebAudioSoundInstance = createjs.promote(t, "AbstractSoundInstance")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            this.AbstractPlugin_constructor(), this._panningModel = i._panningModel, this.context = i.context, this.dynamicsCompressorNode = this.context.createDynamicsCompressor(), this.dynamicsCompressorNode.connect(this.context.destination), this.gainNode = this.context.createGain(), this.gainNode.connect(this.dynamicsCompressorNode), createjs.WebAudioSoundInstance.destinationNode = this.gainNode, this._capabilities = i._capabilities, this._loaderClass = createjs.WebAudioLoader, this._soundInstanceClass = createjs.WebAudioSoundInstance, this._addPropsToClasses()
                        }
                        var e = createjs.extend(t, createjs.AbstractPlugin),
                            i = t;
                        i._capabilities = null, i._panningModel = "equalpower", i.context = null, i._scratchBuffer = null, i._unlocked = !1, i.isSupported = function() {
                            var t = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;
                            return "file:" != location.protocol || t || this._isFileXHRSupported() ? (i._generateCapabilities(), null != i.context) : !1
                        }, i.playEmptySound = function() {
                            if (null != i.context) {
                                var t = i.context.createBufferSource();
                                t.buffer = i._scratchBuffer, t.connect(i.context.destination), t.start(0, 0, 0)
                            }
                        }, i._isFileXHRSupported = function() {
                            var t = !0,
                                e = new XMLHttpRequest;
                            try {
                                e.open("GET", "WebAudioPluginTest.fail", !1)
                            } catch (i) {
                                return t = !1
                            }
                            e.onerror = function() {
                                t = !1
                            }, e.onload = function() {
                                t = 404 == this.status || 200 == this.status || 0 == this.status && "" != this.response
                            };
                            try {
                                e.send()
                            } catch (i) {
                                t = !1
                            }
                            return t
                        }, i._generateCapabilities = function() {
                            if (null == i._capabilities) {
                                var t = document.createElement("audio");
                                if (null == t.canPlayType) return null;
                                if (null == i.context)
                                    if (window.AudioContext) i.context = new AudioContext;
                                    else {
                                        if (!window.webkitAudioContext) return null;
                                        i.context = new webkitAudioContext
                                    }
                                null == i._scratchBuffer && (i._scratchBuffer = i.context.createBuffer(1, 1, 22050)), i._compatibilitySetUp(), "ontouchstart" in window && "running" != i.context.state && (i._unlock(), document.addEventListener("mousedown", i._unlock, !0), document.addEventListener("touchend", i._unlock, !0)), i._capabilities = {
                                    panning: !0,
                                    volume: !0,
                                    tracks: -1
                                };
                                for (var e = createjs.Sound.SUPPORTED_EXTENSIONS, n = createjs.Sound.EXTENSION_MAP, r = 0, o = e.length; o > r; r++) {
                                    var a = e[r],
                                        s = n[a] || a;
                                    i._capabilities[a] = "no" != t.canPlayType("audio/" + a) && "" != t.canPlayType("audio/" + a) || "no" != t.canPlayType("audio/" + s) && "" != t.canPlayType("audio/" + s)
                                }
                                i.context.destination.numberOfChannels < 2 && (i._capabilities.panning = !1)
                            }
                        }, i._compatibilitySetUp = function() {
                            if (i._panningModel = "equalpower", !i.context.createGain) {
                                i.context.createGain = i.context.createGainNode;
                                var t = i.context.createBufferSource();
                                t.__proto__.start = t.__proto__.noteGrainOn, t.__proto__.stop = t.__proto__.noteOff, i._panningModel = 0
                            }
                        }, i._unlock = function() {
                            i._unlocked || (i.playEmptySound(), "running" == i.context.state && (document.removeEventListener("mousedown", i._unlock, !0), document.removeEventListener("touchend", i._unlock, !0), i._unlocked = !0))
                        }, e.toString = function() {
                            return "[WebAudioPlugin]"
                        }, e._addPropsToClasses = function() {
                            var t = this._soundInstanceClass;
                            t.context = this.context, t._scratchBuffer = i._scratchBuffer, t.destinationNode = this.gainNode, t._panningModel = this._panningModel, this._loaderClass.context = this.context
                        }, e._updateVolume = function() {
                            var t = createjs.Sound._masterMute ? 0 : this._volume;
                            t != this.gainNode.gain.value && (this.gainNode.gain.value = t)
                        }, createjs.WebAudioPlugin = createjs.promote(t, "AbstractPlugin")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            throw "HTMLAudioTagPool cannot be instantiated"
                        }

                        function e(t) {
                            this._tags = []
                        }
                        var i = t;
                        i._tags = {}, i._tagPool = new e, i._tagUsed = {}, i.get = function(t) {
                            var e = i._tags[t];
                            return null == e ? (e = i._tags[t] = i._tagPool.get(), e.src = t) : i._tagUsed[t] ? (e = i._tagPool.get(), e.src = t) : i._tagUsed[t] = !0, e
                        }, i.set = function(t, e) {
                            e == i._tags[t] ? i._tagUsed[t] = !1 : i._tagPool.set(e)
                        }, i.remove = function(t) {
                            var e = i._tags[t];
                            return null == e ? !1 : (i._tagPool.set(e), delete i._tags[t], delete i._tagUsed[t], !0)
                        }, i.getDuration = function(t) {
                            var e = i._tags[t];
                            return null != e && e.duration ? 1e3 * e.duration : 0
                        }, createjs.HTMLAudioTagPool = t;
                        var n = e.prototype;
                        n.constructor = e, n.get = function() {
                            var t;
                            return t = 0 == this._tags.length ? this._createTag() : this._tags.pop(), null == t.parentNode && document.body.appendChild(t), t
                        }, n.set = function(t) {
                            var e = createjs.indexOf(this._tags, t); - 1 == e && (this._tags.src = null, this._tags.push(t))
                        }, n.toString = function() {
                            return "[TagPool]"
                        }, n._createTag = function() {
                            var t = document.createElement("audio");
                            return t.autoplay = !1, t.preload = "none", t
                        }
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t(t, e, i, n) {
                            this.AbstractSoundInstance_constructor(t, e, i, n), this._audioSpriteStopTime = null, this._delayTimeoutId = null, this._endedHandler = createjs.proxy(this._handleSoundComplete, this), this._readyHandler = createjs.proxy(this._handleTagReady, this), this._stalledHandler = createjs.proxy(this._playFailed, this), this._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this), this._loopHandler = createjs.proxy(this._handleSoundComplete, this), i ? this._audioSpriteStopTime = .001 * (e + i) : this._duration = createjs.HTMLAudioTagPool.getDuration(this.src)
                        }
                        var e = createjs.extend(t, createjs.AbstractSoundInstance);
                        e.setMasterVolume = function(t) {
                            this._updateVolume()
                        }, e.setMasterMute = function(t) {
                            this._updateVolume()
                        }, e.toString = function() {
                            return "[HTMLAudioSoundInstance]"
                        }, e._removeLooping = function() {
                            null != this._playbackResource && (this._playbackResource.loop = !1, this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
                        }, e._addLooping = function() {
                            null == this._playbackResource || this._audioSpriteStopTime || (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1), this._playbackResource.loop = !0)
                        }, e._handleCleanUp = function() {
                            var t = this._playbackResource;
                            if (null != t) {
                                t.pause(), t.loop = !1, t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1), t.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1);
                                try {
                                    t.currentTime = this._startTime
                                } catch (e) {}
                                createjs.HTMLAudioTagPool.set(this.src, t), this._playbackResource = null
                            }
                        }, e._beginPlaying = function(t) {
                            return this._playbackResource = createjs.HTMLAudioTagPool.get(this.src), this.AbstractSoundInstance__beginPlaying(t)
                        }, e._handleSoundReady = function(t) {
                            if (4 !== this._playbackResource.readyState) {
                                var e = this._playbackResource;
                                return e.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), e.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1), e.preload = "auto", void e.load()
                            }
                            this._updateVolume(), this._playbackResource.currentTime = .001 * (this._startTime + this._position), this._audioSpriteStopTime ? this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1) : (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), 0 != this._loop && (this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1), this._playbackResource.loop = !0)), this._playbackResource.play()
                        }, e._handleTagReady = function(t) {
                            this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, !1), this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, !1), this._handleSoundReady()
                        }, e._pause = function() {
                            this._playbackResource.pause()
                        }, e._resume = function() {
                            this._playbackResource.play()
                        }, e._updateVolume = function() {
                            if (null != this._playbackResource) {
                                var t = this._muted || createjs.Sound._masterMute ? 0 : this._volume * createjs.Sound._masterVolume;
                                t != this._playbackResource.volume && (this._playbackResource.volume = t)
                            }
                        }, e._calculateCurrentPosition = function() {
                            return 1e3 * this._playbackResource.currentTime - this._startTime
                        }, e._updatePosition = function() {
                            this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, !1);
                            try {
                                this._playbackResource.currentTime = .001 * (this._position + this._startTime)
                            } catch (t) {
                                this._handleSetPositionSeek(null)
                            }
                        }, e._handleSetPositionSeek = function(t) {
                            null != this._playbackResource && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, !1), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
                        }, e._handleAudioSpriteLoop = function(t) {
                            this._playbackResource.currentTime <= this._audioSpriteStopTime || (this._playbackResource.pause(), 0 == this._loop ? this._handleSoundComplete(null) : (this._position = 0, this._loop--, this._playbackResource.currentTime = .001 * this._startTime, this._paused || this._playbackResource.play(), this._sendEvent("loop")))
                        }, e._handleLoop = function(t) {
                            0 == this._loop && (this._playbackResource.loop = !1, this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, !1))
                        }, e._updateStartTime = function() {
                            this._audioSpriteStopTime = .001 * (this._startTime + this._duration), this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1))
                        }, e._updateDuration = function() {
                            this._audioSpriteStopTime = .001 * (this._startTime + this._duration), this.playState == createjs.Sound.PLAY_SUCCEEDED && (this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, !1), this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, !1))
                        }, e._setDurationFromSource = function() {
                            this._duration = createjs.HTMLAudioTagPool.getDuration(this.src), this._playbackResource = null
                        }, createjs.HTMLAudioSoundInstance = createjs.promote(t, "AbstractSoundInstance")
                    }(), window.createjs = window.createjs || {},
                    function() {
                        "use strict";

                        function t() {
                            this.AbstractPlugin_constructor(), this.defaultNumChannels = 2, this._capabilities = i._capabilities, this._loaderClass = createjs.SoundLoader, this._soundInstanceClass = createjs.HTMLAudioSoundInstance
                        }
                        var e = createjs.extend(t, createjs.AbstractPlugin),
                            i = t;
                        i.MAX_INSTANCES = 30, i._AUDIO_READY = "canplaythrough", i._AUDIO_ENDED = "ended", i._AUDIO_SEEKED = "seeked", i._AUDIO_STALLED = "stalled", i._TIME_UPDATE = "timeupdate", i._capabilities = null, i.isSupported = function() {
                            return i._generateCapabilities(), null != i._capabilities
                        }, i._generateCapabilities = function() {
                            if (null == i._capabilities) {
                                var t = document.createElement("audio");
                                if (null == t.canPlayType) return null;
                                i._capabilities = {
                                    panning: !1,
                                    volume: !0,
                                    tracks: -1
                                };
                                for (var e = createjs.Sound.SUPPORTED_EXTENSIONS, n = createjs.Sound.EXTENSION_MAP, r = 0, o = e.length; o > r; r++) {
                                    var a = e[r],
                                        s = n[a] || a;
                                    i._capabilities[a] = "no" != t.canPlayType("audio/" + a) && "" != t.canPlayType("audio/" + a) || "no" != t.canPlayType("audio/" + s) && "" != t.canPlayType("audio/" + s)
                                }
                            }
                        }, e.register = function(t) {
                            var e = createjs.HTMLAudioTagPool.get(t.src),
                                i = this.AbstractPlugin_register(t);
                            return i.setTag(e), i
                        }, e.removeSound = function(t) {
                            this.AbstractPlugin_removeSound(t), createjs.HTMLAudioTagPool.remove(t)
                        }, e.create = function(t, e, i) {
                            var n = this.AbstractPlugin_create(t, e, i);
                            return n.setPlaybackResource(null), n
                        }, e.toString = function() {
                            return "[HTMLAudioPlugin]"
                        }, e.setVolume = e.getVolume = e.setMute = null, createjs.HTMLAudioPlugin = createjs.promote(t, "AbstractPlugin")
                    }(), r("undefined" != typeof createjs ? createjs : window.createjs)
            }).call(t, void 0, void 0, void 0, void 0, function(t) {
                e.exports = t
            })
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}]
}, {}, [36]);